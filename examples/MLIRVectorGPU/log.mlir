module attributes {gpu.container_module} {
  llvm.func @malloc(i64) -> !llvm.ptr
  llvm.func @printNewline()
  llvm.func @printClose()
  llvm.func @printComma()
  llvm.func @printI64(i64)
  llvm.func @printOpen()
  gpu.binary @kernels  [#gpu.object<#nvvm.target<O = 3, chip = "sm_89">, "P\EDU\BA\01\00\10\00`\0F\00\00\00\00\00\00\02\00\01\01@\00\00\00@\0D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\00\01\00Y\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\7FELF\02\01\013\07\00\00\00\00\00\00\00\02\00\BE\00~\00\00\00\00\00\00\00\00\00\00\00`\0C\00\00\00\00\00\00\A0\08\00\00\00\00\00\00Y\05Y\00@\008\00\04\00@\00\0F\00\01\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text.vector_gather\00.nv.info.vector_gather\00.nv.shared.vector_gather\00.nv.global.init\00.nv.constant4\00.nv.constant0.vector_gather\00.rel.nv.constant0.vector_gather\00.debug_frame\00.rel.nv.constant4\00.rel.debug_frame\00.rela.debug_frame\00.nv.callgraph\00.nv.prototype\00.nv.rel.action\00\00.shstrtab\00.strtab\00.symtab\00.symtab_shndx\00.nv.info\00.text.vector_gather\00.nv.info.vector_gather\00.nv.shared.vector_gather\00.nv.global.init\00gv0\00.nv.constant4\00.rel.nv.constant0.vector_gather\00.nv.constant0.vector_gather\00.debug_frame\00.rel.nv.constant4\00.rel.debug_frame\00.rela.debug_frame\00.nv.callgraph\00.nv.prototype\00.nv.rel.action\00vector_gather\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\002\00\00\00\03\00\0D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00v|\FF\FF\FF\FF\0F\0C\81\80\80(\00\08\FF\81\80(\08\81\80\80(\00\00\00\FF\FF\FF\FF4\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\01\00\00\00\00\00\00\04\04\00\00\00\048\00\00\00\0C\81\80\80(\00\04\FC\FF\FF?\00\00\00\00\00\00\00\04/\08\00\09\00\00\00\10\00\00\00\04\11\08\00\09\00\00\00\00\00\00\00\04\12\08\00\09\00\00\00\00\00\00\00\047\04\00~\00\00\00\04\0A\08\00\05\00\00\00`\01(\00\03\19(\00\04\17\0C\00\00\00\00\00\04\00 \00\00\F0!\00\04\17\0C\00\00\00\00\00\03\00\18\00\00\F0!\00\04\17\0C\00\00\00\00\00\02\00\10\00\00\F0!\00\04\17\0C\00\00\00\00\00\01\00\08\00\00\F0!\00\04\17\0C\00\00\00\00\00\00\00\00\00\00\F0!\00\03\1B\FF\00\04\1C\04\00\E0\00\00\00\00\00\00\00\FF\FF\FF\FF\00\00\00\00\FE\FF\FF\FF\00\00\00\00\FD\FF\FF\FF\00\00\00\00\FC\FF\FF\FFsz\01\00\00\0A\00\00\00\0F\00\00\00\E4\0F\00\02z\02\00\00\00\00\01\00\0F\00\00\00\E2\0F\00$v\03\FF\00\01\00\01\FF\00\8E\07\00\E2\0F\00\B9z\04\00\00F\00\00\00\0A\00\00\00\C8\0F\00\81y\0D\02\04\04\00\00\00\19\1E\0C\00\A8\0E\00\81y\0B\02\04\08\00\00\00\19\1E\0C\00\E8\0E\00\81y\09\02\04\10\00\00\00\19\1E\0C\00(\0F\00\81y\07\02\04\0C\00\00\00\19\1E\0C\00b\0F\00\02z\04\00\00Z\00\00\00\0F\00\00\00\E2\0F\00$v\05\FF\00[\00\00\FF\00\8E\07\00\CA\0F\00\86y\00\04\0D\0C\00\00\04\19\10\0C\00\E8O\00\86y\00\04\0B\08\00\00\04\19\10\0C\00\E8\8F\00\86y\00\04\09\04\00\00\04\19\10\0C\00\E8\0F\01\86y\00\04\07\00\00\00\04\19\10\0C\00\E2\0F\02My\00\00\00\00\00\00\00\00\80\03\00\EA\0F\00Gy\00\00\F0\FF\FF\FF\FF\FF\83\03\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y\00\00\00\00\00\00\00\00\00\00\00\C0\0F\00\18y}\01\00\00\00\00\00\00O\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\D0\02\00\00\00\00\00\00\F0\00\00\00\00\00\00\00\02\00\00\00\09\00\00\00\08\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\D0\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C0\03\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\04\00\00\00\00\00\00$\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\00\00\00p@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00T\04\00\00\00\00\00\00t\00\00\00\00\00\00\00\03\00\00\00\0D\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\01\00\00\01\00\00p\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\C8\04\00\00\00\00\00\00 \00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00.\01\00\00\0B\00\00pv\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\08\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\05\00\00\00`\0C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\E0\00\00\00\00\00\00\00\E0\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\05\00\00\00\18\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00h\03\00\00\00\00\00\00h\03\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00\80\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\00\00\05\00\00\00`\0C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\E0\00\00\00\00\00\00\00\E0\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\01\00\01\01P\00\00\00\90\01\00\00\00\00\00\00\8D\01\00\00@\00\00\00\08\00\07\00Y\00\00\00\00\00\00\00\00\00\00\00\11 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\E8\02\00\00\00\00\00\00H\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\0A//\03\00\F0\1E\0A.version 7.8\0A.target sm_89\0A.address_size 64\0A1\00\F5\14.global .align 4 .b8 gv0[32] = {0, \03\00\141\09\00D0, 2\09\00D0, 3\09\00D0, 4\09\00D0, 5\09\00D0, 6\09\00D0, 7\09\0000};\B2\00\FA\19isible .entry vector_gather(\0A.param .u64\1B\00\11_\19\00?_0,#\00\0E\1F1#\00\0F\1F2#\00\0F\1F3#\00\0F\F4\074\0A)\0A{\0A.reg .b32 %r<5>;\11\00\E264 %rd<3>;\0A\0AldL\00\22.u\16\00O1, [R\00\01\B31];\0Acvta.to\AA\01\042\00!2,8\00\10;K\00\04\1A\00\01s\00\00K\00~gv0+12]\1D\00\142\1D\00\1F6\1D\00\00\133\1D\00\1F8\1C\00\00\134\1C\00h4];\0Ast\1C\00\10[\8D\00\00n\00\00\91\00\1F4\1E\00\03\118\1D\00\1F3\1D\00\03\114\1D\00\1F2\1D\00\02\01\1B\00\C01;\0Aret;\0A\0A}\0A\00\00\00\00">]
  llvm.func @main() {
    %0 = llvm.mlir.constant(0 : index) : i64
    %1 = llvm.mlir.constant(4 : index) : i64
    %2 = llvm.mlir.constant(1 : index) : i64
    %3 = llvm.mlir.constant(3 : index) : i64
    %4 = llvm.mlir.constant(4 : index) : i64
    %5 = llvm.mlir.constant(1 : index) : i64
    %6 = llvm.mlir.zero : !llvm.ptr
    %7 = llvm.getelementptr %6[4] : (!llvm.ptr) -> !llvm.ptr, i32
    %8 = llvm.ptrtoint %7 : !llvm.ptr to i64
    %9 = llvm.call @malloc(%8) : (i64) -> !llvm.ptr
    %10 = llvm.mlir.undef : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)>
    %11 = llvm.insertvalue %9, %10[0] : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> 
    %12 = llvm.insertvalue %9, %11[1] : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> 
    %13 = llvm.mlir.constant(0 : index) : i64
    %14 = llvm.insertvalue %13, %12[2] : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> 
    %15 = llvm.insertvalue %4, %14[3, 0] : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> 
    %16 = llvm.insertvalue %5, %15[4, 0] : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> 
    %17 = llvm.mlir.constant(1 : index) : i64
    %18 = llvm.alloca %17 x !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> : (i64) -> !llvm.ptr
    llvm.store %16, %18 : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)>, !llvm.ptr
    %19 = llvm.mlir.constant(1 : index) : i64
    %20 = llvm.mlir.undef : !llvm.struct<(i64, ptr)>
    %21 = llvm.insertvalue %19, %20[0] : !llvm.struct<(i64, ptr)> 
    %22 = llvm.insertvalue %18, %21[1] : !llvm.struct<(i64, ptr)> 
    %23 = llvm.mlir.zero : !llvm.ptr
    %24 = llvm.getelementptr %23[1] : (!llvm.ptr) -> !llvm.ptr, i32
    %25 = llvm.ptrtoint %24 : !llvm.ptr to i64
    llvm.call @mgpuMemHostRegisterMemRef(%19, %18, %25) : (i64, !llvm.ptr, i64) -> ()
    gpu.launch_func  @kernels::@vector_gather blocks in (%2, %2, %2) threads in (%2, %2, %2) : i64 args(%9 : !llvm.ptr, %9 : !llvm.ptr, %13 : i64, %4 : i64, %5 : i64)
    %26 = llvm.extractvalue %16[1] : !llvm.struct<(ptr, ptr, i64, array<1 x i64>, array<1 x i64>)> 
    %27 = llvm.getelementptr %26[%0] : (!llvm.ptr, i64) -> !llvm.ptr, i32
    %28 = llvm.load %27 {alignment = 4 : i64} : !llvm.ptr -> vector<4xi32>
    llvm.call @printOpen() : () -> ()
    llvm.br ^bb1(%0 : i64)
  ^bb1(%29: i64):  // 2 preds: ^bb0, ^bb4
    %30 = llvm.icmp "slt" %29, %1 : i64
    llvm.cond_br %30, ^bb2, ^bb5
  ^bb2:  // pred: ^bb1
    %31 = llvm.extractelement %28[%29 : i64] : vector<4xi32>
    %32 = llvm.sext %31 : i32 to i64
    llvm.call @printI64(%32) : (i64) -> ()
    %33 = llvm.icmp "ult" %29, %3 : i64
    llvm.cond_br %33, ^bb3, ^bb4
  ^bb3:  // pred: ^bb2
    llvm.call @printComma() : () -> ()
    llvm.br ^bb4
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %34 = llvm.add %29, %2  : i64
    llvm.br ^bb1(%34 : i64)
  ^bb5:  // pred: ^bb1
    llvm.call @printClose() : () -> ()
    llvm.call @printNewline() : () -> ()
    llvm.return
  }
  llvm.func @mgpuMemHostRegisterMemRef(i64, !llvm.ptr, i64)
}

