#map = affine_map<(d0, d1, d2) -> (d1)>
#map1 = affine_map<(d0, d1, d2) -> (d0, d2)>
#map2 = affine_map<(d0, d1, d2) -> (d0, d1)>
#map3 = affine_map<(d0, d1) -> (d0, d1)>
#map4 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>
#map5 = affine_map<(d0, d1, d2) -> (d0, d1, d2)>
#map6 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2)>
#map7 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d3)>
#map8 = affine_map<(d0, d1) -> (d1, d0)>
#map9 = affine_map<(d0, d1, d2, d3) -> (d0, d2, d1, d3)>
#map10 = affine_map<(d0, d1, d2) -> (d0, 0, d1, d2)>
#map11 = affine_map<(d0, d1) -> (0, d0, d1)>
#map12 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d3, d2)>
#map13 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, 0)>
"builtin.module"() ({
  "func.func"() <{function_type = (tensor<6755192832xbf16>, tensor<1x40xi64>) -> (tensor<1x40x32000xf32>, tensor<1x40x4096xbf16>), sym_name = "forward"}> ({
  ^bb0(%arg0: tensor<6755192832xbf16>, %arg1: tensor<1x40xi64>):
    %0 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %1 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4096>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %2 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 8192>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %3 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 12288>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %4 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 16384>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %5 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 20480>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %6 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 24576>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %7 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 28672>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %8 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 32768>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %9 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 36864>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %10 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 40960>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %11 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 45056>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %12 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 49152>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %13 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 53248>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %14 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 57344>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %15 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 61440>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %16 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 65536>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %17 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 69632>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %18 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 73728>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %19 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 77824>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %20 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 81920>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %21 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 86016>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %22 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 90112>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %23 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 94208>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %24 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 98304>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %25 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 102400>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %26 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 106496>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %27 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 110592>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %28 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 114688>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %29 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 118784>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %30 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 122880>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %31 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 126976>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %32 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 131072>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %33 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 135168>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %34 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 139264>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %35 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 143360>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %36 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 147456>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %37 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 151552>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %38 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 155648>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %39 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 159744>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %40 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 163840>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %41 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 167936>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %42 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 172032>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %43 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 176128>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %44 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 180224>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %45 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 184320>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %46 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 188416>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %47 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 192512>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %48 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 196608>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %49 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 200704>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %50 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 204800>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %51 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 208896>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %52 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 212992>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %53 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 217088>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %54 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 221184>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %55 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 225280>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %56 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 229376>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %57 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 233472>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %58 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 237568>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %59 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 241664>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %60 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 245760>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %61 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 249856>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %62 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 253952>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %63 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 258048>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %64 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 262144>, static_sizes = array<i64: 4096>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<4096xbf16>
    %65 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 266240>, static_sizes = array<i64: 131072000>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<131072000xbf16>
    %66 = "tensor.expand_shape"(%65) <{reassociation = [[0, 1]]}> : (tensor<131072000xbf16>) -> tensor<32000x4096xbf16>
    %67 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 131338240>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %68 = "tensor.expand_shape"(%67) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %69 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 148115456>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %70 = "tensor.expand_shape"(%69) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %71 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 164892672>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %72 = "tensor.expand_shape"(%71) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %73 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 181669888>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %74 = "tensor.expand_shape"(%73) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %75 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 198447104>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %76 = "tensor.expand_shape"(%75) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %77 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 243535872>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %78 = "tensor.expand_shape"(%77) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %79 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 288624640>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %80 = "tensor.expand_shape"(%79) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %81 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 333713408>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %82 = "tensor.expand_shape"(%81) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %83 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 350490624>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %84 = "tensor.expand_shape"(%83) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %85 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 367267840>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %86 = "tensor.expand_shape"(%85) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %87 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 384045056>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %88 = "tensor.expand_shape"(%87) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %89 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 400822272>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %90 = "tensor.expand_shape"(%89) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %91 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 445911040>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %92 = "tensor.expand_shape"(%91) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %93 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 490999808>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %94 = "tensor.expand_shape"(%93) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %95 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 536088576>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %96 = "tensor.expand_shape"(%95) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %97 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 552865792>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %98 = "tensor.expand_shape"(%97) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %99 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 569643008>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %100 = "tensor.expand_shape"(%99) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %101 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 586420224>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %102 = "tensor.expand_shape"(%101) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %103 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 603197440>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %104 = "tensor.expand_shape"(%103) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %105 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 648286208>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %106 = "tensor.expand_shape"(%105) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %107 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 693374976>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %108 = "tensor.expand_shape"(%107) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %109 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 738463744>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %110 = "tensor.expand_shape"(%109) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %111 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 755240960>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %112 = "tensor.expand_shape"(%111) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %113 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 772018176>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %114 = "tensor.expand_shape"(%113) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %115 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 788795392>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %116 = "tensor.expand_shape"(%115) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %117 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 805572608>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %118 = "tensor.expand_shape"(%117) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %119 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 850661376>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %120 = "tensor.expand_shape"(%119) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %121 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 895750144>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %122 = "tensor.expand_shape"(%121) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %123 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 940838912>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %124 = "tensor.expand_shape"(%123) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %125 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 957616128>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %126 = "tensor.expand_shape"(%125) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %127 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 974393344>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %128 = "tensor.expand_shape"(%127) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %129 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 991170560>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %130 = "tensor.expand_shape"(%129) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %131 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1007947776>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %132 = "tensor.expand_shape"(%131) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %133 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1053036544>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %134 = "tensor.expand_shape"(%133) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %135 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1098125312>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %136 = "tensor.expand_shape"(%135) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %137 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1143214080>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %138 = "tensor.expand_shape"(%137) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %139 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1159991296>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %140 = "tensor.expand_shape"(%139) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %141 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1176768512>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %142 = "tensor.expand_shape"(%141) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %143 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1193545728>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %144 = "tensor.expand_shape"(%143) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %145 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1210322944>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %146 = "tensor.expand_shape"(%145) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %147 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1255411712>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %148 = "tensor.expand_shape"(%147) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %149 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1300500480>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %150 = "tensor.expand_shape"(%149) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %151 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1345589248>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %152 = "tensor.expand_shape"(%151) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %153 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1362366464>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %154 = "tensor.expand_shape"(%153) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %155 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1379143680>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %156 = "tensor.expand_shape"(%155) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %157 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1395920896>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %158 = "tensor.expand_shape"(%157) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %159 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1412698112>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %160 = "tensor.expand_shape"(%159) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %161 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1457786880>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %162 = "tensor.expand_shape"(%161) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %163 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1502875648>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %164 = "tensor.expand_shape"(%163) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %165 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1547964416>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %166 = "tensor.expand_shape"(%165) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %167 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1564741632>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %168 = "tensor.expand_shape"(%167) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %169 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1581518848>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %170 = "tensor.expand_shape"(%169) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %171 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1598296064>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %172 = "tensor.expand_shape"(%171) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %173 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1615073280>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %174 = "tensor.expand_shape"(%173) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %175 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1660162048>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %176 = "tensor.expand_shape"(%175) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %177 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1705250816>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %178 = "tensor.expand_shape"(%177) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %179 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1750339584>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %180 = "tensor.expand_shape"(%179) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %181 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1767116800>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %182 = "tensor.expand_shape"(%181) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %183 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1783894016>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %184 = "tensor.expand_shape"(%183) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %185 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1800671232>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %186 = "tensor.expand_shape"(%185) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %187 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1817448448>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %188 = "tensor.expand_shape"(%187) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %189 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1862537216>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %190 = "tensor.expand_shape"(%189) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %191 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1907625984>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %192 = "tensor.expand_shape"(%191) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %193 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1952714752>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %194 = "tensor.expand_shape"(%193) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %195 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1969491968>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %196 = "tensor.expand_shape"(%195) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %197 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 1986269184>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %198 = "tensor.expand_shape"(%197) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %199 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2003046400>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %200 = "tensor.expand_shape"(%199) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %201 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2019823616>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %202 = "tensor.expand_shape"(%201) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %203 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2064912384>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %204 = "tensor.expand_shape"(%203) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %205 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2110001152>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %206 = "tensor.expand_shape"(%205) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %207 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2155089920>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %208 = "tensor.expand_shape"(%207) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %209 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2171867136>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %210 = "tensor.expand_shape"(%209) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %211 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2188644352>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %212 = "tensor.expand_shape"(%211) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %213 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2205421568>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %214 = "tensor.expand_shape"(%213) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %215 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2222198784>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %216 = "tensor.expand_shape"(%215) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %217 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2267287552>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %218 = "tensor.expand_shape"(%217) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %219 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2312376320>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %220 = "tensor.expand_shape"(%219) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %221 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2357465088>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %222 = "tensor.expand_shape"(%221) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %223 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2374242304>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %224 = "tensor.expand_shape"(%223) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %225 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2391019520>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %226 = "tensor.expand_shape"(%225) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %227 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2407796736>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %228 = "tensor.expand_shape"(%227) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %229 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2424573952>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %230 = "tensor.expand_shape"(%229) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %231 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2469662720>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %232 = "tensor.expand_shape"(%231) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %233 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2514751488>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %234 = "tensor.expand_shape"(%233) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %235 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2559840256>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %236 = "tensor.expand_shape"(%235) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %237 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2576617472>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %238 = "tensor.expand_shape"(%237) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %239 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2593394688>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %240 = "tensor.expand_shape"(%239) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %241 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2610171904>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %242 = "tensor.expand_shape"(%241) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %243 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2626949120>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %244 = "tensor.expand_shape"(%243) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %245 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2672037888>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %246 = "tensor.expand_shape"(%245) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %247 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2717126656>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %248 = "tensor.expand_shape"(%247) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %249 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2762215424>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %250 = "tensor.expand_shape"(%249) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %251 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2778992640>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %252 = "tensor.expand_shape"(%251) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %253 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2795769856>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %254 = "tensor.expand_shape"(%253) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %255 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2812547072>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %256 = "tensor.expand_shape"(%255) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %257 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2829324288>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %258 = "tensor.expand_shape"(%257) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %259 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2874413056>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %260 = "tensor.expand_shape"(%259) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %261 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2919501824>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %262 = "tensor.expand_shape"(%261) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %263 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2964590592>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %264 = "tensor.expand_shape"(%263) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %265 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2981367808>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %266 = "tensor.expand_shape"(%265) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %267 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 2998145024>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %268 = "tensor.expand_shape"(%267) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %269 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3014922240>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %270 = "tensor.expand_shape"(%269) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %271 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3031699456>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %272 = "tensor.expand_shape"(%271) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %273 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3076788224>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %274 = "tensor.expand_shape"(%273) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %275 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3121876992>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %276 = "tensor.expand_shape"(%275) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %277 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3166965760>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %278 = "tensor.expand_shape"(%277) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %279 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3183742976>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %280 = "tensor.expand_shape"(%279) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %281 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3200520192>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %282 = "tensor.expand_shape"(%281) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %283 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3217297408>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %284 = "tensor.expand_shape"(%283) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %285 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3234074624>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %286 = "tensor.expand_shape"(%285) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %287 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3279163392>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %288 = "tensor.expand_shape"(%287) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %289 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3324252160>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %290 = "tensor.expand_shape"(%289) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %291 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3369340928>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %292 = "tensor.expand_shape"(%291) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %293 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3386118144>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %294 = "tensor.expand_shape"(%293) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %295 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3402895360>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %296 = "tensor.expand_shape"(%295) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %297 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3419672576>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %298 = "tensor.expand_shape"(%297) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %299 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3436449792>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %300 = "tensor.expand_shape"(%299) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %301 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3481538560>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %302 = "tensor.expand_shape"(%301) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %303 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3526627328>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %304 = "tensor.expand_shape"(%303) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %305 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3571716096>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %306 = "tensor.expand_shape"(%305) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %307 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3588493312>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %308 = "tensor.expand_shape"(%307) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %309 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3605270528>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %310 = "tensor.expand_shape"(%309) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %311 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3622047744>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %312 = "tensor.expand_shape"(%311) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %313 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3638824960>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %314 = "tensor.expand_shape"(%313) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %315 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3683913728>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %316 = "tensor.expand_shape"(%315) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %317 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3729002496>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %318 = "tensor.expand_shape"(%317) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %319 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3774091264>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %320 = "tensor.expand_shape"(%319) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %321 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3790868480>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %322 = "tensor.expand_shape"(%321) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %323 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3807645696>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %324 = "tensor.expand_shape"(%323) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %325 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3824422912>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %326 = "tensor.expand_shape"(%325) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %327 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3841200128>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %328 = "tensor.expand_shape"(%327) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %329 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3886288896>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %330 = "tensor.expand_shape"(%329) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %331 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3931377664>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %332 = "tensor.expand_shape"(%331) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %333 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3976466432>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %334 = "tensor.expand_shape"(%333) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %335 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 3993243648>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %336 = "tensor.expand_shape"(%335) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %337 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4010020864>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %338 = "tensor.expand_shape"(%337) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %339 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4026798080>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %340 = "tensor.expand_shape"(%339) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %341 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4043575296>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %342 = "tensor.expand_shape"(%341) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %343 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4088664064>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %344 = "tensor.expand_shape"(%343) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %345 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4133752832>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %346 = "tensor.expand_shape"(%345) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %347 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4178841600>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %348 = "tensor.expand_shape"(%347) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %349 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4195618816>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %350 = "tensor.expand_shape"(%349) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %351 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4212396032>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %352 = "tensor.expand_shape"(%351) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %353 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4229173248>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %354 = "tensor.expand_shape"(%353) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %355 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4245950464>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %356 = "tensor.expand_shape"(%355) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %357 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4291039232>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %358 = "tensor.expand_shape"(%357) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %359 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4336128000>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %360 = "tensor.expand_shape"(%359) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %361 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4381216768>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %362 = "tensor.expand_shape"(%361) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %363 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4397993984>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %364 = "tensor.expand_shape"(%363) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %365 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4414771200>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %366 = "tensor.expand_shape"(%365) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %367 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4431548416>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %368 = "tensor.expand_shape"(%367) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %369 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4448325632>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %370 = "tensor.expand_shape"(%369) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %371 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4493414400>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %372 = "tensor.expand_shape"(%371) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %373 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4538503168>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %374 = "tensor.expand_shape"(%373) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %375 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4583591936>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %376 = "tensor.expand_shape"(%375) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %377 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4600369152>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %378 = "tensor.expand_shape"(%377) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %379 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4617146368>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %380 = "tensor.expand_shape"(%379) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %381 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4633923584>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %382 = "tensor.expand_shape"(%381) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %383 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4650700800>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %384 = "tensor.expand_shape"(%383) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %385 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4695789568>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %386 = "tensor.expand_shape"(%385) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %387 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4740878336>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %388 = "tensor.expand_shape"(%387) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %389 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4785967104>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %390 = "tensor.expand_shape"(%389) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %391 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4802744320>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %392 = "tensor.expand_shape"(%391) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %393 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4819521536>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %394 = "tensor.expand_shape"(%393) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %395 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4836298752>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %396 = "tensor.expand_shape"(%395) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %397 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4853075968>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %398 = "tensor.expand_shape"(%397) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %399 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4898164736>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %400 = "tensor.expand_shape"(%399) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %401 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4943253504>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %402 = "tensor.expand_shape"(%401) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %403 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 4988342272>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %404 = "tensor.expand_shape"(%403) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %405 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5005119488>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %406 = "tensor.expand_shape"(%405) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %407 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5021896704>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %408 = "tensor.expand_shape"(%407) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %409 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5038673920>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %410 = "tensor.expand_shape"(%409) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %411 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5055451136>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %412 = "tensor.expand_shape"(%411) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %413 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5100539904>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %414 = "tensor.expand_shape"(%413) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %415 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5145628672>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %416 = "tensor.expand_shape"(%415) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %417 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5190717440>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %418 = "tensor.expand_shape"(%417) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %419 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5207494656>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %420 = "tensor.expand_shape"(%419) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %421 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5224271872>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %422 = "tensor.expand_shape"(%421) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %423 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5241049088>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %424 = "tensor.expand_shape"(%423) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %425 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5257826304>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %426 = "tensor.expand_shape"(%425) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %427 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5302915072>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %428 = "tensor.expand_shape"(%427) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %429 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5348003840>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %430 = "tensor.expand_shape"(%429) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %431 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5393092608>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %432 = "tensor.expand_shape"(%431) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %433 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5409869824>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %434 = "tensor.expand_shape"(%433) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %435 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5426647040>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %436 = "tensor.expand_shape"(%435) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %437 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5443424256>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %438 = "tensor.expand_shape"(%437) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %439 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5460201472>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %440 = "tensor.expand_shape"(%439) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %441 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5505290240>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %442 = "tensor.expand_shape"(%441) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %443 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5550379008>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %444 = "tensor.expand_shape"(%443) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %445 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5595467776>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %446 = "tensor.expand_shape"(%445) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %447 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5612244992>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %448 = "tensor.expand_shape"(%447) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %449 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5629022208>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %450 = "tensor.expand_shape"(%449) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %451 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5645799424>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %452 = "tensor.expand_shape"(%451) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %453 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5662576640>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %454 = "tensor.expand_shape"(%453) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %455 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5707665408>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %456 = "tensor.expand_shape"(%455) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %457 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5752754176>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %458 = "tensor.expand_shape"(%457) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %459 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5797842944>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %460 = "tensor.expand_shape"(%459) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %461 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5814620160>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %462 = "tensor.expand_shape"(%461) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %463 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5831397376>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %464 = "tensor.expand_shape"(%463) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %465 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5848174592>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %466 = "tensor.expand_shape"(%465) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %467 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5864951808>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %468 = "tensor.expand_shape"(%467) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %469 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5910040576>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %470 = "tensor.expand_shape"(%469) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %471 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 5955129344>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %472 = "tensor.expand_shape"(%471) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %473 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6000218112>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %474 = "tensor.expand_shape"(%473) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %475 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6016995328>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %476 = "tensor.expand_shape"(%475) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %477 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6033772544>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %478 = "tensor.expand_shape"(%477) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %479 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6050549760>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %480 = "tensor.expand_shape"(%479) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %481 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6067326976>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %482 = "tensor.expand_shape"(%481) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %483 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6112415744>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %484 = "tensor.expand_shape"(%483) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %485 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6157504512>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %486 = "tensor.expand_shape"(%485) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %487 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6202593280>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %488 = "tensor.expand_shape"(%487) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %489 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6219370496>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %490 = "tensor.expand_shape"(%489) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %491 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6236147712>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %492 = "tensor.expand_shape"(%491) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %493 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6252924928>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %494 = "tensor.expand_shape"(%493) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %495 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6269702144>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %496 = "tensor.expand_shape"(%495) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %497 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6314790912>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %498 = "tensor.expand_shape"(%497) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %499 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6359879680>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %500 = "tensor.expand_shape"(%499) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %501 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6404968448>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %502 = "tensor.expand_shape"(%501) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %503 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6421745664>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %504 = "tensor.expand_shape"(%503) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %505 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6438522880>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %506 = "tensor.expand_shape"(%505) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %507 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6455300096>, static_sizes = array<i64: 16777216>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<16777216xbf16>
    %508 = "tensor.expand_shape"(%507) <{reassociation = [[0, 1]]}> : (tensor<16777216xbf16>) -> tensor<4096x4096xbf16>
    %509 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6472077312>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %510 = "tensor.expand_shape"(%509) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %511 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6517166080>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %512 = "tensor.expand_shape"(%511) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<11008x4096xbf16>
    %513 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6562254848>, static_sizes = array<i64: 45088768>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<45088768xbf16>
    %514 = "tensor.expand_shape"(%513) <{reassociation = [[0, 1]]}> : (tensor<45088768xbf16>) -> tensor<4096x11008xbf16>
    %515 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6607343616>, static_sizes = array<i64: 131072000>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<131072000xbf16>
    %516 = "tensor.expand_shape"(%515) <{reassociation = [[0, 1]]}> : (tensor<131072000xbf16>) -> tensor<32000x4096xbf16>
    %517 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6738415616>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %518 = "tensor.expand_shape"(%517) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %519 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6738677760>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %520 = "tensor.expand_shape"(%519) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %521 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6738939904>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %522 = "tensor.expand_shape"(%521) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %523 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6739202048>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %524 = "tensor.expand_shape"(%523) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %525 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6739464192>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %526 = "tensor.expand_shape"(%525) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %527 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6739726336>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %528 = "tensor.expand_shape"(%527) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %529 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6739988480>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %530 = "tensor.expand_shape"(%529) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %531 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6740250624>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %532 = "tensor.expand_shape"(%531) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %533 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6740512768>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %534 = "tensor.expand_shape"(%533) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %535 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6740774912>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %536 = "tensor.expand_shape"(%535) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %537 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6741037056>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %538 = "tensor.expand_shape"(%537) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %539 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6741299200>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %540 = "tensor.expand_shape"(%539) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %541 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6741561344>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %542 = "tensor.expand_shape"(%541) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %543 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6741823488>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %544 = "tensor.expand_shape"(%543) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %545 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6742085632>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %546 = "tensor.expand_shape"(%545) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %547 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6742347776>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %548 = "tensor.expand_shape"(%547) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %549 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6742609920>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %550 = "tensor.expand_shape"(%549) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %551 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6742872064>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %552 = "tensor.expand_shape"(%551) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %553 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6743134208>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %554 = "tensor.expand_shape"(%553) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %555 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6743396352>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %556 = "tensor.expand_shape"(%555) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %557 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6743658496>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %558 = "tensor.expand_shape"(%557) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %559 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6743920640>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %560 = "tensor.expand_shape"(%559) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %561 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6744182784>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %562 = "tensor.expand_shape"(%561) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %563 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6744444928>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %564 = "tensor.expand_shape"(%563) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %565 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6744707072>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %566 = "tensor.expand_shape"(%565) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %567 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6744969216>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %568 = "tensor.expand_shape"(%567) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %569 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6745231360>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %570 = "tensor.expand_shape"(%569) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %571 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6745493504>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %572 = "tensor.expand_shape"(%571) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %573 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6745755648>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %574 = "tensor.expand_shape"(%573) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %575 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6746017792>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %576 = "tensor.expand_shape"(%575) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %577 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6746279936>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %578 = "tensor.expand_shape"(%577) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %579 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6746542080>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %580 = "tensor.expand_shape"(%579) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %581 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6746804224>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %582 = "tensor.expand_shape"(%581) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %583 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6747066368>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %584 = "tensor.expand_shape"(%583) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %585 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6747328512>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %586 = "tensor.expand_shape"(%585) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %587 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6747590656>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %588 = "tensor.expand_shape"(%587) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %589 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6747852800>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %590 = "tensor.expand_shape"(%589) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %591 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6748114944>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %592 = "tensor.expand_shape"(%591) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %593 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6748377088>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %594 = "tensor.expand_shape"(%593) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %595 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6748639232>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %596 = "tensor.expand_shape"(%595) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %597 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6748901376>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %598 = "tensor.expand_shape"(%597) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %599 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6749163520>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %600 = "tensor.expand_shape"(%599) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %601 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6749425664>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %602 = "tensor.expand_shape"(%601) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %603 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6749687808>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %604 = "tensor.expand_shape"(%603) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %605 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6749949952>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %606 = "tensor.expand_shape"(%605) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %607 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6750212096>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %608 = "tensor.expand_shape"(%607) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %609 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6750474240>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %610 = "tensor.expand_shape"(%609) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %611 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6750736384>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %612 = "tensor.expand_shape"(%611) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %613 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6750998528>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %614 = "tensor.expand_shape"(%613) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %615 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6751260672>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %616 = "tensor.expand_shape"(%615) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %617 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6751522816>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %618 = "tensor.expand_shape"(%617) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %619 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6751784960>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %620 = "tensor.expand_shape"(%619) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %621 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6752047104>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %622 = "tensor.expand_shape"(%621) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %623 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6752309248>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %624 = "tensor.expand_shape"(%623) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %625 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6752571392>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %626 = "tensor.expand_shape"(%625) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %627 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6752833536>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %628 = "tensor.expand_shape"(%627) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %629 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6753095680>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %630 = "tensor.expand_shape"(%629) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %631 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6753357824>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %632 = "tensor.expand_shape"(%631) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %633 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6753619968>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %634 = "tensor.expand_shape"(%633) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %635 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6753882112>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %636 = "tensor.expand_shape"(%635) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %637 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6754144256>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %638 = "tensor.expand_shape"(%637) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %639 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6754406400>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %640 = "tensor.expand_shape"(%639) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %641 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6754668544>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %642 = "tensor.expand_shape"(%641) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %643 = "tensor.extract_slice"(%arg0) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 6754930688>, static_sizes = array<i64: 262144>, static_strides = array<i64: 1>}> : (tensor<6755192832xbf16>) -> tensor<262144xbf16>
    %644 = "tensor.expand_shape"(%643) <{reassociation = [[0, 1, 2, 3]]}> : (tensor<262144xbf16>) -> tensor<1x1x2048x128xbf16>
    %645 = "arith.constant"() <{value = dense<[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]> : tensor<40xi64>}> : () -> tensor<40xi64>
    %646 = "tosa.reshape"(%645) <{new_shape = array<i64: 1, 40>}> : (tensor<40xi64>) -> tensor<1x40xi64>
    %647 = "tosa.reshape"(%646) <{new_shape = array<i64: 1, 40>}> : (tensor<1x40xi64>) -> tensor<1x40xi64>
    %648 = "tosa.cast"(%arg1) : (tensor<1x40xi64>) -> tensor<1x40xi32>
    %649 = "tosa.reshape"(%66) <{new_shape = array<i64: 1, 32000, 4096>}> : (tensor<32000x4096xbf16>) -> tensor<1x32000x4096xbf16>
    %650 = "tosa.gather"(%649, %648) : (tensor<1x32000x4096xbf16>, tensor<1x40xi32>) -> tensor<1x40x4096xbf16>
    %651 = "tosa.reshape"(%650) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %652 = "arith.constant"() <{value = dense<true> : tensor<1x40xi1>}> : () -> tensor<1x40xi1>
    %653 = "arith.constant"() <{value = dense<-3.38953139E+38> : tensor<40x40xf32>}> : () -> tensor<40x40xf32>
    %654 = "arith.constant"() <{value = dense<[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]> : tensor<40xi64>}> : () -> tensor<40xi64>
    %655 = "tosa.const"() <{value = dense<1> : tensor<40xi64>}> : () -> tensor<40xi64>
    %656 = "tosa.add"(%654, %655) : (tensor<40xi64>, tensor<40xi64>) -> tensor<40xi64>
    %657 = "tosa.reshape"(%656) <{new_shape = array<i64: 40, 1>}> : (tensor<40xi64>) -> tensor<40x1xi64>
    %658 = "tensor.empty"() : () -> tensor<40x40xi1>
    %659 = "linalg.generic"(%654, %657, %658) <{indexing_maps = [#map, #map1, #map2], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: i64, %arg3: i64, %arg4: i1):
      %6023 = "arith.cmpi"(%arg2, %arg3) <{predicate = 2 : i64}> : (i64, i64) -> i1
      "linalg.yield"(%6023) : (i1) -> ()
    }) : (tensor<40xi64>, tensor<40x1xi64>, tensor<40x40xi1>) -> tensor<40x40xi1>
    %660 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
    %661 = "tensor.empty"() : () -> tensor<40x40xf32>
    %662 = "linalg.generic"(%653, %659, %661) <{indexing_maps = [#map3, #map3, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: i1, %arg4: f32):
      %6023 = "arith.select"(%arg3, %660, %arg2) : (i1, f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<40x40xf32>, tensor<40x40xi1>, tensor<40x40xf32>) -> tensor<40x40xf32>
    %663 = "tensor.empty"() : () -> tensor<40x40xbf16>
    %664 = "linalg.generic"(%662, %663) <{indexing_maps = [#map3, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<40x40xf32>, tensor<40x40xbf16>) -> tensor<40x40xbf16>
    %665 = "tosa.reshape"(%664) <{new_shape = array<i64: 1, 40, 40>}> : (tensor<40x40xbf16>) -> tensor<1x40x40xbf16>
    %666 = "tosa.reshape"(%665) <{new_shape = array<i64: 1, 1, 40, 40>}> : (tensor<1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %667 = "tensor.extract_slice"(%666) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 40>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %668 = "tensor.extract_slice"(%667) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 40>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %669 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x1x40x40xbf16>}> : () -> tensor<1x1x40x40xbf16>
    %670 = "tosa.add"(%668, %669) : (tensor<1x1x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %671 = "tensor.extract_slice"(%652) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0>, static_sizes = array<i64: 1, 40>, static_strides = array<i64: 1, 1>}> : (tensor<1x40xi1>) -> tensor<1x40xi1>
    %672 = "tosa.reshape"(%671) <{new_shape = array<i64: 1, 1, 40>}> : (tensor<1x40xi1>) -> tensor<1x1x40xi1>
    %673 = "tosa.reshape"(%672) <{new_shape = array<i64: 1, 1, 1, 40>}> : (tensor<1x1x40xi1>) -> tensor<1x1x1x40xi1>
    %674 = "tensor.extract_slice"(%673) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 40>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x1x40xi1>) -> tensor<1x1x1x40xi1>
    %675 = "tosa.const"() <{value = dense<false> : tensor<1x1x40x40xi1>}> : () -> tensor<1x1x40x40xi1>
    %676 = "tosa.add"(%674, %675) : (tensor<1x1x1x40xi1>, tensor<1x1x40x40xi1>) -> tensor<1x1x40x40xi1>
    %677 = "tensor.empty"() : () -> tensor<1x1x40x40xbf16>
    %678 = "linalg.generic"(%676, %677) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i1, %arg3: bf16):
      %6023 = "arith.extui"(%arg2) : (i1) -> i16
      %6024 = "arith.sitofp"(%6023) : (i16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<1x1x40x40xi1>, tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %679 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
    %680 = "tensor.empty"() : () -> tensor<1x1x40x40xbf16>
    %681 = "linalg.generic"(%678, %680) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.subf"(%679, %arg2) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x1x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %682 = "tensor.empty"() : () -> tensor<1x1x40x40xi1>
    %683 = "linalg.generic"(%681, %682) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: i1):
      %6023 = "arith.fptosi"(%arg2) : (bf16) -> i16
      %6024 = "arith.trunci"(%6023) : (i16) -> i1
      "linalg.yield"(%6024) : (i1) -> ()
    }) : (tensor<1x1x40x40xbf16>, tensor<1x1x40x40xi1>) -> tensor<1x1x40x40xi1>
    %684 = "arith.constant"() <{value = -3.389530e+38 : bf16}> : () -> bf16
    %685 = "tensor.empty"() : () -> tensor<1x1x40x40xbf16>
    %686 = "linalg.generic"(%681, %683, %685) <{indexing_maps = [#map4, #map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: i1, %arg4: bf16):
      %6023 = "arith.select"(%arg3, %684, %arg2) : (i1, bf16, bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x1x40x40xbf16>, tensor<1x1x40x40xi1>, tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %687 = "tosa.add"(%686, %670) : (tensor<1x1x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x1x40x40xbf16>
    %688 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %689 = "linalg.generic"(%651, %688) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %690 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %691 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %692 = "linalg.generic"(%689, %690) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %691) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %693 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %694 = "linalg.generic"(%692, %693) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %695 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %696 = "tosa.add"(%694, %695) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %697 = "tosa.rsqrt"(%696) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %698 = "tosa.mul"(%689, %697) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %699 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %700 = "linalg.generic"(%698, %699) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %701 = "tosa.reshape"(%0) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %702 = "tosa.mul"(%701, %700) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %703 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %704 = "linalg.generic"(%68, %703) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %705 = "tosa.reshape"(%702) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %706 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %707 = "linalg.matmul"(%705, %704, %706) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %708 = "tosa.reshape"(%707) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %709 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %710 = "linalg.generic"(%70, %709) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %711 = "tosa.reshape"(%702) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %712 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %713 = "linalg.matmul"(%711, %710, %712) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %714 = "tosa.reshape"(%713) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %715 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %716 = "linalg.generic"(%72, %715) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %717 = "tosa.reshape"(%702) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %718 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %719 = "linalg.matmul"(%717, %716, %718) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %720 = "tosa.reshape"(%719) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %721 = "tosa.reshape"(%708) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %722 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %723 = "linalg.generic"(%721, %722) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %724 = "tosa.reshape"(%714) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %725 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %726 = "linalg.generic"(%724, %725) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %727 = "tosa.reshape"(%720) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %728 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %729 = "linalg.generic"(%727, %728) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %730 = "tensor.extract_slice"(%518) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %731 = "tensor.extract_slice"(%730) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %732 = "tensor.extract_slice"(%731) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %733 = "tensor.extract_slice"(%520) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %734 = "tensor.extract_slice"(%733) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %735 = "tensor.extract_slice"(%734) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %736 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %737 = "linalg.generic"(%732, %736) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %738 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %739 = "linalg.generic"(%737, %738) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %740 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %741 = "linalg.generic"(%735, %740) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %742 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %743 = "linalg.generic"(%741, %742) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %744 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %745 = "linalg.generic"(%647, %744) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%739, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %746 = "tosa.reshape"(%745) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %747 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %748 = "linalg.generic"(%647, %747) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%743, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %749 = "tosa.reshape"(%748) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %750 = "tosa.mul"(%723, %746) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %751 = "tensor.extract_slice"(%723) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %752 = "tensor.extract_slice"(%723) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %753 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %754 = "linalg.generic"(%752, %753) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %755 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %756 = "tensor.insert_slice"(%754, %755) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %757 = "tensor.insert_slice"(%751, %756) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %758 = "tosa.mul"(%757, %749) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %759 = "tosa.add"(%750, %758) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %760 = "tosa.mul"(%726, %746) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %761 = "tensor.extract_slice"(%726) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %762 = "tensor.extract_slice"(%726) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %763 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %764 = "linalg.generic"(%762, %763) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %765 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %766 = "tensor.insert_slice"(%764, %765) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %767 = "tensor.insert_slice"(%761, %766) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %768 = "tosa.mul"(%767, %749) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %769 = "tosa.add"(%760, %768) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %770 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %771 = "linalg.generic"(%769, %770) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %772 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %773 = "tosa.add"(%759, %772) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %774 = "tosa.reshape"(%773) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %775 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %776 = "tosa.add"(%771, %775) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %777 = "tosa.reshape"(%776) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %778 = "tosa.matmul"(%774, %777) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %779 = "tosa.reshape"(%778) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %780 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %781 = "tosa.reciprocal"(%780) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %782 = "tosa.mul"(%779, %781) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %783 = "tosa.add"(%782, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %784 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %785 = "linalg.generic"(%783, %784) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %786 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %787 = "linalg.generic"(%786) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %788 = "linalg.generic"(%785, %786) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %789 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %790 = "linalg.generic"(%785, %788, %789) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %791 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %792 = "linalg.generic"(%791) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %793 = "linalg.generic"(%790, %792) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %794 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %795 = "linalg.generic"(%790, %793, %794) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %796 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %797 = "linalg.generic"(%795, %796) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %798 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %799 = "tosa.add"(%797, %798) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %800 = "tosa.reshape"(%799) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %801 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %802 = "tosa.add"(%729, %801) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %803 = "tosa.reshape"(%802) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %804 = "tosa.matmul"(%800, %803) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %805 = "tosa.reshape"(%804) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %806 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %807 = "linalg.generic"(%805, %806) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %808 = "tosa.identity"(%807) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %809 = "tosa.reshape"(%808) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %810 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %811 = "linalg.generic"(%74, %810) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %812 = "tosa.reshape"(%809) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %813 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %814 = "linalg.matmul"(%812, %811, %813) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %815 = "tosa.reshape"(%814) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %816 = "tosa.add"(%651, %815) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %817 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %818 = "linalg.generic"(%816, %817) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %819 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %820 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %821 = "linalg.generic"(%818, %819) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %820) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %822 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %823 = "linalg.generic"(%821, %822) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %824 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %825 = "tosa.add"(%823, %824) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %826 = "tosa.rsqrt"(%825) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %827 = "tosa.mul"(%818, %826) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %828 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %829 = "linalg.generic"(%827, %828) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %830 = "tosa.reshape"(%1) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %831 = "tosa.mul"(%830, %829) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %832 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %833 = "linalg.generic"(%76, %832) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %834 = "tosa.reshape"(%831) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %835 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %836 = "linalg.matmul"(%834, %833, %835) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %837 = "tosa.reshape"(%836) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %838 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %839 = "linalg.generic"(%837, %838) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %840 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %841 = "linalg.generic"(%78, %840) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %842 = "tosa.reshape"(%831) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %843 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %844 = "linalg.matmul"(%842, %841, %843) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %845 = "tosa.reshape"(%844) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %846 = "tosa.mul"(%839, %845) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %847 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %848 = "linalg.generic"(%80, %847) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %849 = "tosa.reshape"(%846) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %850 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %851 = "linalg.matmul"(%849, %848, %850) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %852 = "tosa.reshape"(%851) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %853 = "tosa.add"(%816, %852) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %854 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %855 = "linalg.generic"(%853, %854) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %856 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %857 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %858 = "linalg.generic"(%855, %856) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %857) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %859 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %860 = "linalg.generic"(%858, %859) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %861 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %862 = "tosa.add"(%860, %861) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %863 = "tosa.rsqrt"(%862) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %864 = "tosa.mul"(%855, %863) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %865 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %866 = "linalg.generic"(%864, %865) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %867 = "tosa.reshape"(%2) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %868 = "tosa.mul"(%867, %866) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %869 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %870 = "linalg.generic"(%82, %869) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %871 = "tosa.reshape"(%868) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %872 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %873 = "linalg.matmul"(%871, %870, %872) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %874 = "tosa.reshape"(%873) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %875 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %876 = "linalg.generic"(%84, %875) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %877 = "tosa.reshape"(%868) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %878 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %879 = "linalg.matmul"(%877, %876, %878) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %880 = "tosa.reshape"(%879) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %881 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %882 = "linalg.generic"(%86, %881) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %883 = "tosa.reshape"(%868) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %884 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %885 = "linalg.matmul"(%883, %882, %884) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %886 = "tosa.reshape"(%885) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %887 = "tosa.reshape"(%874) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %888 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %889 = "linalg.generic"(%887, %888) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %890 = "tosa.reshape"(%880) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %891 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %892 = "linalg.generic"(%890, %891) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %893 = "tosa.reshape"(%886) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %894 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %895 = "linalg.generic"(%893, %894) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %896 = "tensor.extract_slice"(%522) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %897 = "tensor.extract_slice"(%896) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %898 = "tensor.extract_slice"(%897) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %899 = "tensor.extract_slice"(%524) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %900 = "tensor.extract_slice"(%899) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %901 = "tensor.extract_slice"(%900) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %902 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %903 = "linalg.generic"(%898, %902) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %904 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %905 = "linalg.generic"(%903, %904) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %906 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %907 = "linalg.generic"(%901, %906) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %908 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %909 = "linalg.generic"(%907, %908) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %910 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %911 = "linalg.generic"(%647, %910) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%905, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %912 = "tosa.reshape"(%911) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %913 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %914 = "linalg.generic"(%647, %913) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%909, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %915 = "tosa.reshape"(%914) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %916 = "tosa.mul"(%889, %912) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %917 = "tensor.extract_slice"(%889) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %918 = "tensor.extract_slice"(%889) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %919 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %920 = "linalg.generic"(%918, %919) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %921 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %922 = "tensor.insert_slice"(%920, %921) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %923 = "tensor.insert_slice"(%917, %922) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %924 = "tosa.mul"(%923, %915) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %925 = "tosa.add"(%916, %924) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %926 = "tosa.mul"(%892, %912) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %927 = "tensor.extract_slice"(%892) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %928 = "tensor.extract_slice"(%892) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %929 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %930 = "linalg.generic"(%928, %929) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %931 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %932 = "tensor.insert_slice"(%930, %931) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %933 = "tensor.insert_slice"(%927, %932) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %934 = "tosa.mul"(%933, %915) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %935 = "tosa.add"(%926, %934) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %936 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %937 = "linalg.generic"(%935, %936) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %938 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %939 = "tosa.add"(%925, %938) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %940 = "tosa.reshape"(%939) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %941 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %942 = "tosa.add"(%937, %941) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %943 = "tosa.reshape"(%942) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %944 = "tosa.matmul"(%940, %943) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %945 = "tosa.reshape"(%944) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %946 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %947 = "tosa.reciprocal"(%946) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %948 = "tosa.mul"(%945, %947) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %949 = "tosa.add"(%948, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %950 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %951 = "linalg.generic"(%949, %950) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %952 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %953 = "linalg.generic"(%952) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %954 = "linalg.generic"(%951, %952) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %955 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %956 = "linalg.generic"(%951, %954, %955) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %957 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %958 = "linalg.generic"(%957) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %959 = "linalg.generic"(%956, %958) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %960 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %961 = "linalg.generic"(%956, %959, %960) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %962 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %963 = "linalg.generic"(%961, %962) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %964 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %965 = "tosa.add"(%963, %964) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %966 = "tosa.reshape"(%965) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %967 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %968 = "tosa.add"(%895, %967) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %969 = "tosa.reshape"(%968) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %970 = "tosa.matmul"(%966, %969) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %971 = "tosa.reshape"(%970) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %972 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %973 = "linalg.generic"(%971, %972) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %974 = "tosa.identity"(%973) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %975 = "tosa.reshape"(%974) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %976 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %977 = "linalg.generic"(%88, %976) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %978 = "tosa.reshape"(%975) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %979 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %980 = "linalg.matmul"(%978, %977, %979) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %981 = "tosa.reshape"(%980) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %982 = "tosa.add"(%853, %981) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %983 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %984 = "linalg.generic"(%982, %983) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %985 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %986 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %987 = "linalg.generic"(%984, %985) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %986) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %988 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %989 = "linalg.generic"(%987, %988) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %990 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %991 = "tosa.add"(%989, %990) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %992 = "tosa.rsqrt"(%991) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %993 = "tosa.mul"(%984, %992) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %994 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %995 = "linalg.generic"(%993, %994) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %996 = "tosa.reshape"(%3) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %997 = "tosa.mul"(%996, %995) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %998 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %999 = "linalg.generic"(%90, %998) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1000 = "tosa.reshape"(%997) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1001 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1002 = "linalg.matmul"(%1000, %999, %1001) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1003 = "tosa.reshape"(%1002) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1004 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %1005 = "linalg.generic"(%1003, %1004) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1006 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1007 = "linalg.generic"(%92, %1006) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1008 = "tosa.reshape"(%997) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1009 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1010 = "linalg.matmul"(%1008, %1007, %1009) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1011 = "tosa.reshape"(%1010) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1012 = "tosa.mul"(%1005, %1011) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1013 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %1014 = "linalg.generic"(%94, %1013) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %1015 = "tosa.reshape"(%1012) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %1016 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1017 = "linalg.matmul"(%1015, %1014, %1016) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1018 = "tosa.reshape"(%1017) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1019 = "tosa.add"(%982, %1018) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1020 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1021 = "linalg.generic"(%1019, %1020) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1022 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1023 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1024 = "linalg.generic"(%1021, %1022) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1023) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1025 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1026 = "linalg.generic"(%1024, %1025) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1027 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1028 = "tosa.add"(%1026, %1027) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1029 = "tosa.rsqrt"(%1028) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1030 = "tosa.mul"(%1021, %1029) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1031 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1032 = "linalg.generic"(%1030, %1031) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1033 = "tosa.reshape"(%4) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1034 = "tosa.mul"(%1033, %1032) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1035 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1036 = "linalg.generic"(%96, %1035) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1037 = "tosa.reshape"(%1034) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1038 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1039 = "linalg.matmul"(%1037, %1036, %1038) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1040 = "tosa.reshape"(%1039) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1041 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1042 = "linalg.generic"(%98, %1041) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1043 = "tosa.reshape"(%1034) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1044 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1045 = "linalg.matmul"(%1043, %1042, %1044) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1046 = "tosa.reshape"(%1045) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1047 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1048 = "linalg.generic"(%100, %1047) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1049 = "tosa.reshape"(%1034) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1050 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1051 = "linalg.matmul"(%1049, %1048, %1050) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1052 = "tosa.reshape"(%1051) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1053 = "tosa.reshape"(%1040) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1054 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1055 = "linalg.generic"(%1053, %1054) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1056 = "tosa.reshape"(%1046) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1057 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1058 = "linalg.generic"(%1056, %1057) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1059 = "tosa.reshape"(%1052) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1060 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1061 = "linalg.generic"(%1059, %1060) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1062 = "tensor.extract_slice"(%526) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1063 = "tensor.extract_slice"(%1062) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1064 = "tensor.extract_slice"(%1063) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1065 = "tensor.extract_slice"(%528) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1066 = "tensor.extract_slice"(%1065) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1067 = "tensor.extract_slice"(%1066) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1068 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1069 = "linalg.generic"(%1064, %1068) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1070 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1071 = "linalg.generic"(%1069, %1070) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1072 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1073 = "linalg.generic"(%1067, %1072) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1074 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1075 = "linalg.generic"(%1073, %1074) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1076 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1077 = "linalg.generic"(%647, %1076) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1071, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1078 = "tosa.reshape"(%1077) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1079 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1080 = "linalg.generic"(%647, %1079) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1075, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1081 = "tosa.reshape"(%1080) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1082 = "tosa.mul"(%1055, %1078) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1083 = "tensor.extract_slice"(%1055) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1084 = "tensor.extract_slice"(%1055) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1085 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1086 = "linalg.generic"(%1084, %1085) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1087 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1088 = "tensor.insert_slice"(%1086, %1087) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1089 = "tensor.insert_slice"(%1083, %1088) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1090 = "tosa.mul"(%1089, %1081) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1091 = "tosa.add"(%1082, %1090) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1092 = "tosa.mul"(%1058, %1078) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1093 = "tensor.extract_slice"(%1058) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1094 = "tensor.extract_slice"(%1058) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1095 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1096 = "linalg.generic"(%1094, %1095) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1097 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1098 = "tensor.insert_slice"(%1096, %1097) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1099 = "tensor.insert_slice"(%1093, %1098) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1100 = "tosa.mul"(%1099, %1081) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1101 = "tosa.add"(%1092, %1100) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1102 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %1103 = "linalg.generic"(%1101, %1102) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1104 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1105 = "tosa.add"(%1091, %1104) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1106 = "tosa.reshape"(%1105) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1107 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %1108 = "tosa.add"(%1103, %1107) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1109 = "tosa.reshape"(%1108) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %1110 = "tosa.matmul"(%1106, %1109) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %1111 = "tosa.reshape"(%1110) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1112 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1113 = "tosa.reciprocal"(%1112) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1114 = "tosa.mul"(%1111, %1113) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1115 = "tosa.add"(%1114, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1116 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1117 = "linalg.generic"(%1115, %1116) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1118 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1119 = "linalg.generic"(%1118) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1120 = "linalg.generic"(%1117, %1118) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1121 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1122 = "linalg.generic"(%1117, %1120, %1121) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1123 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1124 = "linalg.generic"(%1123) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1125 = "linalg.generic"(%1122, %1124) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1126 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1127 = "linalg.generic"(%1122, %1125, %1126) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1128 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %1129 = "linalg.generic"(%1127, %1128) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1130 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1131 = "tosa.add"(%1129, %1130) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1132 = "tosa.reshape"(%1131) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %1133 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1134 = "tosa.add"(%1061, %1133) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1135 = "tosa.reshape"(%1134) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1136 = "tosa.matmul"(%1132, %1135) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1137 = "tosa.reshape"(%1136) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1138 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %1139 = "linalg.generic"(%1137, %1138) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1140 = "tosa.identity"(%1139) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1141 = "tosa.reshape"(%1140) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %1142 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1143 = "linalg.generic"(%102, %1142) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1144 = "tosa.reshape"(%1141) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1145 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1146 = "linalg.matmul"(%1144, %1143, %1145) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1147 = "tosa.reshape"(%1146) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1148 = "tosa.add"(%1019, %1147) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1149 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1150 = "linalg.generic"(%1148, %1149) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1151 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1152 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1153 = "linalg.generic"(%1150, %1151) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1152) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1154 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1155 = "linalg.generic"(%1153, %1154) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1156 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1157 = "tosa.add"(%1155, %1156) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1158 = "tosa.rsqrt"(%1157) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1159 = "tosa.mul"(%1150, %1158) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1160 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1161 = "linalg.generic"(%1159, %1160) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1162 = "tosa.reshape"(%5) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1163 = "tosa.mul"(%1162, %1161) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1164 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1165 = "linalg.generic"(%104, %1164) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1166 = "tosa.reshape"(%1163) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1167 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1168 = "linalg.matmul"(%1166, %1165, %1167) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1169 = "tosa.reshape"(%1168) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1170 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %1171 = "linalg.generic"(%1169, %1170) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1172 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1173 = "linalg.generic"(%106, %1172) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1174 = "tosa.reshape"(%1163) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1175 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1176 = "linalg.matmul"(%1174, %1173, %1175) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1177 = "tosa.reshape"(%1176) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1178 = "tosa.mul"(%1171, %1177) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1179 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %1180 = "linalg.generic"(%108, %1179) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %1181 = "tosa.reshape"(%1178) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %1182 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1183 = "linalg.matmul"(%1181, %1180, %1182) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1184 = "tosa.reshape"(%1183) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1185 = "tosa.add"(%1148, %1184) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1186 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1187 = "linalg.generic"(%1185, %1186) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1188 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1189 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1190 = "linalg.generic"(%1187, %1188) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1189) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1191 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1192 = "linalg.generic"(%1190, %1191) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1193 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1194 = "tosa.add"(%1192, %1193) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1195 = "tosa.rsqrt"(%1194) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1196 = "tosa.mul"(%1187, %1195) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1197 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1198 = "linalg.generic"(%1196, %1197) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1199 = "tosa.reshape"(%6) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1200 = "tosa.mul"(%1199, %1198) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1201 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1202 = "linalg.generic"(%110, %1201) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1203 = "tosa.reshape"(%1200) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1204 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1205 = "linalg.matmul"(%1203, %1202, %1204) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1206 = "tosa.reshape"(%1205) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1207 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1208 = "linalg.generic"(%112, %1207) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1209 = "tosa.reshape"(%1200) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1210 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1211 = "linalg.matmul"(%1209, %1208, %1210) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1212 = "tosa.reshape"(%1211) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1213 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1214 = "linalg.generic"(%114, %1213) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1215 = "tosa.reshape"(%1200) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1216 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1217 = "linalg.matmul"(%1215, %1214, %1216) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1218 = "tosa.reshape"(%1217) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1219 = "tosa.reshape"(%1206) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1220 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1221 = "linalg.generic"(%1219, %1220) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1222 = "tosa.reshape"(%1212) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1223 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1224 = "linalg.generic"(%1222, %1223) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1225 = "tosa.reshape"(%1218) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1226 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1227 = "linalg.generic"(%1225, %1226) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1228 = "tensor.extract_slice"(%530) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1229 = "tensor.extract_slice"(%1228) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1230 = "tensor.extract_slice"(%1229) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1231 = "tensor.extract_slice"(%532) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1232 = "tensor.extract_slice"(%1231) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1233 = "tensor.extract_slice"(%1232) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1234 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1235 = "linalg.generic"(%1230, %1234) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1236 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1237 = "linalg.generic"(%1235, %1236) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1238 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1239 = "linalg.generic"(%1233, %1238) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1240 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1241 = "linalg.generic"(%1239, %1240) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1242 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1243 = "linalg.generic"(%647, %1242) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1237, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1244 = "tosa.reshape"(%1243) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1245 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1246 = "linalg.generic"(%647, %1245) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1241, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1247 = "tosa.reshape"(%1246) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1248 = "tosa.mul"(%1221, %1244) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1249 = "tensor.extract_slice"(%1221) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1250 = "tensor.extract_slice"(%1221) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1251 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1252 = "linalg.generic"(%1250, %1251) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1253 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1254 = "tensor.insert_slice"(%1252, %1253) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1255 = "tensor.insert_slice"(%1249, %1254) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1256 = "tosa.mul"(%1255, %1247) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1257 = "tosa.add"(%1248, %1256) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1258 = "tosa.mul"(%1224, %1244) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1259 = "tensor.extract_slice"(%1224) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1260 = "tensor.extract_slice"(%1224) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1261 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1262 = "linalg.generic"(%1260, %1261) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1263 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1264 = "tensor.insert_slice"(%1262, %1263) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1265 = "tensor.insert_slice"(%1259, %1264) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1266 = "tosa.mul"(%1265, %1247) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1267 = "tosa.add"(%1258, %1266) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1268 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %1269 = "linalg.generic"(%1267, %1268) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1270 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1271 = "tosa.add"(%1257, %1270) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1272 = "tosa.reshape"(%1271) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1273 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %1274 = "tosa.add"(%1269, %1273) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1275 = "tosa.reshape"(%1274) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %1276 = "tosa.matmul"(%1272, %1275) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %1277 = "tosa.reshape"(%1276) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1278 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1279 = "tosa.reciprocal"(%1278) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1280 = "tosa.mul"(%1277, %1279) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1281 = "tosa.add"(%1280, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1282 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1283 = "linalg.generic"(%1281, %1282) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1284 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1285 = "linalg.generic"(%1284) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1286 = "linalg.generic"(%1283, %1284) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1287 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1288 = "linalg.generic"(%1283, %1286, %1287) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1289 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1290 = "linalg.generic"(%1289) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1291 = "linalg.generic"(%1288, %1290) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1292 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1293 = "linalg.generic"(%1288, %1291, %1292) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1294 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %1295 = "linalg.generic"(%1293, %1294) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1296 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1297 = "tosa.add"(%1295, %1296) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1298 = "tosa.reshape"(%1297) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %1299 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1300 = "tosa.add"(%1227, %1299) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1301 = "tosa.reshape"(%1300) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1302 = "tosa.matmul"(%1298, %1301) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1303 = "tosa.reshape"(%1302) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1304 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %1305 = "linalg.generic"(%1303, %1304) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1306 = "tosa.identity"(%1305) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1307 = "tosa.reshape"(%1306) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %1308 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1309 = "linalg.generic"(%116, %1308) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1310 = "tosa.reshape"(%1307) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1311 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1312 = "linalg.matmul"(%1310, %1309, %1311) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1313 = "tosa.reshape"(%1312) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1314 = "tosa.add"(%1185, %1313) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1315 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1316 = "linalg.generic"(%1314, %1315) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1317 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1318 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1319 = "linalg.generic"(%1316, %1317) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1318) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1320 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1321 = "linalg.generic"(%1319, %1320) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1322 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1323 = "tosa.add"(%1321, %1322) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1324 = "tosa.rsqrt"(%1323) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1325 = "tosa.mul"(%1316, %1324) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1326 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1327 = "linalg.generic"(%1325, %1326) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1328 = "tosa.reshape"(%7) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1329 = "tosa.mul"(%1328, %1327) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1330 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1331 = "linalg.generic"(%118, %1330) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1332 = "tosa.reshape"(%1329) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1333 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1334 = "linalg.matmul"(%1332, %1331, %1333) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1335 = "tosa.reshape"(%1334) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1336 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %1337 = "linalg.generic"(%1335, %1336) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1338 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1339 = "linalg.generic"(%120, %1338) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1340 = "tosa.reshape"(%1329) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1341 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1342 = "linalg.matmul"(%1340, %1339, %1341) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1343 = "tosa.reshape"(%1342) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1344 = "tosa.mul"(%1337, %1343) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1345 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %1346 = "linalg.generic"(%122, %1345) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %1347 = "tosa.reshape"(%1344) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %1348 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1349 = "linalg.matmul"(%1347, %1346, %1348) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1350 = "tosa.reshape"(%1349) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1351 = "tosa.add"(%1314, %1350) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1352 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1353 = "linalg.generic"(%1351, %1352) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1354 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1355 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1356 = "linalg.generic"(%1353, %1354) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1355) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1357 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1358 = "linalg.generic"(%1356, %1357) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1359 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1360 = "tosa.add"(%1358, %1359) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1361 = "tosa.rsqrt"(%1360) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1362 = "tosa.mul"(%1353, %1361) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1363 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1364 = "linalg.generic"(%1362, %1363) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1365 = "tosa.reshape"(%8) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1366 = "tosa.mul"(%1365, %1364) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1367 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1368 = "linalg.generic"(%124, %1367) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1369 = "tosa.reshape"(%1366) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1370 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1371 = "linalg.matmul"(%1369, %1368, %1370) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1372 = "tosa.reshape"(%1371) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1373 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1374 = "linalg.generic"(%126, %1373) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1375 = "tosa.reshape"(%1366) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1376 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1377 = "linalg.matmul"(%1375, %1374, %1376) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1378 = "tosa.reshape"(%1377) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1379 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1380 = "linalg.generic"(%128, %1379) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1381 = "tosa.reshape"(%1366) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1382 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1383 = "linalg.matmul"(%1381, %1380, %1382) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1384 = "tosa.reshape"(%1383) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1385 = "tosa.reshape"(%1372) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1386 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1387 = "linalg.generic"(%1385, %1386) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1388 = "tosa.reshape"(%1378) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1389 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1390 = "linalg.generic"(%1388, %1389) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1391 = "tosa.reshape"(%1384) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1392 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1393 = "linalg.generic"(%1391, %1392) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1394 = "tensor.extract_slice"(%534) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1395 = "tensor.extract_slice"(%1394) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1396 = "tensor.extract_slice"(%1395) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1397 = "tensor.extract_slice"(%536) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1398 = "tensor.extract_slice"(%1397) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1399 = "tensor.extract_slice"(%1398) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1400 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1401 = "linalg.generic"(%1396, %1400) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1402 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1403 = "linalg.generic"(%1401, %1402) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1404 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1405 = "linalg.generic"(%1399, %1404) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1406 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1407 = "linalg.generic"(%1405, %1406) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1408 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1409 = "linalg.generic"(%647, %1408) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1403, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1410 = "tosa.reshape"(%1409) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1411 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1412 = "linalg.generic"(%647, %1411) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1407, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1413 = "tosa.reshape"(%1412) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1414 = "tosa.mul"(%1387, %1410) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1415 = "tensor.extract_slice"(%1387) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1416 = "tensor.extract_slice"(%1387) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1417 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1418 = "linalg.generic"(%1416, %1417) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1419 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1420 = "tensor.insert_slice"(%1418, %1419) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1421 = "tensor.insert_slice"(%1415, %1420) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1422 = "tosa.mul"(%1421, %1413) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1423 = "tosa.add"(%1414, %1422) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1424 = "tosa.mul"(%1390, %1410) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1425 = "tensor.extract_slice"(%1390) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1426 = "tensor.extract_slice"(%1390) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1427 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1428 = "linalg.generic"(%1426, %1427) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1429 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1430 = "tensor.insert_slice"(%1428, %1429) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1431 = "tensor.insert_slice"(%1425, %1430) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1432 = "tosa.mul"(%1431, %1413) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1433 = "tosa.add"(%1424, %1432) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1434 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %1435 = "linalg.generic"(%1433, %1434) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1436 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1437 = "tosa.add"(%1423, %1436) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1438 = "tosa.reshape"(%1437) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1439 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %1440 = "tosa.add"(%1435, %1439) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1441 = "tosa.reshape"(%1440) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %1442 = "tosa.matmul"(%1438, %1441) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %1443 = "tosa.reshape"(%1442) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1444 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1445 = "tosa.reciprocal"(%1444) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1446 = "tosa.mul"(%1443, %1445) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1447 = "tosa.add"(%1446, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1448 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1449 = "linalg.generic"(%1447, %1448) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1450 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1451 = "linalg.generic"(%1450) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1452 = "linalg.generic"(%1449, %1450) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1453 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1454 = "linalg.generic"(%1449, %1452, %1453) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1455 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1456 = "linalg.generic"(%1455) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1457 = "linalg.generic"(%1454, %1456) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1458 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1459 = "linalg.generic"(%1454, %1457, %1458) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1460 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %1461 = "linalg.generic"(%1459, %1460) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1462 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1463 = "tosa.add"(%1461, %1462) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1464 = "tosa.reshape"(%1463) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %1465 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1466 = "tosa.add"(%1393, %1465) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1467 = "tosa.reshape"(%1466) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1468 = "tosa.matmul"(%1464, %1467) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1469 = "tosa.reshape"(%1468) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1470 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %1471 = "linalg.generic"(%1469, %1470) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1472 = "tosa.identity"(%1471) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1473 = "tosa.reshape"(%1472) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %1474 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1475 = "linalg.generic"(%130, %1474) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1476 = "tosa.reshape"(%1473) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1477 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1478 = "linalg.matmul"(%1476, %1475, %1477) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1479 = "tosa.reshape"(%1478) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1480 = "tosa.add"(%1351, %1479) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1481 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1482 = "linalg.generic"(%1480, %1481) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1483 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1484 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1485 = "linalg.generic"(%1482, %1483) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1484) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1486 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1487 = "linalg.generic"(%1485, %1486) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1488 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1489 = "tosa.add"(%1487, %1488) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1490 = "tosa.rsqrt"(%1489) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1491 = "tosa.mul"(%1482, %1490) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1492 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1493 = "linalg.generic"(%1491, %1492) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1494 = "tosa.reshape"(%9) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1495 = "tosa.mul"(%1494, %1493) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1496 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1497 = "linalg.generic"(%132, %1496) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1498 = "tosa.reshape"(%1495) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1499 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1500 = "linalg.matmul"(%1498, %1497, %1499) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1501 = "tosa.reshape"(%1500) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1502 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %1503 = "linalg.generic"(%1501, %1502) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1504 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1505 = "linalg.generic"(%134, %1504) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1506 = "tosa.reshape"(%1495) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1507 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1508 = "linalg.matmul"(%1506, %1505, %1507) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1509 = "tosa.reshape"(%1508) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1510 = "tosa.mul"(%1503, %1509) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1511 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %1512 = "linalg.generic"(%136, %1511) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %1513 = "tosa.reshape"(%1510) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %1514 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1515 = "linalg.matmul"(%1513, %1512, %1514) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1516 = "tosa.reshape"(%1515) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1517 = "tosa.add"(%1480, %1516) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1518 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1519 = "linalg.generic"(%1517, %1518) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1520 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1521 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1522 = "linalg.generic"(%1519, %1520) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1521) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1523 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1524 = "linalg.generic"(%1522, %1523) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1525 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1526 = "tosa.add"(%1524, %1525) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1527 = "tosa.rsqrt"(%1526) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1528 = "tosa.mul"(%1519, %1527) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1529 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1530 = "linalg.generic"(%1528, %1529) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1531 = "tosa.reshape"(%10) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1532 = "tosa.mul"(%1531, %1530) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1533 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1534 = "linalg.generic"(%138, %1533) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1535 = "tosa.reshape"(%1532) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1536 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1537 = "linalg.matmul"(%1535, %1534, %1536) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1538 = "tosa.reshape"(%1537) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1539 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1540 = "linalg.generic"(%140, %1539) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1541 = "tosa.reshape"(%1532) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1542 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1543 = "linalg.matmul"(%1541, %1540, %1542) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1544 = "tosa.reshape"(%1543) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1545 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1546 = "linalg.generic"(%142, %1545) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1547 = "tosa.reshape"(%1532) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1548 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1549 = "linalg.matmul"(%1547, %1546, %1548) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1550 = "tosa.reshape"(%1549) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1551 = "tosa.reshape"(%1538) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1552 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1553 = "linalg.generic"(%1551, %1552) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1554 = "tosa.reshape"(%1544) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1555 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1556 = "linalg.generic"(%1554, %1555) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1557 = "tosa.reshape"(%1550) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1558 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1559 = "linalg.generic"(%1557, %1558) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1560 = "tensor.extract_slice"(%538) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1561 = "tensor.extract_slice"(%1560) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1562 = "tensor.extract_slice"(%1561) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1563 = "tensor.extract_slice"(%540) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1564 = "tensor.extract_slice"(%1563) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1565 = "tensor.extract_slice"(%1564) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1566 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1567 = "linalg.generic"(%1562, %1566) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1568 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1569 = "linalg.generic"(%1567, %1568) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1570 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1571 = "linalg.generic"(%1565, %1570) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1572 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1573 = "linalg.generic"(%1571, %1572) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1574 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1575 = "linalg.generic"(%647, %1574) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1569, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1576 = "tosa.reshape"(%1575) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1577 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1578 = "linalg.generic"(%647, %1577) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1573, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1579 = "tosa.reshape"(%1578) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1580 = "tosa.mul"(%1553, %1576) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1581 = "tensor.extract_slice"(%1553) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1582 = "tensor.extract_slice"(%1553) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1583 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1584 = "linalg.generic"(%1582, %1583) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1585 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1586 = "tensor.insert_slice"(%1584, %1585) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1587 = "tensor.insert_slice"(%1581, %1586) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1588 = "tosa.mul"(%1587, %1579) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1589 = "tosa.add"(%1580, %1588) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1590 = "tosa.mul"(%1556, %1576) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1591 = "tensor.extract_slice"(%1556) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1592 = "tensor.extract_slice"(%1556) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1593 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1594 = "linalg.generic"(%1592, %1593) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1595 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1596 = "tensor.insert_slice"(%1594, %1595) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1597 = "tensor.insert_slice"(%1591, %1596) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1598 = "tosa.mul"(%1597, %1579) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1599 = "tosa.add"(%1590, %1598) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1600 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %1601 = "linalg.generic"(%1599, %1600) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1602 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1603 = "tosa.add"(%1589, %1602) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1604 = "tosa.reshape"(%1603) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1605 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %1606 = "tosa.add"(%1601, %1605) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1607 = "tosa.reshape"(%1606) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %1608 = "tosa.matmul"(%1604, %1607) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %1609 = "tosa.reshape"(%1608) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1610 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1611 = "tosa.reciprocal"(%1610) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1612 = "tosa.mul"(%1609, %1611) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1613 = "tosa.add"(%1612, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1614 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1615 = "linalg.generic"(%1613, %1614) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1616 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1617 = "linalg.generic"(%1616) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1618 = "linalg.generic"(%1615, %1616) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1619 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1620 = "linalg.generic"(%1615, %1618, %1619) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1621 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1622 = "linalg.generic"(%1621) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1623 = "linalg.generic"(%1620, %1622) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1624 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1625 = "linalg.generic"(%1620, %1623, %1624) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1626 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %1627 = "linalg.generic"(%1625, %1626) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1628 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1629 = "tosa.add"(%1627, %1628) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1630 = "tosa.reshape"(%1629) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %1631 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1632 = "tosa.add"(%1559, %1631) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1633 = "tosa.reshape"(%1632) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1634 = "tosa.matmul"(%1630, %1633) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1635 = "tosa.reshape"(%1634) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1636 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %1637 = "linalg.generic"(%1635, %1636) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1638 = "tosa.identity"(%1637) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1639 = "tosa.reshape"(%1638) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %1640 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1641 = "linalg.generic"(%144, %1640) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1642 = "tosa.reshape"(%1639) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1643 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1644 = "linalg.matmul"(%1642, %1641, %1643) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1645 = "tosa.reshape"(%1644) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1646 = "tosa.add"(%1517, %1645) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1647 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1648 = "linalg.generic"(%1646, %1647) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1649 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1650 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1651 = "linalg.generic"(%1648, %1649) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1650) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1652 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1653 = "linalg.generic"(%1651, %1652) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1654 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1655 = "tosa.add"(%1653, %1654) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1656 = "tosa.rsqrt"(%1655) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1657 = "tosa.mul"(%1648, %1656) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1658 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1659 = "linalg.generic"(%1657, %1658) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1660 = "tosa.reshape"(%11) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1661 = "tosa.mul"(%1660, %1659) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1662 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1663 = "linalg.generic"(%146, %1662) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1664 = "tosa.reshape"(%1661) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1665 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1666 = "linalg.matmul"(%1664, %1663, %1665) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1667 = "tosa.reshape"(%1666) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1668 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %1669 = "linalg.generic"(%1667, %1668) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1670 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1671 = "linalg.generic"(%148, %1670) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1672 = "tosa.reshape"(%1661) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1673 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1674 = "linalg.matmul"(%1672, %1671, %1673) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1675 = "tosa.reshape"(%1674) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1676 = "tosa.mul"(%1669, %1675) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1677 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %1678 = "linalg.generic"(%150, %1677) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %1679 = "tosa.reshape"(%1676) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %1680 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1681 = "linalg.matmul"(%1679, %1678, %1680) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1682 = "tosa.reshape"(%1681) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1683 = "tosa.add"(%1646, %1682) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1684 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1685 = "linalg.generic"(%1683, %1684) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1686 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1687 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1688 = "linalg.generic"(%1685, %1686) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1687) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1689 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1690 = "linalg.generic"(%1688, %1689) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1691 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1692 = "tosa.add"(%1690, %1691) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1693 = "tosa.rsqrt"(%1692) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1694 = "tosa.mul"(%1685, %1693) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1695 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1696 = "linalg.generic"(%1694, %1695) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1697 = "tosa.reshape"(%12) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1698 = "tosa.mul"(%1697, %1696) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1699 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1700 = "linalg.generic"(%152, %1699) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1701 = "tosa.reshape"(%1698) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1702 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1703 = "linalg.matmul"(%1701, %1700, %1702) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1704 = "tosa.reshape"(%1703) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1705 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1706 = "linalg.generic"(%154, %1705) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1707 = "tosa.reshape"(%1698) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1708 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1709 = "linalg.matmul"(%1707, %1706, %1708) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1710 = "tosa.reshape"(%1709) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1711 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1712 = "linalg.generic"(%156, %1711) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1713 = "tosa.reshape"(%1698) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1714 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1715 = "linalg.matmul"(%1713, %1712, %1714) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1716 = "tosa.reshape"(%1715) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1717 = "tosa.reshape"(%1704) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1718 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1719 = "linalg.generic"(%1717, %1718) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1720 = "tosa.reshape"(%1710) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1721 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1722 = "linalg.generic"(%1720, %1721) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1723 = "tosa.reshape"(%1716) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1724 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1725 = "linalg.generic"(%1723, %1724) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1726 = "tensor.extract_slice"(%542) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1727 = "tensor.extract_slice"(%1726) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1728 = "tensor.extract_slice"(%1727) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1729 = "tensor.extract_slice"(%544) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1730 = "tensor.extract_slice"(%1729) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1731 = "tensor.extract_slice"(%1730) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1732 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1733 = "linalg.generic"(%1728, %1732) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1734 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1735 = "linalg.generic"(%1733, %1734) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1736 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1737 = "linalg.generic"(%1731, %1736) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1738 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1739 = "linalg.generic"(%1737, %1738) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1740 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1741 = "linalg.generic"(%647, %1740) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1735, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1742 = "tosa.reshape"(%1741) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1743 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1744 = "linalg.generic"(%647, %1743) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1739, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1745 = "tosa.reshape"(%1744) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1746 = "tosa.mul"(%1719, %1742) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1747 = "tensor.extract_slice"(%1719) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1748 = "tensor.extract_slice"(%1719) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1749 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1750 = "linalg.generic"(%1748, %1749) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1751 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1752 = "tensor.insert_slice"(%1750, %1751) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1753 = "tensor.insert_slice"(%1747, %1752) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1754 = "tosa.mul"(%1753, %1745) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1755 = "tosa.add"(%1746, %1754) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1756 = "tosa.mul"(%1722, %1742) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1757 = "tensor.extract_slice"(%1722) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1758 = "tensor.extract_slice"(%1722) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1759 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1760 = "linalg.generic"(%1758, %1759) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1761 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1762 = "tensor.insert_slice"(%1760, %1761) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1763 = "tensor.insert_slice"(%1757, %1762) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1764 = "tosa.mul"(%1763, %1745) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1765 = "tosa.add"(%1756, %1764) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1766 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %1767 = "linalg.generic"(%1765, %1766) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1768 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1769 = "tosa.add"(%1755, %1768) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1770 = "tosa.reshape"(%1769) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1771 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %1772 = "tosa.add"(%1767, %1771) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1773 = "tosa.reshape"(%1772) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %1774 = "tosa.matmul"(%1770, %1773) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %1775 = "tosa.reshape"(%1774) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1776 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1777 = "tosa.reciprocal"(%1776) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1778 = "tosa.mul"(%1775, %1777) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1779 = "tosa.add"(%1778, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1780 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1781 = "linalg.generic"(%1779, %1780) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1782 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1783 = "linalg.generic"(%1782) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1784 = "linalg.generic"(%1781, %1782) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1785 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1786 = "linalg.generic"(%1781, %1784, %1785) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1787 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1788 = "linalg.generic"(%1787) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1789 = "linalg.generic"(%1786, %1788) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1790 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1791 = "linalg.generic"(%1786, %1789, %1790) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1792 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %1793 = "linalg.generic"(%1791, %1792) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1794 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1795 = "tosa.add"(%1793, %1794) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1796 = "tosa.reshape"(%1795) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %1797 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1798 = "tosa.add"(%1725, %1797) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1799 = "tosa.reshape"(%1798) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1800 = "tosa.matmul"(%1796, %1799) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1801 = "tosa.reshape"(%1800) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1802 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %1803 = "linalg.generic"(%1801, %1802) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1804 = "tosa.identity"(%1803) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1805 = "tosa.reshape"(%1804) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %1806 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1807 = "linalg.generic"(%158, %1806) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1808 = "tosa.reshape"(%1805) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1809 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1810 = "linalg.matmul"(%1808, %1807, %1809) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1811 = "tosa.reshape"(%1810) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1812 = "tosa.add"(%1683, %1811) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1813 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1814 = "linalg.generic"(%1812, %1813) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1815 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1816 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1817 = "linalg.generic"(%1814, %1815) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1816) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1818 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1819 = "linalg.generic"(%1817, %1818) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1820 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1821 = "tosa.add"(%1819, %1820) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1822 = "tosa.rsqrt"(%1821) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1823 = "tosa.mul"(%1814, %1822) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1824 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1825 = "linalg.generic"(%1823, %1824) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1826 = "tosa.reshape"(%13) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1827 = "tosa.mul"(%1826, %1825) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1828 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1829 = "linalg.generic"(%160, %1828) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1830 = "tosa.reshape"(%1827) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1831 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1832 = "linalg.matmul"(%1830, %1829, %1831) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1833 = "tosa.reshape"(%1832) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1834 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %1835 = "linalg.generic"(%1833, %1834) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1836 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1837 = "linalg.generic"(%162, %1836) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1838 = "tosa.reshape"(%1827) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1839 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1840 = "linalg.matmul"(%1838, %1837, %1839) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1841 = "tosa.reshape"(%1840) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1842 = "tosa.mul"(%1835, %1841) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %1843 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %1844 = "linalg.generic"(%164, %1843) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %1845 = "tosa.reshape"(%1842) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %1846 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1847 = "linalg.matmul"(%1845, %1844, %1846) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1848 = "tosa.reshape"(%1847) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1849 = "tosa.add"(%1812, %1848) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1850 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1851 = "linalg.generic"(%1849, %1850) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1852 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1853 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1854 = "linalg.generic"(%1851, %1852) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1853) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1855 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1856 = "linalg.generic"(%1854, %1855) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1857 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1858 = "tosa.add"(%1856, %1857) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1859 = "tosa.rsqrt"(%1858) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1860 = "tosa.mul"(%1851, %1859) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1861 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1862 = "linalg.generic"(%1860, %1861) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1863 = "tosa.reshape"(%14) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1864 = "tosa.mul"(%1863, %1862) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1865 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1866 = "linalg.generic"(%166, %1865) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1867 = "tosa.reshape"(%1864) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1868 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1869 = "linalg.matmul"(%1867, %1866, %1868) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1870 = "tosa.reshape"(%1869) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1871 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1872 = "linalg.generic"(%168, %1871) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1873 = "tosa.reshape"(%1864) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1874 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1875 = "linalg.matmul"(%1873, %1872, %1874) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1876 = "tosa.reshape"(%1875) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1877 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1878 = "linalg.generic"(%170, %1877) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1879 = "tosa.reshape"(%1864) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1880 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1881 = "linalg.matmul"(%1879, %1878, %1880) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1882 = "tosa.reshape"(%1881) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1883 = "tosa.reshape"(%1870) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1884 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1885 = "linalg.generic"(%1883, %1884) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1886 = "tosa.reshape"(%1876) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1887 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1888 = "linalg.generic"(%1886, %1887) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1889 = "tosa.reshape"(%1882) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %1890 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1891 = "linalg.generic"(%1889, %1890) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1892 = "tensor.extract_slice"(%546) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1893 = "tensor.extract_slice"(%1892) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1894 = "tensor.extract_slice"(%1893) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1895 = "tensor.extract_slice"(%548) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1896 = "tensor.extract_slice"(%1895) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %1897 = "tensor.extract_slice"(%1896) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1898 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1899 = "linalg.generic"(%1894, %1898) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1900 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1901 = "linalg.generic"(%1899, %1900) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1902 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1903 = "linalg.generic"(%1897, %1902) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1904 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %1905 = "linalg.generic"(%1903, %1904) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %1906 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1907 = "linalg.generic"(%647, %1906) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1901, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1908 = "tosa.reshape"(%1907) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1909 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %1910 = "linalg.generic"(%647, %1909) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%1905, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %1911 = "tosa.reshape"(%1910) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %1912 = "tosa.mul"(%1885, %1908) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1913 = "tensor.extract_slice"(%1885) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1914 = "tensor.extract_slice"(%1885) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1915 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1916 = "linalg.generic"(%1914, %1915) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1917 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1918 = "tensor.insert_slice"(%1916, %1917) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1919 = "tensor.insert_slice"(%1913, %1918) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1920 = "tosa.mul"(%1919, %1911) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1921 = "tosa.add"(%1912, %1920) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1922 = "tosa.mul"(%1888, %1908) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1923 = "tensor.extract_slice"(%1888) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1924 = "tensor.extract_slice"(%1888) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %1925 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %1926 = "linalg.generic"(%1924, %1925) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %1927 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %1928 = "tensor.insert_slice"(%1926, %1927) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1929 = "tensor.insert_slice"(%1923, %1928) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1930 = "tosa.mul"(%1929, %1911) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1931 = "tosa.add"(%1922, %1930) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1932 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %1933 = "linalg.generic"(%1931, %1932) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1934 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1935 = "tosa.add"(%1921, %1934) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1936 = "tosa.reshape"(%1935) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1937 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %1938 = "tosa.add"(%1933, %1937) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %1939 = "tosa.reshape"(%1938) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %1940 = "tosa.matmul"(%1936, %1939) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %1941 = "tosa.reshape"(%1940) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1942 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1943 = "tosa.reciprocal"(%1942) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1944 = "tosa.mul"(%1941, %1943) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1945 = "tosa.add"(%1944, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1946 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1947 = "linalg.generic"(%1945, %1946) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1948 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1949 = "linalg.generic"(%1948) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1950 = "linalg.generic"(%1947, %1948) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1951 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1952 = "linalg.generic"(%1947, %1950, %1951) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1953 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %1954 = "linalg.generic"(%1953) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1955 = "linalg.generic"(%1952, %1954) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %1956 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %1957 = "linalg.generic"(%1952, %1955, %1956) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %1958 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %1959 = "linalg.generic"(%1957, %1958) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1960 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %1961 = "tosa.add"(%1959, %1960) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %1962 = "tosa.reshape"(%1961) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %1963 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %1964 = "tosa.add"(%1891, %1963) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1965 = "tosa.reshape"(%1964) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1966 = "tosa.matmul"(%1962, %1965) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %1967 = "tosa.reshape"(%1966) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %1968 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %1969 = "linalg.generic"(%1967, %1968) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1970 = "tosa.identity"(%1969) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %1971 = "tosa.reshape"(%1970) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %1972 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %1973 = "linalg.generic"(%172, %1972) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %1974 = "tosa.reshape"(%1971) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1975 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %1976 = "linalg.matmul"(%1974, %1973, %1975) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %1977 = "tosa.reshape"(%1976) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1978 = "tosa.add"(%1849, %1977) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1979 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1980 = "linalg.generic"(%1978, %1979) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1981 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %1982 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %1983 = "linalg.generic"(%1980, %1981) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %1982) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %1984 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1985 = "linalg.generic"(%1983, %1984) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1986 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %1987 = "tosa.add"(%1985, %1986) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1988 = "tosa.rsqrt"(%1987) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %1989 = "tosa.mul"(%1980, %1988) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %1990 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %1991 = "linalg.generic"(%1989, %1990) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1992 = "tosa.reshape"(%15) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %1993 = "tosa.mul"(%1992, %1991) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %1994 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %1995 = "linalg.generic"(%174, %1994) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %1996 = "tosa.reshape"(%1993) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %1997 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %1998 = "linalg.matmul"(%1996, %1995, %1997) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %1999 = "tosa.reshape"(%1998) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2000 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2001 = "linalg.generic"(%1999, %2000) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2002 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2003 = "linalg.generic"(%176, %2002) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2004 = "tosa.reshape"(%1993) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2005 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2006 = "linalg.matmul"(%2004, %2003, %2005) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2007 = "tosa.reshape"(%2006) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2008 = "tosa.mul"(%2001, %2007) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2009 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %2010 = "linalg.generic"(%178, %2009) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %2011 = "tosa.reshape"(%2008) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %2012 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2013 = "linalg.matmul"(%2011, %2010, %2012) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2014 = "tosa.reshape"(%2013) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2015 = "tosa.add"(%1978, %2014) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2016 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2017 = "linalg.generic"(%2015, %2016) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2018 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2019 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2020 = "linalg.generic"(%2017, %2018) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2019) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2021 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2022 = "linalg.generic"(%2020, %2021) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2023 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2024 = "tosa.add"(%2022, %2023) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2025 = "tosa.rsqrt"(%2024) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2026 = "tosa.mul"(%2017, %2025) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2027 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2028 = "linalg.generic"(%2026, %2027) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2029 = "tosa.reshape"(%16) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2030 = "tosa.mul"(%2029, %2028) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2031 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2032 = "linalg.generic"(%180, %2031) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2033 = "tosa.reshape"(%2030) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2034 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2035 = "linalg.matmul"(%2033, %2032, %2034) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2036 = "tosa.reshape"(%2035) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2037 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2038 = "linalg.generic"(%182, %2037) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2039 = "tosa.reshape"(%2030) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2040 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2041 = "linalg.matmul"(%2039, %2038, %2040) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2042 = "tosa.reshape"(%2041) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2043 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2044 = "linalg.generic"(%184, %2043) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2045 = "tosa.reshape"(%2030) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2046 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2047 = "linalg.matmul"(%2045, %2044, %2046) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2048 = "tosa.reshape"(%2047) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2049 = "tosa.reshape"(%2036) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2050 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2051 = "linalg.generic"(%2049, %2050) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2052 = "tosa.reshape"(%2042) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2053 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2054 = "linalg.generic"(%2052, %2053) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2055 = "tosa.reshape"(%2048) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2056 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2057 = "linalg.generic"(%2055, %2056) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2058 = "tensor.extract_slice"(%550) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2059 = "tensor.extract_slice"(%2058) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2060 = "tensor.extract_slice"(%2059) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2061 = "tensor.extract_slice"(%552) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2062 = "tensor.extract_slice"(%2061) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2063 = "tensor.extract_slice"(%2062) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2064 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2065 = "linalg.generic"(%2060, %2064) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2066 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2067 = "linalg.generic"(%2065, %2066) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2068 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2069 = "linalg.generic"(%2063, %2068) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2070 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2071 = "linalg.generic"(%2069, %2070) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2072 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2073 = "linalg.generic"(%647, %2072) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2067, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2074 = "tosa.reshape"(%2073) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2075 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2076 = "linalg.generic"(%647, %2075) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2071, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2077 = "tosa.reshape"(%2076) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2078 = "tosa.mul"(%2051, %2074) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2079 = "tensor.extract_slice"(%2051) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2080 = "tensor.extract_slice"(%2051) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2081 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2082 = "linalg.generic"(%2080, %2081) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2083 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2084 = "tensor.insert_slice"(%2082, %2083) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2085 = "tensor.insert_slice"(%2079, %2084) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2086 = "tosa.mul"(%2085, %2077) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2087 = "tosa.add"(%2078, %2086) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2088 = "tosa.mul"(%2054, %2074) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2089 = "tensor.extract_slice"(%2054) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2090 = "tensor.extract_slice"(%2054) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2091 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2092 = "linalg.generic"(%2090, %2091) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2093 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2094 = "tensor.insert_slice"(%2092, %2093) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2095 = "tensor.insert_slice"(%2089, %2094) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2096 = "tosa.mul"(%2095, %2077) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2097 = "tosa.add"(%2088, %2096) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2098 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %2099 = "linalg.generic"(%2097, %2098) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2100 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2101 = "tosa.add"(%2087, %2100) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2102 = "tosa.reshape"(%2101) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2103 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %2104 = "tosa.add"(%2099, %2103) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2105 = "tosa.reshape"(%2104) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %2106 = "tosa.matmul"(%2102, %2105) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %2107 = "tosa.reshape"(%2106) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2108 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2109 = "tosa.reciprocal"(%2108) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2110 = "tosa.mul"(%2107, %2109) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2111 = "tosa.add"(%2110, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2112 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2113 = "linalg.generic"(%2111, %2112) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2114 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2115 = "linalg.generic"(%2114) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2116 = "linalg.generic"(%2113, %2114) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2117 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2118 = "linalg.generic"(%2113, %2116, %2117) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2119 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2120 = "linalg.generic"(%2119) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2121 = "linalg.generic"(%2118, %2120) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2122 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2123 = "linalg.generic"(%2118, %2121, %2122) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2124 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %2125 = "linalg.generic"(%2123, %2124) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2126 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2127 = "tosa.add"(%2125, %2126) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2128 = "tosa.reshape"(%2127) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %2129 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2130 = "tosa.add"(%2057, %2129) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2131 = "tosa.reshape"(%2130) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2132 = "tosa.matmul"(%2128, %2131) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2133 = "tosa.reshape"(%2132) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2134 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %2135 = "linalg.generic"(%2133, %2134) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2136 = "tosa.identity"(%2135) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2137 = "tosa.reshape"(%2136) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %2138 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2139 = "linalg.generic"(%186, %2138) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2140 = "tosa.reshape"(%2137) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2141 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2142 = "linalg.matmul"(%2140, %2139, %2141) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2143 = "tosa.reshape"(%2142) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2144 = "tosa.add"(%2015, %2143) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2145 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2146 = "linalg.generic"(%2144, %2145) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2147 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2148 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2149 = "linalg.generic"(%2146, %2147) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2148) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2150 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2151 = "linalg.generic"(%2149, %2150) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2152 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2153 = "tosa.add"(%2151, %2152) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2154 = "tosa.rsqrt"(%2153) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2155 = "tosa.mul"(%2146, %2154) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2156 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2157 = "linalg.generic"(%2155, %2156) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2158 = "tosa.reshape"(%17) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2159 = "tosa.mul"(%2158, %2157) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2160 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2161 = "linalg.generic"(%188, %2160) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2162 = "tosa.reshape"(%2159) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2163 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2164 = "linalg.matmul"(%2162, %2161, %2163) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2165 = "tosa.reshape"(%2164) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2166 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2167 = "linalg.generic"(%2165, %2166) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2168 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2169 = "linalg.generic"(%190, %2168) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2170 = "tosa.reshape"(%2159) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2171 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2172 = "linalg.matmul"(%2170, %2169, %2171) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2173 = "tosa.reshape"(%2172) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2174 = "tosa.mul"(%2167, %2173) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2175 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %2176 = "linalg.generic"(%192, %2175) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %2177 = "tosa.reshape"(%2174) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %2178 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2179 = "linalg.matmul"(%2177, %2176, %2178) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2180 = "tosa.reshape"(%2179) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2181 = "tosa.add"(%2144, %2180) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2182 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2183 = "linalg.generic"(%2181, %2182) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2184 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2185 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2186 = "linalg.generic"(%2183, %2184) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2185) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2187 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2188 = "linalg.generic"(%2186, %2187) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2189 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2190 = "tosa.add"(%2188, %2189) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2191 = "tosa.rsqrt"(%2190) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2192 = "tosa.mul"(%2183, %2191) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2193 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2194 = "linalg.generic"(%2192, %2193) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2195 = "tosa.reshape"(%18) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2196 = "tosa.mul"(%2195, %2194) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2197 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2198 = "linalg.generic"(%194, %2197) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2199 = "tosa.reshape"(%2196) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2200 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2201 = "linalg.matmul"(%2199, %2198, %2200) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2202 = "tosa.reshape"(%2201) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2203 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2204 = "linalg.generic"(%196, %2203) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2205 = "tosa.reshape"(%2196) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2206 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2207 = "linalg.matmul"(%2205, %2204, %2206) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2208 = "tosa.reshape"(%2207) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2209 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2210 = "linalg.generic"(%198, %2209) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2211 = "tosa.reshape"(%2196) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2212 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2213 = "linalg.matmul"(%2211, %2210, %2212) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2214 = "tosa.reshape"(%2213) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2215 = "tosa.reshape"(%2202) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2216 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2217 = "linalg.generic"(%2215, %2216) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2218 = "tosa.reshape"(%2208) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2219 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2220 = "linalg.generic"(%2218, %2219) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2221 = "tosa.reshape"(%2214) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2222 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2223 = "linalg.generic"(%2221, %2222) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2224 = "tensor.extract_slice"(%554) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2225 = "tensor.extract_slice"(%2224) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2226 = "tensor.extract_slice"(%2225) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2227 = "tensor.extract_slice"(%556) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2228 = "tensor.extract_slice"(%2227) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2229 = "tensor.extract_slice"(%2228) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2230 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2231 = "linalg.generic"(%2226, %2230) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2232 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2233 = "linalg.generic"(%2231, %2232) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2234 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2235 = "linalg.generic"(%2229, %2234) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2236 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2237 = "linalg.generic"(%2235, %2236) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2238 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2239 = "linalg.generic"(%647, %2238) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2233, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2240 = "tosa.reshape"(%2239) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2241 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2242 = "linalg.generic"(%647, %2241) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2237, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2243 = "tosa.reshape"(%2242) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2244 = "tosa.mul"(%2217, %2240) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2245 = "tensor.extract_slice"(%2217) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2246 = "tensor.extract_slice"(%2217) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2247 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2248 = "linalg.generic"(%2246, %2247) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2249 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2250 = "tensor.insert_slice"(%2248, %2249) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2251 = "tensor.insert_slice"(%2245, %2250) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2252 = "tosa.mul"(%2251, %2243) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2253 = "tosa.add"(%2244, %2252) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2254 = "tosa.mul"(%2220, %2240) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2255 = "tensor.extract_slice"(%2220) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2256 = "tensor.extract_slice"(%2220) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2257 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2258 = "linalg.generic"(%2256, %2257) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2259 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2260 = "tensor.insert_slice"(%2258, %2259) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2261 = "tensor.insert_slice"(%2255, %2260) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2262 = "tosa.mul"(%2261, %2243) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2263 = "tosa.add"(%2254, %2262) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2264 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %2265 = "linalg.generic"(%2263, %2264) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2266 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2267 = "tosa.add"(%2253, %2266) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2268 = "tosa.reshape"(%2267) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2269 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %2270 = "tosa.add"(%2265, %2269) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2271 = "tosa.reshape"(%2270) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %2272 = "tosa.matmul"(%2268, %2271) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %2273 = "tosa.reshape"(%2272) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2274 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2275 = "tosa.reciprocal"(%2274) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2276 = "tosa.mul"(%2273, %2275) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2277 = "tosa.add"(%2276, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2278 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2279 = "linalg.generic"(%2277, %2278) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2280 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2281 = "linalg.generic"(%2280) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2282 = "linalg.generic"(%2279, %2280) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2283 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2284 = "linalg.generic"(%2279, %2282, %2283) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2285 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2286 = "linalg.generic"(%2285) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2287 = "linalg.generic"(%2284, %2286) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2288 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2289 = "linalg.generic"(%2284, %2287, %2288) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2290 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %2291 = "linalg.generic"(%2289, %2290) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2292 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2293 = "tosa.add"(%2291, %2292) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2294 = "tosa.reshape"(%2293) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %2295 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2296 = "tosa.add"(%2223, %2295) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2297 = "tosa.reshape"(%2296) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2298 = "tosa.matmul"(%2294, %2297) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2299 = "tosa.reshape"(%2298) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2300 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %2301 = "linalg.generic"(%2299, %2300) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2302 = "tosa.identity"(%2301) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2303 = "tosa.reshape"(%2302) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %2304 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2305 = "linalg.generic"(%200, %2304) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2306 = "tosa.reshape"(%2303) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2307 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2308 = "linalg.matmul"(%2306, %2305, %2307) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2309 = "tosa.reshape"(%2308) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2310 = "tosa.add"(%2181, %2309) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2311 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2312 = "linalg.generic"(%2310, %2311) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2313 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2314 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2315 = "linalg.generic"(%2312, %2313) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2314) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2316 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2317 = "linalg.generic"(%2315, %2316) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2318 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2319 = "tosa.add"(%2317, %2318) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2320 = "tosa.rsqrt"(%2319) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2321 = "tosa.mul"(%2312, %2320) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2322 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2323 = "linalg.generic"(%2321, %2322) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2324 = "tosa.reshape"(%19) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2325 = "tosa.mul"(%2324, %2323) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2326 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2327 = "linalg.generic"(%202, %2326) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2328 = "tosa.reshape"(%2325) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2329 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2330 = "linalg.matmul"(%2328, %2327, %2329) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2331 = "tosa.reshape"(%2330) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2332 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2333 = "linalg.generic"(%2331, %2332) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2334 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2335 = "linalg.generic"(%204, %2334) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2336 = "tosa.reshape"(%2325) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2337 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2338 = "linalg.matmul"(%2336, %2335, %2337) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2339 = "tosa.reshape"(%2338) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2340 = "tosa.mul"(%2333, %2339) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2341 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %2342 = "linalg.generic"(%206, %2341) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %2343 = "tosa.reshape"(%2340) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %2344 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2345 = "linalg.matmul"(%2343, %2342, %2344) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2346 = "tosa.reshape"(%2345) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2347 = "tosa.add"(%2310, %2346) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2348 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2349 = "linalg.generic"(%2347, %2348) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2350 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2351 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2352 = "linalg.generic"(%2349, %2350) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2351) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2353 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2354 = "linalg.generic"(%2352, %2353) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2355 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2356 = "tosa.add"(%2354, %2355) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2357 = "tosa.rsqrt"(%2356) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2358 = "tosa.mul"(%2349, %2357) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2359 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2360 = "linalg.generic"(%2358, %2359) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2361 = "tosa.reshape"(%20) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2362 = "tosa.mul"(%2361, %2360) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2363 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2364 = "linalg.generic"(%208, %2363) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2365 = "tosa.reshape"(%2362) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2366 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2367 = "linalg.matmul"(%2365, %2364, %2366) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2368 = "tosa.reshape"(%2367) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2369 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2370 = "linalg.generic"(%210, %2369) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2371 = "tosa.reshape"(%2362) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2372 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2373 = "linalg.matmul"(%2371, %2370, %2372) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2374 = "tosa.reshape"(%2373) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2375 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2376 = "linalg.generic"(%212, %2375) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2377 = "tosa.reshape"(%2362) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2378 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2379 = "linalg.matmul"(%2377, %2376, %2378) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2380 = "tosa.reshape"(%2379) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2381 = "tosa.reshape"(%2368) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2382 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2383 = "linalg.generic"(%2381, %2382) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2384 = "tosa.reshape"(%2374) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2385 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2386 = "linalg.generic"(%2384, %2385) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2387 = "tosa.reshape"(%2380) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2388 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2389 = "linalg.generic"(%2387, %2388) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2390 = "tensor.extract_slice"(%558) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2391 = "tensor.extract_slice"(%2390) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2392 = "tensor.extract_slice"(%2391) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2393 = "tensor.extract_slice"(%560) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2394 = "tensor.extract_slice"(%2393) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2395 = "tensor.extract_slice"(%2394) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2396 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2397 = "linalg.generic"(%2392, %2396) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2398 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2399 = "linalg.generic"(%2397, %2398) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2400 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2401 = "linalg.generic"(%2395, %2400) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2402 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2403 = "linalg.generic"(%2401, %2402) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2404 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2405 = "linalg.generic"(%647, %2404) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2399, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2406 = "tosa.reshape"(%2405) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2407 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2408 = "linalg.generic"(%647, %2407) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2403, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2409 = "tosa.reshape"(%2408) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2410 = "tosa.mul"(%2383, %2406) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2411 = "tensor.extract_slice"(%2383) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2412 = "tensor.extract_slice"(%2383) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2413 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2414 = "linalg.generic"(%2412, %2413) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2415 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2416 = "tensor.insert_slice"(%2414, %2415) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2417 = "tensor.insert_slice"(%2411, %2416) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2418 = "tosa.mul"(%2417, %2409) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2419 = "tosa.add"(%2410, %2418) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2420 = "tosa.mul"(%2386, %2406) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2421 = "tensor.extract_slice"(%2386) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2422 = "tensor.extract_slice"(%2386) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2423 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2424 = "linalg.generic"(%2422, %2423) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2425 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2426 = "tensor.insert_slice"(%2424, %2425) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2427 = "tensor.insert_slice"(%2421, %2426) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2428 = "tosa.mul"(%2427, %2409) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2429 = "tosa.add"(%2420, %2428) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2430 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %2431 = "linalg.generic"(%2429, %2430) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2432 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2433 = "tosa.add"(%2419, %2432) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2434 = "tosa.reshape"(%2433) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2435 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %2436 = "tosa.add"(%2431, %2435) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2437 = "tosa.reshape"(%2436) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %2438 = "tosa.matmul"(%2434, %2437) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %2439 = "tosa.reshape"(%2438) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2440 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2441 = "tosa.reciprocal"(%2440) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2442 = "tosa.mul"(%2439, %2441) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2443 = "tosa.add"(%2442, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2444 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2445 = "linalg.generic"(%2443, %2444) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2446 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2447 = "linalg.generic"(%2446) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2448 = "linalg.generic"(%2445, %2446) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2449 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2450 = "linalg.generic"(%2445, %2448, %2449) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2451 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2452 = "linalg.generic"(%2451) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2453 = "linalg.generic"(%2450, %2452) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2454 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2455 = "linalg.generic"(%2450, %2453, %2454) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2456 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %2457 = "linalg.generic"(%2455, %2456) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2458 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2459 = "tosa.add"(%2457, %2458) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2460 = "tosa.reshape"(%2459) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %2461 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2462 = "tosa.add"(%2389, %2461) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2463 = "tosa.reshape"(%2462) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2464 = "tosa.matmul"(%2460, %2463) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2465 = "tosa.reshape"(%2464) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2466 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %2467 = "linalg.generic"(%2465, %2466) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2468 = "tosa.identity"(%2467) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2469 = "tosa.reshape"(%2468) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %2470 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2471 = "linalg.generic"(%214, %2470) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2472 = "tosa.reshape"(%2469) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2473 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2474 = "linalg.matmul"(%2472, %2471, %2473) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2475 = "tosa.reshape"(%2474) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2476 = "tosa.add"(%2347, %2475) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2477 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2478 = "linalg.generic"(%2476, %2477) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2479 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2480 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2481 = "linalg.generic"(%2478, %2479) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2480) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2482 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2483 = "linalg.generic"(%2481, %2482) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2484 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2485 = "tosa.add"(%2483, %2484) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2486 = "tosa.rsqrt"(%2485) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2487 = "tosa.mul"(%2478, %2486) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2488 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2489 = "linalg.generic"(%2487, %2488) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2490 = "tosa.reshape"(%21) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2491 = "tosa.mul"(%2490, %2489) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2492 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2493 = "linalg.generic"(%216, %2492) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2494 = "tosa.reshape"(%2491) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2495 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2496 = "linalg.matmul"(%2494, %2493, %2495) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2497 = "tosa.reshape"(%2496) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2498 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2499 = "linalg.generic"(%2497, %2498) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2500 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2501 = "linalg.generic"(%218, %2500) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2502 = "tosa.reshape"(%2491) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2503 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2504 = "linalg.matmul"(%2502, %2501, %2503) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2505 = "tosa.reshape"(%2504) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2506 = "tosa.mul"(%2499, %2505) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2507 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %2508 = "linalg.generic"(%220, %2507) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %2509 = "tosa.reshape"(%2506) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %2510 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2511 = "linalg.matmul"(%2509, %2508, %2510) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2512 = "tosa.reshape"(%2511) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2513 = "tosa.add"(%2476, %2512) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2514 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2515 = "linalg.generic"(%2513, %2514) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2516 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2517 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2518 = "linalg.generic"(%2515, %2516) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2517) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2519 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2520 = "linalg.generic"(%2518, %2519) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2521 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2522 = "tosa.add"(%2520, %2521) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2523 = "tosa.rsqrt"(%2522) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2524 = "tosa.mul"(%2515, %2523) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2525 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2526 = "linalg.generic"(%2524, %2525) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2527 = "tosa.reshape"(%22) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2528 = "tosa.mul"(%2527, %2526) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2529 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2530 = "linalg.generic"(%222, %2529) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2531 = "tosa.reshape"(%2528) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2532 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2533 = "linalg.matmul"(%2531, %2530, %2532) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2534 = "tosa.reshape"(%2533) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2535 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2536 = "linalg.generic"(%224, %2535) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2537 = "tosa.reshape"(%2528) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2538 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2539 = "linalg.matmul"(%2537, %2536, %2538) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2540 = "tosa.reshape"(%2539) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2541 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2542 = "linalg.generic"(%226, %2541) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2543 = "tosa.reshape"(%2528) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2544 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2545 = "linalg.matmul"(%2543, %2542, %2544) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2546 = "tosa.reshape"(%2545) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2547 = "tosa.reshape"(%2534) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2548 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2549 = "linalg.generic"(%2547, %2548) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2550 = "tosa.reshape"(%2540) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2551 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2552 = "linalg.generic"(%2550, %2551) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2553 = "tosa.reshape"(%2546) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2554 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2555 = "linalg.generic"(%2553, %2554) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2556 = "tensor.extract_slice"(%562) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2557 = "tensor.extract_slice"(%2556) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2558 = "tensor.extract_slice"(%2557) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2559 = "tensor.extract_slice"(%564) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2560 = "tensor.extract_slice"(%2559) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2561 = "tensor.extract_slice"(%2560) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2562 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2563 = "linalg.generic"(%2558, %2562) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2564 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2565 = "linalg.generic"(%2563, %2564) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2566 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2567 = "linalg.generic"(%2561, %2566) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2568 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2569 = "linalg.generic"(%2567, %2568) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2570 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2571 = "linalg.generic"(%647, %2570) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2565, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2572 = "tosa.reshape"(%2571) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2573 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2574 = "linalg.generic"(%647, %2573) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2569, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2575 = "tosa.reshape"(%2574) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2576 = "tosa.mul"(%2549, %2572) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2577 = "tensor.extract_slice"(%2549) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2578 = "tensor.extract_slice"(%2549) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2579 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2580 = "linalg.generic"(%2578, %2579) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2581 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2582 = "tensor.insert_slice"(%2580, %2581) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2583 = "tensor.insert_slice"(%2577, %2582) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2584 = "tosa.mul"(%2583, %2575) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2585 = "tosa.add"(%2576, %2584) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2586 = "tosa.mul"(%2552, %2572) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2587 = "tensor.extract_slice"(%2552) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2588 = "tensor.extract_slice"(%2552) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2589 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2590 = "linalg.generic"(%2588, %2589) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2591 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2592 = "tensor.insert_slice"(%2590, %2591) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2593 = "tensor.insert_slice"(%2587, %2592) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2594 = "tosa.mul"(%2593, %2575) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2595 = "tosa.add"(%2586, %2594) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2596 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %2597 = "linalg.generic"(%2595, %2596) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2598 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2599 = "tosa.add"(%2585, %2598) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2600 = "tosa.reshape"(%2599) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2601 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %2602 = "tosa.add"(%2597, %2601) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2603 = "tosa.reshape"(%2602) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %2604 = "tosa.matmul"(%2600, %2603) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %2605 = "tosa.reshape"(%2604) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2606 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2607 = "tosa.reciprocal"(%2606) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2608 = "tosa.mul"(%2605, %2607) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2609 = "tosa.add"(%2608, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2610 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2611 = "linalg.generic"(%2609, %2610) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2612 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2613 = "linalg.generic"(%2612) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2614 = "linalg.generic"(%2611, %2612) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2615 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2616 = "linalg.generic"(%2611, %2614, %2615) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2617 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2618 = "linalg.generic"(%2617) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2619 = "linalg.generic"(%2616, %2618) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2620 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2621 = "linalg.generic"(%2616, %2619, %2620) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2622 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %2623 = "linalg.generic"(%2621, %2622) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2624 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2625 = "tosa.add"(%2623, %2624) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2626 = "tosa.reshape"(%2625) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %2627 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2628 = "tosa.add"(%2555, %2627) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2629 = "tosa.reshape"(%2628) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2630 = "tosa.matmul"(%2626, %2629) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2631 = "tosa.reshape"(%2630) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2632 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %2633 = "linalg.generic"(%2631, %2632) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2634 = "tosa.identity"(%2633) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2635 = "tosa.reshape"(%2634) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %2636 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2637 = "linalg.generic"(%228, %2636) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2638 = "tosa.reshape"(%2635) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2639 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2640 = "linalg.matmul"(%2638, %2637, %2639) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2641 = "tosa.reshape"(%2640) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2642 = "tosa.add"(%2513, %2641) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2643 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2644 = "linalg.generic"(%2642, %2643) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2645 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2646 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2647 = "linalg.generic"(%2644, %2645) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2646) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2648 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2649 = "linalg.generic"(%2647, %2648) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2650 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2651 = "tosa.add"(%2649, %2650) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2652 = "tosa.rsqrt"(%2651) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2653 = "tosa.mul"(%2644, %2652) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2654 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2655 = "linalg.generic"(%2653, %2654) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2656 = "tosa.reshape"(%23) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2657 = "tosa.mul"(%2656, %2655) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2658 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2659 = "linalg.generic"(%230, %2658) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2660 = "tosa.reshape"(%2657) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2661 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2662 = "linalg.matmul"(%2660, %2659, %2661) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2663 = "tosa.reshape"(%2662) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2664 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2665 = "linalg.generic"(%2663, %2664) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2666 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2667 = "linalg.generic"(%232, %2666) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2668 = "tosa.reshape"(%2657) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2669 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2670 = "linalg.matmul"(%2668, %2667, %2669) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2671 = "tosa.reshape"(%2670) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2672 = "tosa.mul"(%2665, %2671) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2673 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %2674 = "linalg.generic"(%234, %2673) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %2675 = "tosa.reshape"(%2672) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %2676 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2677 = "linalg.matmul"(%2675, %2674, %2676) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2678 = "tosa.reshape"(%2677) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2679 = "tosa.add"(%2642, %2678) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2680 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2681 = "linalg.generic"(%2679, %2680) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2682 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2683 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2684 = "linalg.generic"(%2681, %2682) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2683) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2685 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2686 = "linalg.generic"(%2684, %2685) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2687 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2688 = "tosa.add"(%2686, %2687) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2689 = "tosa.rsqrt"(%2688) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2690 = "tosa.mul"(%2681, %2689) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2691 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2692 = "linalg.generic"(%2690, %2691) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2693 = "tosa.reshape"(%24) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2694 = "tosa.mul"(%2693, %2692) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2695 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2696 = "linalg.generic"(%236, %2695) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2697 = "tosa.reshape"(%2694) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2698 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2699 = "linalg.matmul"(%2697, %2696, %2698) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2700 = "tosa.reshape"(%2699) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2701 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2702 = "linalg.generic"(%238, %2701) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2703 = "tosa.reshape"(%2694) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2704 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2705 = "linalg.matmul"(%2703, %2702, %2704) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2706 = "tosa.reshape"(%2705) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2707 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2708 = "linalg.generic"(%240, %2707) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2709 = "tosa.reshape"(%2694) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2710 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2711 = "linalg.matmul"(%2709, %2708, %2710) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2712 = "tosa.reshape"(%2711) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2713 = "tosa.reshape"(%2700) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2714 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2715 = "linalg.generic"(%2713, %2714) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2716 = "tosa.reshape"(%2706) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2717 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2718 = "linalg.generic"(%2716, %2717) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2719 = "tosa.reshape"(%2712) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2720 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2721 = "linalg.generic"(%2719, %2720) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2722 = "tensor.extract_slice"(%566) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2723 = "tensor.extract_slice"(%2722) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2724 = "tensor.extract_slice"(%2723) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2725 = "tensor.extract_slice"(%568) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2726 = "tensor.extract_slice"(%2725) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2727 = "tensor.extract_slice"(%2726) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2728 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2729 = "linalg.generic"(%2724, %2728) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2730 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2731 = "linalg.generic"(%2729, %2730) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2732 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2733 = "linalg.generic"(%2727, %2732) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2734 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2735 = "linalg.generic"(%2733, %2734) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2736 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2737 = "linalg.generic"(%647, %2736) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2731, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2738 = "tosa.reshape"(%2737) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2739 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2740 = "linalg.generic"(%647, %2739) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2735, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2741 = "tosa.reshape"(%2740) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2742 = "tosa.mul"(%2715, %2738) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2743 = "tensor.extract_slice"(%2715) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2744 = "tensor.extract_slice"(%2715) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2745 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2746 = "linalg.generic"(%2744, %2745) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2747 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2748 = "tensor.insert_slice"(%2746, %2747) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2749 = "tensor.insert_slice"(%2743, %2748) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2750 = "tosa.mul"(%2749, %2741) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2751 = "tosa.add"(%2742, %2750) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2752 = "tosa.mul"(%2718, %2738) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2753 = "tensor.extract_slice"(%2718) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2754 = "tensor.extract_slice"(%2718) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2755 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2756 = "linalg.generic"(%2754, %2755) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2757 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2758 = "tensor.insert_slice"(%2756, %2757) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2759 = "tensor.insert_slice"(%2753, %2758) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2760 = "tosa.mul"(%2759, %2741) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2761 = "tosa.add"(%2752, %2760) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2762 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %2763 = "linalg.generic"(%2761, %2762) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2764 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2765 = "tosa.add"(%2751, %2764) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2766 = "tosa.reshape"(%2765) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2767 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %2768 = "tosa.add"(%2763, %2767) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2769 = "tosa.reshape"(%2768) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %2770 = "tosa.matmul"(%2766, %2769) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %2771 = "tosa.reshape"(%2770) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2772 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2773 = "tosa.reciprocal"(%2772) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2774 = "tosa.mul"(%2771, %2773) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2775 = "tosa.add"(%2774, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2776 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2777 = "linalg.generic"(%2775, %2776) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2778 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2779 = "linalg.generic"(%2778) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2780 = "linalg.generic"(%2777, %2778) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2781 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2782 = "linalg.generic"(%2777, %2780, %2781) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2783 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2784 = "linalg.generic"(%2783) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2785 = "linalg.generic"(%2782, %2784) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2786 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2787 = "linalg.generic"(%2782, %2785, %2786) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2788 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %2789 = "linalg.generic"(%2787, %2788) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2790 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2791 = "tosa.add"(%2789, %2790) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2792 = "tosa.reshape"(%2791) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %2793 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2794 = "tosa.add"(%2721, %2793) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2795 = "tosa.reshape"(%2794) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2796 = "tosa.matmul"(%2792, %2795) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2797 = "tosa.reshape"(%2796) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2798 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %2799 = "linalg.generic"(%2797, %2798) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2800 = "tosa.identity"(%2799) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2801 = "tosa.reshape"(%2800) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %2802 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2803 = "linalg.generic"(%242, %2802) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2804 = "tosa.reshape"(%2801) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2805 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2806 = "linalg.matmul"(%2804, %2803, %2805) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2807 = "tosa.reshape"(%2806) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2808 = "tosa.add"(%2679, %2807) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2809 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2810 = "linalg.generic"(%2808, %2809) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2811 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2812 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2813 = "linalg.generic"(%2810, %2811) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2812) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2814 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2815 = "linalg.generic"(%2813, %2814) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2816 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2817 = "tosa.add"(%2815, %2816) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2818 = "tosa.rsqrt"(%2817) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2819 = "tosa.mul"(%2810, %2818) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2820 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2821 = "linalg.generic"(%2819, %2820) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2822 = "tosa.reshape"(%25) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2823 = "tosa.mul"(%2822, %2821) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2824 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2825 = "linalg.generic"(%244, %2824) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2826 = "tosa.reshape"(%2823) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2827 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2828 = "linalg.matmul"(%2826, %2825, %2827) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2829 = "tosa.reshape"(%2828) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2830 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2831 = "linalg.generic"(%2829, %2830) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2832 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2833 = "linalg.generic"(%246, %2832) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2834 = "tosa.reshape"(%2823) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2835 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2836 = "linalg.matmul"(%2834, %2833, %2835) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2837 = "tosa.reshape"(%2836) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2838 = "tosa.mul"(%2831, %2837) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2839 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %2840 = "linalg.generic"(%248, %2839) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %2841 = "tosa.reshape"(%2838) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %2842 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2843 = "linalg.matmul"(%2841, %2840, %2842) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2844 = "tosa.reshape"(%2843) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2845 = "tosa.add"(%2808, %2844) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2846 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2847 = "linalg.generic"(%2845, %2846) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2848 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2849 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2850 = "linalg.generic"(%2847, %2848) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2849) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2851 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2852 = "linalg.generic"(%2850, %2851) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2853 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2854 = "tosa.add"(%2852, %2853) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2855 = "tosa.rsqrt"(%2854) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2856 = "tosa.mul"(%2847, %2855) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2857 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2858 = "linalg.generic"(%2856, %2857) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2859 = "tosa.reshape"(%26) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2860 = "tosa.mul"(%2859, %2858) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2861 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2862 = "linalg.generic"(%250, %2861) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2863 = "tosa.reshape"(%2860) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2864 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2865 = "linalg.matmul"(%2863, %2862, %2864) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2866 = "tosa.reshape"(%2865) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2867 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2868 = "linalg.generic"(%252, %2867) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2869 = "tosa.reshape"(%2860) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2870 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2871 = "linalg.matmul"(%2869, %2868, %2870) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2872 = "tosa.reshape"(%2871) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2873 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2874 = "linalg.generic"(%254, %2873) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2875 = "tosa.reshape"(%2860) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2876 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2877 = "linalg.matmul"(%2875, %2874, %2876) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2878 = "tosa.reshape"(%2877) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2879 = "tosa.reshape"(%2866) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2880 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2881 = "linalg.generic"(%2879, %2880) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2882 = "tosa.reshape"(%2872) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2883 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2884 = "linalg.generic"(%2882, %2883) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2885 = "tosa.reshape"(%2878) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %2886 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2887 = "linalg.generic"(%2885, %2886) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2888 = "tensor.extract_slice"(%570) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2889 = "tensor.extract_slice"(%2888) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2890 = "tensor.extract_slice"(%2889) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2891 = "tensor.extract_slice"(%572) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2892 = "tensor.extract_slice"(%2891) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %2893 = "tensor.extract_slice"(%2892) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2894 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2895 = "linalg.generic"(%2890, %2894) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2896 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2897 = "linalg.generic"(%2895, %2896) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2898 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2899 = "linalg.generic"(%2893, %2898) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2900 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %2901 = "linalg.generic"(%2899, %2900) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %2902 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2903 = "linalg.generic"(%647, %2902) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2897, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2904 = "tosa.reshape"(%2903) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2905 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %2906 = "linalg.generic"(%647, %2905) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%2901, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %2907 = "tosa.reshape"(%2906) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %2908 = "tosa.mul"(%2881, %2904) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2909 = "tensor.extract_slice"(%2881) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2910 = "tensor.extract_slice"(%2881) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2911 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2912 = "linalg.generic"(%2910, %2911) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2913 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2914 = "tensor.insert_slice"(%2912, %2913) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2915 = "tensor.insert_slice"(%2909, %2914) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2916 = "tosa.mul"(%2915, %2907) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2917 = "tosa.add"(%2908, %2916) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2918 = "tosa.mul"(%2884, %2904) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2919 = "tensor.extract_slice"(%2884) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2920 = "tensor.extract_slice"(%2884) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %2921 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %2922 = "linalg.generic"(%2920, %2921) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %2923 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %2924 = "tensor.insert_slice"(%2922, %2923) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2925 = "tensor.insert_slice"(%2919, %2924) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2926 = "tosa.mul"(%2925, %2907) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2927 = "tosa.add"(%2918, %2926) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2928 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %2929 = "linalg.generic"(%2927, %2928) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2930 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2931 = "tosa.add"(%2917, %2930) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2932 = "tosa.reshape"(%2931) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2933 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %2934 = "tosa.add"(%2929, %2933) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %2935 = "tosa.reshape"(%2934) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %2936 = "tosa.matmul"(%2932, %2935) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %2937 = "tosa.reshape"(%2936) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2938 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2939 = "tosa.reciprocal"(%2938) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2940 = "tosa.mul"(%2937, %2939) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2941 = "tosa.add"(%2940, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2942 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2943 = "linalg.generic"(%2941, %2942) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2944 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2945 = "linalg.generic"(%2944) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2946 = "linalg.generic"(%2943, %2944) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2947 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2948 = "linalg.generic"(%2943, %2946, %2947) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2949 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %2950 = "linalg.generic"(%2949) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2951 = "linalg.generic"(%2948, %2950) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %2952 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %2953 = "linalg.generic"(%2948, %2951, %2952) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %2954 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %2955 = "linalg.generic"(%2953, %2954) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2956 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %2957 = "tosa.add"(%2955, %2956) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %2958 = "tosa.reshape"(%2957) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %2959 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %2960 = "tosa.add"(%2887, %2959) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2961 = "tosa.reshape"(%2960) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2962 = "tosa.matmul"(%2958, %2961) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %2963 = "tosa.reshape"(%2962) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %2964 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %2965 = "linalg.generic"(%2963, %2964) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2966 = "tosa.identity"(%2965) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %2967 = "tosa.reshape"(%2966) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %2968 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %2969 = "linalg.generic"(%256, %2968) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %2970 = "tosa.reshape"(%2967) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2971 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %2972 = "linalg.matmul"(%2970, %2969, %2971) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %2973 = "tosa.reshape"(%2972) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2974 = "tosa.add"(%2845, %2973) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2975 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2976 = "linalg.generic"(%2974, %2975) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2977 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %2978 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %2979 = "linalg.generic"(%2976, %2977) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %2978) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %2980 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2981 = "linalg.generic"(%2979, %2980) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2982 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %2983 = "tosa.add"(%2981, %2982) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2984 = "tosa.rsqrt"(%2983) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %2985 = "tosa.mul"(%2976, %2984) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %2986 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %2987 = "linalg.generic"(%2985, %2986) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2988 = "tosa.reshape"(%27) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %2989 = "tosa.mul"(%2988, %2987) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %2990 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2991 = "linalg.generic"(%258, %2990) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %2992 = "tosa.reshape"(%2989) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %2993 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %2994 = "linalg.matmul"(%2992, %2991, %2993) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %2995 = "tosa.reshape"(%2994) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2996 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %2997 = "linalg.generic"(%2995, %2996) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %2998 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %2999 = "linalg.generic"(%260, %2998) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3000 = "tosa.reshape"(%2989) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3001 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3002 = "linalg.matmul"(%3000, %2999, %3001) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3003 = "tosa.reshape"(%3002) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3004 = "tosa.mul"(%2997, %3003) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3005 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %3006 = "linalg.generic"(%262, %3005) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %3007 = "tosa.reshape"(%3004) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %3008 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3009 = "linalg.matmul"(%3007, %3006, %3008) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3010 = "tosa.reshape"(%3009) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3011 = "tosa.add"(%2974, %3010) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3012 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3013 = "linalg.generic"(%3011, %3012) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3014 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3015 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3016 = "linalg.generic"(%3013, %3014) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3015) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3017 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3018 = "linalg.generic"(%3016, %3017) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3019 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3020 = "tosa.add"(%3018, %3019) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3021 = "tosa.rsqrt"(%3020) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3022 = "tosa.mul"(%3013, %3021) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3023 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3024 = "linalg.generic"(%3022, %3023) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3025 = "tosa.reshape"(%28) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3026 = "tosa.mul"(%3025, %3024) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3027 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3028 = "linalg.generic"(%264, %3027) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3029 = "tosa.reshape"(%3026) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3030 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3031 = "linalg.matmul"(%3029, %3028, %3030) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3032 = "tosa.reshape"(%3031) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3033 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3034 = "linalg.generic"(%266, %3033) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3035 = "tosa.reshape"(%3026) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3036 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3037 = "linalg.matmul"(%3035, %3034, %3036) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3038 = "tosa.reshape"(%3037) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3039 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3040 = "linalg.generic"(%268, %3039) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3041 = "tosa.reshape"(%3026) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3042 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3043 = "linalg.matmul"(%3041, %3040, %3042) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3044 = "tosa.reshape"(%3043) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3045 = "tosa.reshape"(%3032) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3046 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3047 = "linalg.generic"(%3045, %3046) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3048 = "tosa.reshape"(%3038) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3049 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3050 = "linalg.generic"(%3048, %3049) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3051 = "tosa.reshape"(%3044) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3052 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3053 = "linalg.generic"(%3051, %3052) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3054 = "tensor.extract_slice"(%574) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3055 = "tensor.extract_slice"(%3054) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3056 = "tensor.extract_slice"(%3055) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3057 = "tensor.extract_slice"(%576) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3058 = "tensor.extract_slice"(%3057) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3059 = "tensor.extract_slice"(%3058) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3060 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3061 = "linalg.generic"(%3056, %3060) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3062 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3063 = "linalg.generic"(%3061, %3062) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3064 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3065 = "linalg.generic"(%3059, %3064) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3066 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3067 = "linalg.generic"(%3065, %3066) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3068 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3069 = "linalg.generic"(%647, %3068) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3063, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3070 = "tosa.reshape"(%3069) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3071 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3072 = "linalg.generic"(%647, %3071) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3067, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3073 = "tosa.reshape"(%3072) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3074 = "tosa.mul"(%3047, %3070) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3075 = "tensor.extract_slice"(%3047) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3076 = "tensor.extract_slice"(%3047) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3077 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3078 = "linalg.generic"(%3076, %3077) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3079 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3080 = "tensor.insert_slice"(%3078, %3079) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3081 = "tensor.insert_slice"(%3075, %3080) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3082 = "tosa.mul"(%3081, %3073) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3083 = "tosa.add"(%3074, %3082) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3084 = "tosa.mul"(%3050, %3070) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3085 = "tensor.extract_slice"(%3050) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3086 = "tensor.extract_slice"(%3050) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3087 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3088 = "linalg.generic"(%3086, %3087) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3089 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3090 = "tensor.insert_slice"(%3088, %3089) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3091 = "tensor.insert_slice"(%3085, %3090) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3092 = "tosa.mul"(%3091, %3073) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3093 = "tosa.add"(%3084, %3092) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3094 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %3095 = "linalg.generic"(%3093, %3094) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3096 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3097 = "tosa.add"(%3083, %3096) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3098 = "tosa.reshape"(%3097) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3099 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %3100 = "tosa.add"(%3095, %3099) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3101 = "tosa.reshape"(%3100) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %3102 = "tosa.matmul"(%3098, %3101) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %3103 = "tosa.reshape"(%3102) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3104 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3105 = "tosa.reciprocal"(%3104) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3106 = "tosa.mul"(%3103, %3105) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3107 = "tosa.add"(%3106, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3108 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3109 = "linalg.generic"(%3107, %3108) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3110 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3111 = "linalg.generic"(%3110) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3112 = "linalg.generic"(%3109, %3110) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3113 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3114 = "linalg.generic"(%3109, %3112, %3113) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3115 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3116 = "linalg.generic"(%3115) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3117 = "linalg.generic"(%3114, %3116) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3118 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3119 = "linalg.generic"(%3114, %3117, %3118) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3120 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %3121 = "linalg.generic"(%3119, %3120) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3122 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3123 = "tosa.add"(%3121, %3122) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3124 = "tosa.reshape"(%3123) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %3125 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3126 = "tosa.add"(%3053, %3125) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3127 = "tosa.reshape"(%3126) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3128 = "tosa.matmul"(%3124, %3127) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3129 = "tosa.reshape"(%3128) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3130 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %3131 = "linalg.generic"(%3129, %3130) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3132 = "tosa.identity"(%3131) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3133 = "tosa.reshape"(%3132) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %3134 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3135 = "linalg.generic"(%270, %3134) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3136 = "tosa.reshape"(%3133) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3137 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3138 = "linalg.matmul"(%3136, %3135, %3137) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3139 = "tosa.reshape"(%3138) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3140 = "tosa.add"(%3011, %3139) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3141 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3142 = "linalg.generic"(%3140, %3141) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3143 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3144 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3145 = "linalg.generic"(%3142, %3143) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3144) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3146 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3147 = "linalg.generic"(%3145, %3146) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3148 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3149 = "tosa.add"(%3147, %3148) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3150 = "tosa.rsqrt"(%3149) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3151 = "tosa.mul"(%3142, %3150) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3152 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3153 = "linalg.generic"(%3151, %3152) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3154 = "tosa.reshape"(%29) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3155 = "tosa.mul"(%3154, %3153) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3156 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3157 = "linalg.generic"(%272, %3156) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3158 = "tosa.reshape"(%3155) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3159 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3160 = "linalg.matmul"(%3158, %3157, %3159) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3161 = "tosa.reshape"(%3160) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3162 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %3163 = "linalg.generic"(%3161, %3162) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3164 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3165 = "linalg.generic"(%274, %3164) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3166 = "tosa.reshape"(%3155) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3167 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3168 = "linalg.matmul"(%3166, %3165, %3167) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3169 = "tosa.reshape"(%3168) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3170 = "tosa.mul"(%3163, %3169) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3171 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %3172 = "linalg.generic"(%276, %3171) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %3173 = "tosa.reshape"(%3170) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %3174 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3175 = "linalg.matmul"(%3173, %3172, %3174) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3176 = "tosa.reshape"(%3175) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3177 = "tosa.add"(%3140, %3176) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3178 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3179 = "linalg.generic"(%3177, %3178) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3180 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3181 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3182 = "linalg.generic"(%3179, %3180) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3181) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3183 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3184 = "linalg.generic"(%3182, %3183) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3185 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3186 = "tosa.add"(%3184, %3185) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3187 = "tosa.rsqrt"(%3186) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3188 = "tosa.mul"(%3179, %3187) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3189 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3190 = "linalg.generic"(%3188, %3189) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3191 = "tosa.reshape"(%30) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3192 = "tosa.mul"(%3191, %3190) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3193 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3194 = "linalg.generic"(%278, %3193) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3195 = "tosa.reshape"(%3192) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3196 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3197 = "linalg.matmul"(%3195, %3194, %3196) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3198 = "tosa.reshape"(%3197) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3199 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3200 = "linalg.generic"(%280, %3199) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3201 = "tosa.reshape"(%3192) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3202 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3203 = "linalg.matmul"(%3201, %3200, %3202) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3204 = "tosa.reshape"(%3203) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3205 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3206 = "linalg.generic"(%282, %3205) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3207 = "tosa.reshape"(%3192) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3208 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3209 = "linalg.matmul"(%3207, %3206, %3208) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3210 = "tosa.reshape"(%3209) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3211 = "tosa.reshape"(%3198) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3212 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3213 = "linalg.generic"(%3211, %3212) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3214 = "tosa.reshape"(%3204) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3215 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3216 = "linalg.generic"(%3214, %3215) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3217 = "tosa.reshape"(%3210) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3218 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3219 = "linalg.generic"(%3217, %3218) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3220 = "tensor.extract_slice"(%578) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3221 = "tensor.extract_slice"(%3220) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3222 = "tensor.extract_slice"(%3221) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3223 = "tensor.extract_slice"(%580) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3224 = "tensor.extract_slice"(%3223) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3225 = "tensor.extract_slice"(%3224) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3226 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3227 = "linalg.generic"(%3222, %3226) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3228 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3229 = "linalg.generic"(%3227, %3228) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3230 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3231 = "linalg.generic"(%3225, %3230) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3232 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3233 = "linalg.generic"(%3231, %3232) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3234 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3235 = "linalg.generic"(%647, %3234) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3229, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3236 = "tosa.reshape"(%3235) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3237 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3238 = "linalg.generic"(%647, %3237) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3233, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3239 = "tosa.reshape"(%3238) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3240 = "tosa.mul"(%3213, %3236) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3241 = "tensor.extract_slice"(%3213) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3242 = "tensor.extract_slice"(%3213) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3243 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3244 = "linalg.generic"(%3242, %3243) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3245 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3246 = "tensor.insert_slice"(%3244, %3245) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3247 = "tensor.insert_slice"(%3241, %3246) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3248 = "tosa.mul"(%3247, %3239) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3249 = "tosa.add"(%3240, %3248) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3250 = "tosa.mul"(%3216, %3236) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3251 = "tensor.extract_slice"(%3216) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3252 = "tensor.extract_slice"(%3216) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3253 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3254 = "linalg.generic"(%3252, %3253) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3255 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3256 = "tensor.insert_slice"(%3254, %3255) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3257 = "tensor.insert_slice"(%3251, %3256) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3258 = "tosa.mul"(%3257, %3239) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3259 = "tosa.add"(%3250, %3258) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3260 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %3261 = "linalg.generic"(%3259, %3260) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3262 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3263 = "tosa.add"(%3249, %3262) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3264 = "tosa.reshape"(%3263) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3265 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %3266 = "tosa.add"(%3261, %3265) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3267 = "tosa.reshape"(%3266) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %3268 = "tosa.matmul"(%3264, %3267) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %3269 = "tosa.reshape"(%3268) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3270 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3271 = "tosa.reciprocal"(%3270) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3272 = "tosa.mul"(%3269, %3271) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3273 = "tosa.add"(%3272, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3274 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3275 = "linalg.generic"(%3273, %3274) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3276 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3277 = "linalg.generic"(%3276) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3278 = "linalg.generic"(%3275, %3276) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3279 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3280 = "linalg.generic"(%3275, %3278, %3279) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3281 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3282 = "linalg.generic"(%3281) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3283 = "linalg.generic"(%3280, %3282) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3284 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3285 = "linalg.generic"(%3280, %3283, %3284) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3286 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %3287 = "linalg.generic"(%3285, %3286) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3288 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3289 = "tosa.add"(%3287, %3288) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3290 = "tosa.reshape"(%3289) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %3291 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3292 = "tosa.add"(%3219, %3291) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3293 = "tosa.reshape"(%3292) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3294 = "tosa.matmul"(%3290, %3293) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3295 = "tosa.reshape"(%3294) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3296 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %3297 = "linalg.generic"(%3295, %3296) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3298 = "tosa.identity"(%3297) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3299 = "tosa.reshape"(%3298) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %3300 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3301 = "linalg.generic"(%284, %3300) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3302 = "tosa.reshape"(%3299) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3303 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3304 = "linalg.matmul"(%3302, %3301, %3303) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3305 = "tosa.reshape"(%3304) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3306 = "tosa.add"(%3177, %3305) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3307 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3308 = "linalg.generic"(%3306, %3307) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3309 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3310 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3311 = "linalg.generic"(%3308, %3309) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3310) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3312 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3313 = "linalg.generic"(%3311, %3312) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3314 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3315 = "tosa.add"(%3313, %3314) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3316 = "tosa.rsqrt"(%3315) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3317 = "tosa.mul"(%3308, %3316) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3318 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3319 = "linalg.generic"(%3317, %3318) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3320 = "tosa.reshape"(%31) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3321 = "tosa.mul"(%3320, %3319) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3322 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3323 = "linalg.generic"(%286, %3322) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3324 = "tosa.reshape"(%3321) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3325 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3326 = "linalg.matmul"(%3324, %3323, %3325) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3327 = "tosa.reshape"(%3326) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3328 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %3329 = "linalg.generic"(%3327, %3328) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3330 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3331 = "linalg.generic"(%288, %3330) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3332 = "tosa.reshape"(%3321) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3333 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3334 = "linalg.matmul"(%3332, %3331, %3333) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3335 = "tosa.reshape"(%3334) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3336 = "tosa.mul"(%3329, %3335) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3337 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %3338 = "linalg.generic"(%290, %3337) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %3339 = "tosa.reshape"(%3336) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %3340 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3341 = "linalg.matmul"(%3339, %3338, %3340) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3342 = "tosa.reshape"(%3341) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3343 = "tosa.add"(%3306, %3342) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3344 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3345 = "linalg.generic"(%3343, %3344) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3346 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3347 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3348 = "linalg.generic"(%3345, %3346) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3347) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3349 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3350 = "linalg.generic"(%3348, %3349) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3351 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3352 = "tosa.add"(%3350, %3351) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3353 = "tosa.rsqrt"(%3352) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3354 = "tosa.mul"(%3345, %3353) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3355 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3356 = "linalg.generic"(%3354, %3355) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3357 = "tosa.reshape"(%32) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3358 = "tosa.mul"(%3357, %3356) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3359 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3360 = "linalg.generic"(%292, %3359) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3361 = "tosa.reshape"(%3358) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3362 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3363 = "linalg.matmul"(%3361, %3360, %3362) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3364 = "tosa.reshape"(%3363) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3365 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3366 = "linalg.generic"(%294, %3365) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3367 = "tosa.reshape"(%3358) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3368 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3369 = "linalg.matmul"(%3367, %3366, %3368) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3370 = "tosa.reshape"(%3369) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3371 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3372 = "linalg.generic"(%296, %3371) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3373 = "tosa.reshape"(%3358) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3374 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3375 = "linalg.matmul"(%3373, %3372, %3374) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3376 = "tosa.reshape"(%3375) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3377 = "tosa.reshape"(%3364) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3378 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3379 = "linalg.generic"(%3377, %3378) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3380 = "tosa.reshape"(%3370) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3381 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3382 = "linalg.generic"(%3380, %3381) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3383 = "tosa.reshape"(%3376) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3384 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3385 = "linalg.generic"(%3383, %3384) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3386 = "tensor.extract_slice"(%582) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3387 = "tensor.extract_slice"(%3386) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3388 = "tensor.extract_slice"(%3387) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3389 = "tensor.extract_slice"(%584) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3390 = "tensor.extract_slice"(%3389) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3391 = "tensor.extract_slice"(%3390) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3392 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3393 = "linalg.generic"(%3388, %3392) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3394 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3395 = "linalg.generic"(%3393, %3394) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3396 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3397 = "linalg.generic"(%3391, %3396) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3398 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3399 = "linalg.generic"(%3397, %3398) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3400 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3401 = "linalg.generic"(%647, %3400) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3395, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3402 = "tosa.reshape"(%3401) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3403 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3404 = "linalg.generic"(%647, %3403) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3399, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3405 = "tosa.reshape"(%3404) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3406 = "tosa.mul"(%3379, %3402) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3407 = "tensor.extract_slice"(%3379) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3408 = "tensor.extract_slice"(%3379) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3409 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3410 = "linalg.generic"(%3408, %3409) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3411 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3412 = "tensor.insert_slice"(%3410, %3411) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3413 = "tensor.insert_slice"(%3407, %3412) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3414 = "tosa.mul"(%3413, %3405) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3415 = "tosa.add"(%3406, %3414) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3416 = "tosa.mul"(%3382, %3402) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3417 = "tensor.extract_slice"(%3382) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3418 = "tensor.extract_slice"(%3382) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3419 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3420 = "linalg.generic"(%3418, %3419) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3421 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3422 = "tensor.insert_slice"(%3420, %3421) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3423 = "tensor.insert_slice"(%3417, %3422) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3424 = "tosa.mul"(%3423, %3405) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3425 = "tosa.add"(%3416, %3424) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3426 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %3427 = "linalg.generic"(%3425, %3426) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3428 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3429 = "tosa.add"(%3415, %3428) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3430 = "tosa.reshape"(%3429) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3431 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %3432 = "tosa.add"(%3427, %3431) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3433 = "tosa.reshape"(%3432) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %3434 = "tosa.matmul"(%3430, %3433) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %3435 = "tosa.reshape"(%3434) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3436 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3437 = "tosa.reciprocal"(%3436) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3438 = "tosa.mul"(%3435, %3437) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3439 = "tosa.add"(%3438, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3440 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3441 = "linalg.generic"(%3439, %3440) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3442 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3443 = "linalg.generic"(%3442) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3444 = "linalg.generic"(%3441, %3442) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3445 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3446 = "linalg.generic"(%3441, %3444, %3445) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3447 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3448 = "linalg.generic"(%3447) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3449 = "linalg.generic"(%3446, %3448) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3450 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3451 = "linalg.generic"(%3446, %3449, %3450) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3452 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %3453 = "linalg.generic"(%3451, %3452) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3454 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3455 = "tosa.add"(%3453, %3454) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3456 = "tosa.reshape"(%3455) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %3457 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3458 = "tosa.add"(%3385, %3457) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3459 = "tosa.reshape"(%3458) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3460 = "tosa.matmul"(%3456, %3459) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3461 = "tosa.reshape"(%3460) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3462 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %3463 = "linalg.generic"(%3461, %3462) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3464 = "tosa.identity"(%3463) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3465 = "tosa.reshape"(%3464) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %3466 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3467 = "linalg.generic"(%298, %3466) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3468 = "tosa.reshape"(%3465) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3469 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3470 = "linalg.matmul"(%3468, %3467, %3469) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3471 = "tosa.reshape"(%3470) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3472 = "tosa.add"(%3343, %3471) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3473 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3474 = "linalg.generic"(%3472, %3473) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3475 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3476 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3477 = "linalg.generic"(%3474, %3475) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3476) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3478 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3479 = "linalg.generic"(%3477, %3478) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3480 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3481 = "tosa.add"(%3479, %3480) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3482 = "tosa.rsqrt"(%3481) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3483 = "tosa.mul"(%3474, %3482) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3484 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3485 = "linalg.generic"(%3483, %3484) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3486 = "tosa.reshape"(%33) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3487 = "tosa.mul"(%3486, %3485) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3488 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3489 = "linalg.generic"(%300, %3488) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3490 = "tosa.reshape"(%3487) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3491 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3492 = "linalg.matmul"(%3490, %3489, %3491) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3493 = "tosa.reshape"(%3492) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3494 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %3495 = "linalg.generic"(%3493, %3494) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3496 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3497 = "linalg.generic"(%302, %3496) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3498 = "tosa.reshape"(%3487) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3499 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3500 = "linalg.matmul"(%3498, %3497, %3499) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3501 = "tosa.reshape"(%3500) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3502 = "tosa.mul"(%3495, %3501) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3503 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %3504 = "linalg.generic"(%304, %3503) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %3505 = "tosa.reshape"(%3502) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %3506 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3507 = "linalg.matmul"(%3505, %3504, %3506) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3508 = "tosa.reshape"(%3507) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3509 = "tosa.add"(%3472, %3508) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3510 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3511 = "linalg.generic"(%3509, %3510) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3512 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3513 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3514 = "linalg.generic"(%3511, %3512) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3513) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3515 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3516 = "linalg.generic"(%3514, %3515) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3517 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3518 = "tosa.add"(%3516, %3517) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3519 = "tosa.rsqrt"(%3518) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3520 = "tosa.mul"(%3511, %3519) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3521 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3522 = "linalg.generic"(%3520, %3521) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3523 = "tosa.reshape"(%34) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3524 = "tosa.mul"(%3523, %3522) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3525 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3526 = "linalg.generic"(%306, %3525) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3527 = "tosa.reshape"(%3524) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3528 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3529 = "linalg.matmul"(%3527, %3526, %3528) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3530 = "tosa.reshape"(%3529) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3531 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3532 = "linalg.generic"(%308, %3531) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3533 = "tosa.reshape"(%3524) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3534 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3535 = "linalg.matmul"(%3533, %3532, %3534) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3536 = "tosa.reshape"(%3535) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3537 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3538 = "linalg.generic"(%310, %3537) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3539 = "tosa.reshape"(%3524) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3540 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3541 = "linalg.matmul"(%3539, %3538, %3540) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3542 = "tosa.reshape"(%3541) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3543 = "tosa.reshape"(%3530) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3544 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3545 = "linalg.generic"(%3543, %3544) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3546 = "tosa.reshape"(%3536) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3547 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3548 = "linalg.generic"(%3546, %3547) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3549 = "tosa.reshape"(%3542) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3550 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3551 = "linalg.generic"(%3549, %3550) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3552 = "tensor.extract_slice"(%586) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3553 = "tensor.extract_slice"(%3552) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3554 = "tensor.extract_slice"(%3553) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3555 = "tensor.extract_slice"(%588) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3556 = "tensor.extract_slice"(%3555) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3557 = "tensor.extract_slice"(%3556) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3558 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3559 = "linalg.generic"(%3554, %3558) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3560 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3561 = "linalg.generic"(%3559, %3560) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3562 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3563 = "linalg.generic"(%3557, %3562) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3564 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3565 = "linalg.generic"(%3563, %3564) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3566 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3567 = "linalg.generic"(%647, %3566) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3561, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3568 = "tosa.reshape"(%3567) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3569 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3570 = "linalg.generic"(%647, %3569) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3565, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3571 = "tosa.reshape"(%3570) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3572 = "tosa.mul"(%3545, %3568) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3573 = "tensor.extract_slice"(%3545) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3574 = "tensor.extract_slice"(%3545) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3575 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3576 = "linalg.generic"(%3574, %3575) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3577 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3578 = "tensor.insert_slice"(%3576, %3577) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3579 = "tensor.insert_slice"(%3573, %3578) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3580 = "tosa.mul"(%3579, %3571) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3581 = "tosa.add"(%3572, %3580) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3582 = "tosa.mul"(%3548, %3568) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3583 = "tensor.extract_slice"(%3548) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3584 = "tensor.extract_slice"(%3548) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3585 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3586 = "linalg.generic"(%3584, %3585) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3587 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3588 = "tensor.insert_slice"(%3586, %3587) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3589 = "tensor.insert_slice"(%3583, %3588) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3590 = "tosa.mul"(%3589, %3571) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3591 = "tosa.add"(%3582, %3590) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3592 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %3593 = "linalg.generic"(%3591, %3592) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3594 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3595 = "tosa.add"(%3581, %3594) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3596 = "tosa.reshape"(%3595) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3597 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %3598 = "tosa.add"(%3593, %3597) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3599 = "tosa.reshape"(%3598) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %3600 = "tosa.matmul"(%3596, %3599) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %3601 = "tosa.reshape"(%3600) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3602 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3603 = "tosa.reciprocal"(%3602) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3604 = "tosa.mul"(%3601, %3603) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3605 = "tosa.add"(%3604, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3606 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3607 = "linalg.generic"(%3605, %3606) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3608 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3609 = "linalg.generic"(%3608) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3610 = "linalg.generic"(%3607, %3608) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3611 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3612 = "linalg.generic"(%3607, %3610, %3611) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3613 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3614 = "linalg.generic"(%3613) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3615 = "linalg.generic"(%3612, %3614) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3616 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3617 = "linalg.generic"(%3612, %3615, %3616) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3618 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %3619 = "linalg.generic"(%3617, %3618) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3620 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3621 = "tosa.add"(%3619, %3620) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3622 = "tosa.reshape"(%3621) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %3623 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3624 = "tosa.add"(%3551, %3623) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3625 = "tosa.reshape"(%3624) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3626 = "tosa.matmul"(%3622, %3625) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3627 = "tosa.reshape"(%3626) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3628 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %3629 = "linalg.generic"(%3627, %3628) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3630 = "tosa.identity"(%3629) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3631 = "tosa.reshape"(%3630) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %3632 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3633 = "linalg.generic"(%312, %3632) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3634 = "tosa.reshape"(%3631) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3635 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3636 = "linalg.matmul"(%3634, %3633, %3635) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3637 = "tosa.reshape"(%3636) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3638 = "tosa.add"(%3509, %3637) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3639 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3640 = "linalg.generic"(%3638, %3639) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3641 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3642 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3643 = "linalg.generic"(%3640, %3641) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3642) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3644 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3645 = "linalg.generic"(%3643, %3644) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3646 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3647 = "tosa.add"(%3645, %3646) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3648 = "tosa.rsqrt"(%3647) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3649 = "tosa.mul"(%3640, %3648) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3650 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3651 = "linalg.generic"(%3649, %3650) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3652 = "tosa.reshape"(%35) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3653 = "tosa.mul"(%3652, %3651) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3654 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3655 = "linalg.generic"(%314, %3654) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3656 = "tosa.reshape"(%3653) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3657 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3658 = "linalg.matmul"(%3656, %3655, %3657) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3659 = "tosa.reshape"(%3658) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3660 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %3661 = "linalg.generic"(%3659, %3660) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3662 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3663 = "linalg.generic"(%316, %3662) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3664 = "tosa.reshape"(%3653) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3665 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3666 = "linalg.matmul"(%3664, %3663, %3665) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3667 = "tosa.reshape"(%3666) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3668 = "tosa.mul"(%3661, %3667) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3669 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %3670 = "linalg.generic"(%318, %3669) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %3671 = "tosa.reshape"(%3668) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %3672 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3673 = "linalg.matmul"(%3671, %3670, %3672) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3674 = "tosa.reshape"(%3673) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3675 = "tosa.add"(%3638, %3674) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3676 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3677 = "linalg.generic"(%3675, %3676) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3678 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3679 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3680 = "linalg.generic"(%3677, %3678) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3679) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3681 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3682 = "linalg.generic"(%3680, %3681) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3683 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3684 = "tosa.add"(%3682, %3683) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3685 = "tosa.rsqrt"(%3684) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3686 = "tosa.mul"(%3677, %3685) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3687 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3688 = "linalg.generic"(%3686, %3687) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3689 = "tosa.reshape"(%36) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3690 = "tosa.mul"(%3689, %3688) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3691 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3692 = "linalg.generic"(%320, %3691) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3693 = "tosa.reshape"(%3690) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3694 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3695 = "linalg.matmul"(%3693, %3692, %3694) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3696 = "tosa.reshape"(%3695) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3697 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3698 = "linalg.generic"(%322, %3697) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3699 = "tosa.reshape"(%3690) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3700 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3701 = "linalg.matmul"(%3699, %3698, %3700) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3702 = "tosa.reshape"(%3701) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3703 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3704 = "linalg.generic"(%324, %3703) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3705 = "tosa.reshape"(%3690) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3706 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3707 = "linalg.matmul"(%3705, %3704, %3706) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3708 = "tosa.reshape"(%3707) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3709 = "tosa.reshape"(%3696) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3710 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3711 = "linalg.generic"(%3709, %3710) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3712 = "tosa.reshape"(%3702) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3713 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3714 = "linalg.generic"(%3712, %3713) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3715 = "tosa.reshape"(%3708) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3716 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3717 = "linalg.generic"(%3715, %3716) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3718 = "tensor.extract_slice"(%590) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3719 = "tensor.extract_slice"(%3718) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3720 = "tensor.extract_slice"(%3719) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3721 = "tensor.extract_slice"(%592) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3722 = "tensor.extract_slice"(%3721) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3723 = "tensor.extract_slice"(%3722) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3724 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3725 = "linalg.generic"(%3720, %3724) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3726 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3727 = "linalg.generic"(%3725, %3726) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3728 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3729 = "linalg.generic"(%3723, %3728) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3730 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3731 = "linalg.generic"(%3729, %3730) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3732 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3733 = "linalg.generic"(%647, %3732) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3727, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3734 = "tosa.reshape"(%3733) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3735 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3736 = "linalg.generic"(%647, %3735) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3731, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3737 = "tosa.reshape"(%3736) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3738 = "tosa.mul"(%3711, %3734) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3739 = "tensor.extract_slice"(%3711) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3740 = "tensor.extract_slice"(%3711) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3741 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3742 = "linalg.generic"(%3740, %3741) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3743 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3744 = "tensor.insert_slice"(%3742, %3743) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3745 = "tensor.insert_slice"(%3739, %3744) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3746 = "tosa.mul"(%3745, %3737) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3747 = "tosa.add"(%3738, %3746) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3748 = "tosa.mul"(%3714, %3734) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3749 = "tensor.extract_slice"(%3714) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3750 = "tensor.extract_slice"(%3714) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3751 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3752 = "linalg.generic"(%3750, %3751) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3753 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3754 = "tensor.insert_slice"(%3752, %3753) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3755 = "tensor.insert_slice"(%3749, %3754) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3756 = "tosa.mul"(%3755, %3737) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3757 = "tosa.add"(%3748, %3756) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3758 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %3759 = "linalg.generic"(%3757, %3758) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3760 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3761 = "tosa.add"(%3747, %3760) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3762 = "tosa.reshape"(%3761) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3763 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %3764 = "tosa.add"(%3759, %3763) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3765 = "tosa.reshape"(%3764) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %3766 = "tosa.matmul"(%3762, %3765) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %3767 = "tosa.reshape"(%3766) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3768 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3769 = "tosa.reciprocal"(%3768) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3770 = "tosa.mul"(%3767, %3769) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3771 = "tosa.add"(%3770, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3772 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3773 = "linalg.generic"(%3771, %3772) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3774 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3775 = "linalg.generic"(%3774) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3776 = "linalg.generic"(%3773, %3774) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3777 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3778 = "linalg.generic"(%3773, %3776, %3777) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3779 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3780 = "linalg.generic"(%3779) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3781 = "linalg.generic"(%3778, %3780) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3782 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3783 = "linalg.generic"(%3778, %3781, %3782) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3784 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %3785 = "linalg.generic"(%3783, %3784) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3786 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3787 = "tosa.add"(%3785, %3786) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3788 = "tosa.reshape"(%3787) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %3789 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3790 = "tosa.add"(%3717, %3789) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3791 = "tosa.reshape"(%3790) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3792 = "tosa.matmul"(%3788, %3791) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3793 = "tosa.reshape"(%3792) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3794 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %3795 = "linalg.generic"(%3793, %3794) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3796 = "tosa.identity"(%3795) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3797 = "tosa.reshape"(%3796) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %3798 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3799 = "linalg.generic"(%326, %3798) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3800 = "tosa.reshape"(%3797) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3801 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3802 = "linalg.matmul"(%3800, %3799, %3801) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3803 = "tosa.reshape"(%3802) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3804 = "tosa.add"(%3675, %3803) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3805 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3806 = "linalg.generic"(%3804, %3805) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3807 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3808 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3809 = "linalg.generic"(%3806, %3807) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3808) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3810 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3811 = "linalg.generic"(%3809, %3810) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3812 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3813 = "tosa.add"(%3811, %3812) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3814 = "tosa.rsqrt"(%3813) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3815 = "tosa.mul"(%3806, %3814) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3816 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3817 = "linalg.generic"(%3815, %3816) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3818 = "tosa.reshape"(%37) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3819 = "tosa.mul"(%3818, %3817) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3820 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3821 = "linalg.generic"(%328, %3820) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3822 = "tosa.reshape"(%3819) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3823 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3824 = "linalg.matmul"(%3822, %3821, %3823) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3825 = "tosa.reshape"(%3824) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3826 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %3827 = "linalg.generic"(%3825, %3826) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3828 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3829 = "linalg.generic"(%330, %3828) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3830 = "tosa.reshape"(%3819) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3831 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3832 = "linalg.matmul"(%3830, %3829, %3831) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3833 = "tosa.reshape"(%3832) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3834 = "tosa.mul"(%3827, %3833) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3835 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %3836 = "linalg.generic"(%332, %3835) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %3837 = "tosa.reshape"(%3834) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %3838 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3839 = "linalg.matmul"(%3837, %3836, %3838) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3840 = "tosa.reshape"(%3839) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3841 = "tosa.add"(%3804, %3840) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3842 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3843 = "linalg.generic"(%3841, %3842) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3844 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3845 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3846 = "linalg.generic"(%3843, %3844) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3845) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3847 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3848 = "linalg.generic"(%3846, %3847) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3849 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3850 = "tosa.add"(%3848, %3849) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3851 = "tosa.rsqrt"(%3850) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3852 = "tosa.mul"(%3843, %3851) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3853 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3854 = "linalg.generic"(%3852, %3853) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3855 = "tosa.reshape"(%38) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3856 = "tosa.mul"(%3855, %3854) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3857 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3858 = "linalg.generic"(%334, %3857) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3859 = "tosa.reshape"(%3856) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3860 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3861 = "linalg.matmul"(%3859, %3858, %3860) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3862 = "tosa.reshape"(%3861) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3863 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3864 = "linalg.generic"(%336, %3863) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3865 = "tosa.reshape"(%3856) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3866 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3867 = "linalg.matmul"(%3865, %3864, %3866) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3868 = "tosa.reshape"(%3867) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3869 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3870 = "linalg.generic"(%338, %3869) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3871 = "tosa.reshape"(%3856) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3872 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3873 = "linalg.matmul"(%3871, %3870, %3872) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3874 = "tosa.reshape"(%3873) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3875 = "tosa.reshape"(%3862) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3876 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3877 = "linalg.generic"(%3875, %3876) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3878 = "tosa.reshape"(%3868) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3879 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3880 = "linalg.generic"(%3878, %3879) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3881 = "tosa.reshape"(%3874) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %3882 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3883 = "linalg.generic"(%3881, %3882) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3884 = "tensor.extract_slice"(%594) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3885 = "tensor.extract_slice"(%3884) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3886 = "tensor.extract_slice"(%3885) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3887 = "tensor.extract_slice"(%596) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3888 = "tensor.extract_slice"(%3887) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %3889 = "tensor.extract_slice"(%3888) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3890 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3891 = "linalg.generic"(%3886, %3890) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3892 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3893 = "linalg.generic"(%3891, %3892) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3894 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3895 = "linalg.generic"(%3889, %3894) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3896 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %3897 = "linalg.generic"(%3895, %3896) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %3898 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3899 = "linalg.generic"(%647, %3898) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3893, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3900 = "tosa.reshape"(%3899) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3901 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %3902 = "linalg.generic"(%647, %3901) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%3897, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %3903 = "tosa.reshape"(%3902) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %3904 = "tosa.mul"(%3877, %3900) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3905 = "tensor.extract_slice"(%3877) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3906 = "tensor.extract_slice"(%3877) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3907 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3908 = "linalg.generic"(%3906, %3907) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3909 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3910 = "tensor.insert_slice"(%3908, %3909) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3911 = "tensor.insert_slice"(%3905, %3910) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3912 = "tosa.mul"(%3911, %3903) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3913 = "tosa.add"(%3904, %3912) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3914 = "tosa.mul"(%3880, %3900) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3915 = "tensor.extract_slice"(%3880) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3916 = "tensor.extract_slice"(%3880) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %3917 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %3918 = "linalg.generic"(%3916, %3917) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %3919 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %3920 = "tensor.insert_slice"(%3918, %3919) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3921 = "tensor.insert_slice"(%3915, %3920) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3922 = "tosa.mul"(%3921, %3903) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3923 = "tosa.add"(%3914, %3922) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3924 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %3925 = "linalg.generic"(%3923, %3924) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3926 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3927 = "tosa.add"(%3913, %3926) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3928 = "tosa.reshape"(%3927) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3929 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %3930 = "tosa.add"(%3925, %3929) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %3931 = "tosa.reshape"(%3930) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %3932 = "tosa.matmul"(%3928, %3931) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %3933 = "tosa.reshape"(%3932) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3934 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3935 = "tosa.reciprocal"(%3934) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3936 = "tosa.mul"(%3933, %3935) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3937 = "tosa.add"(%3936, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3938 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3939 = "linalg.generic"(%3937, %3938) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3940 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3941 = "linalg.generic"(%3940) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3942 = "linalg.generic"(%3939, %3940) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3943 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3944 = "linalg.generic"(%3939, %3942, %3943) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3945 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %3946 = "linalg.generic"(%3945) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3947 = "linalg.generic"(%3944, %3946) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %3948 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %3949 = "linalg.generic"(%3944, %3947, %3948) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %3950 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %3951 = "linalg.generic"(%3949, %3950) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3952 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %3953 = "tosa.add"(%3951, %3952) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %3954 = "tosa.reshape"(%3953) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %3955 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %3956 = "tosa.add"(%3883, %3955) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3957 = "tosa.reshape"(%3956) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3958 = "tosa.matmul"(%3954, %3957) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %3959 = "tosa.reshape"(%3958) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %3960 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %3961 = "linalg.generic"(%3959, %3960) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3962 = "tosa.identity"(%3961) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %3963 = "tosa.reshape"(%3962) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %3964 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %3965 = "linalg.generic"(%340, %3964) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %3966 = "tosa.reshape"(%3963) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3967 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %3968 = "linalg.matmul"(%3966, %3965, %3967) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %3969 = "tosa.reshape"(%3968) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3970 = "tosa.add"(%3841, %3969) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3971 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3972 = "linalg.generic"(%3970, %3971) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3973 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %3974 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %3975 = "linalg.generic"(%3972, %3973) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %3974) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %3976 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3977 = "linalg.generic"(%3975, %3976) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3978 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %3979 = "tosa.add"(%3977, %3978) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3980 = "tosa.rsqrt"(%3979) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %3981 = "tosa.mul"(%3972, %3980) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %3982 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %3983 = "linalg.generic"(%3981, %3982) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3984 = "tosa.reshape"(%39) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %3985 = "tosa.mul"(%3984, %3983) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %3986 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3987 = "linalg.generic"(%342, %3986) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3988 = "tosa.reshape"(%3985) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3989 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3990 = "linalg.matmul"(%3988, %3987, %3989) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3991 = "tosa.reshape"(%3990) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3992 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %3993 = "linalg.generic"(%3991, %3992) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %3994 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %3995 = "linalg.generic"(%344, %3994) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %3996 = "tosa.reshape"(%3985) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %3997 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %3998 = "linalg.matmul"(%3996, %3995, %3997) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %3999 = "tosa.reshape"(%3998) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4000 = "tosa.mul"(%3993, %3999) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4001 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4002 = "linalg.generic"(%346, %4001) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4003 = "tosa.reshape"(%4000) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %4004 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4005 = "linalg.matmul"(%4003, %4002, %4004) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4006 = "tosa.reshape"(%4005) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4007 = "tosa.add"(%3970, %4006) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4008 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4009 = "linalg.generic"(%4007, %4008) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4010 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4011 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4012 = "linalg.generic"(%4009, %4010) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4011) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4013 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4014 = "linalg.generic"(%4012, %4013) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4015 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4016 = "tosa.add"(%4014, %4015) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4017 = "tosa.rsqrt"(%4016) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4018 = "tosa.mul"(%4009, %4017) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4019 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4020 = "linalg.generic"(%4018, %4019) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4021 = "tosa.reshape"(%40) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4022 = "tosa.mul"(%4021, %4020) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4023 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4024 = "linalg.generic"(%348, %4023) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4025 = "tosa.reshape"(%4022) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4026 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4027 = "linalg.matmul"(%4025, %4024, %4026) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4028 = "tosa.reshape"(%4027) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4029 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4030 = "linalg.generic"(%350, %4029) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4031 = "tosa.reshape"(%4022) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4032 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4033 = "linalg.matmul"(%4031, %4030, %4032) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4034 = "tosa.reshape"(%4033) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4035 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4036 = "linalg.generic"(%352, %4035) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4037 = "tosa.reshape"(%4022) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4038 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4039 = "linalg.matmul"(%4037, %4036, %4038) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4040 = "tosa.reshape"(%4039) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4041 = "tosa.reshape"(%4028) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4042 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4043 = "linalg.generic"(%4041, %4042) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4044 = "tosa.reshape"(%4034) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4045 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4046 = "linalg.generic"(%4044, %4045) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4047 = "tosa.reshape"(%4040) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4048 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4049 = "linalg.generic"(%4047, %4048) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4050 = "tensor.extract_slice"(%598) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4051 = "tensor.extract_slice"(%4050) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4052 = "tensor.extract_slice"(%4051) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4053 = "tensor.extract_slice"(%600) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4054 = "tensor.extract_slice"(%4053) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4055 = "tensor.extract_slice"(%4054) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4056 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4057 = "linalg.generic"(%4052, %4056) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4058 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4059 = "linalg.generic"(%4057, %4058) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4060 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4061 = "linalg.generic"(%4055, %4060) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4062 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4063 = "linalg.generic"(%4061, %4062) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4064 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4065 = "linalg.generic"(%647, %4064) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4059, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4066 = "tosa.reshape"(%4065) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4067 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4068 = "linalg.generic"(%647, %4067) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4063, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4069 = "tosa.reshape"(%4068) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4070 = "tosa.mul"(%4043, %4066) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4071 = "tensor.extract_slice"(%4043) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4072 = "tensor.extract_slice"(%4043) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4073 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4074 = "linalg.generic"(%4072, %4073) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4075 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4076 = "tensor.insert_slice"(%4074, %4075) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4077 = "tensor.insert_slice"(%4071, %4076) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4078 = "tosa.mul"(%4077, %4069) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4079 = "tosa.add"(%4070, %4078) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4080 = "tosa.mul"(%4046, %4066) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4081 = "tensor.extract_slice"(%4046) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4082 = "tensor.extract_slice"(%4046) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4083 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4084 = "linalg.generic"(%4082, %4083) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4085 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4086 = "tensor.insert_slice"(%4084, %4085) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4087 = "tensor.insert_slice"(%4081, %4086) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4088 = "tosa.mul"(%4087, %4069) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4089 = "tosa.add"(%4080, %4088) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4090 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %4091 = "linalg.generic"(%4089, %4090) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4092 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4093 = "tosa.add"(%4079, %4092) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4094 = "tosa.reshape"(%4093) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4095 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %4096 = "tosa.add"(%4091, %4095) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4097 = "tosa.reshape"(%4096) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %4098 = "tosa.matmul"(%4094, %4097) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %4099 = "tosa.reshape"(%4098) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4100 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4101 = "tosa.reciprocal"(%4100) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4102 = "tosa.mul"(%4099, %4101) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4103 = "tosa.add"(%4102, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4104 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4105 = "linalg.generic"(%4103, %4104) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4106 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4107 = "linalg.generic"(%4106) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4108 = "linalg.generic"(%4105, %4106) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4109 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4110 = "linalg.generic"(%4105, %4108, %4109) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4111 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4112 = "linalg.generic"(%4111) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4113 = "linalg.generic"(%4110, %4112) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4114 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4115 = "linalg.generic"(%4110, %4113, %4114) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4116 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %4117 = "linalg.generic"(%4115, %4116) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4118 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4119 = "tosa.add"(%4117, %4118) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4120 = "tosa.reshape"(%4119) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %4121 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4122 = "tosa.add"(%4049, %4121) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4123 = "tosa.reshape"(%4122) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4124 = "tosa.matmul"(%4120, %4123) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4125 = "tosa.reshape"(%4124) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4126 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %4127 = "linalg.generic"(%4125, %4126) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4128 = "tosa.identity"(%4127) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4129 = "tosa.reshape"(%4128) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %4130 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4131 = "linalg.generic"(%354, %4130) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4132 = "tosa.reshape"(%4129) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4133 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4134 = "linalg.matmul"(%4132, %4131, %4133) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4135 = "tosa.reshape"(%4134) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4136 = "tosa.add"(%4007, %4135) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4137 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4138 = "linalg.generic"(%4136, %4137) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4139 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4140 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4141 = "linalg.generic"(%4138, %4139) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4140) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4142 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4143 = "linalg.generic"(%4141, %4142) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4144 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4145 = "tosa.add"(%4143, %4144) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4146 = "tosa.rsqrt"(%4145) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4147 = "tosa.mul"(%4138, %4146) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4148 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4149 = "linalg.generic"(%4147, %4148) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4150 = "tosa.reshape"(%41) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4151 = "tosa.mul"(%4150, %4149) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4152 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4153 = "linalg.generic"(%356, %4152) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4154 = "tosa.reshape"(%4151) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4155 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4156 = "linalg.matmul"(%4154, %4153, %4155) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4157 = "tosa.reshape"(%4156) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4158 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %4159 = "linalg.generic"(%4157, %4158) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4160 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4161 = "linalg.generic"(%358, %4160) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4162 = "tosa.reshape"(%4151) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4163 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4164 = "linalg.matmul"(%4162, %4161, %4163) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4165 = "tosa.reshape"(%4164) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4166 = "tosa.mul"(%4159, %4165) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4167 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4168 = "linalg.generic"(%360, %4167) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4169 = "tosa.reshape"(%4166) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %4170 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4171 = "linalg.matmul"(%4169, %4168, %4170) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4172 = "tosa.reshape"(%4171) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4173 = "tosa.add"(%4136, %4172) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4174 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4175 = "linalg.generic"(%4173, %4174) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4176 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4177 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4178 = "linalg.generic"(%4175, %4176) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4177) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4179 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4180 = "linalg.generic"(%4178, %4179) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4181 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4182 = "tosa.add"(%4180, %4181) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4183 = "tosa.rsqrt"(%4182) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4184 = "tosa.mul"(%4175, %4183) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4185 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4186 = "linalg.generic"(%4184, %4185) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4187 = "tosa.reshape"(%42) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4188 = "tosa.mul"(%4187, %4186) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4189 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4190 = "linalg.generic"(%362, %4189) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4191 = "tosa.reshape"(%4188) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4192 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4193 = "linalg.matmul"(%4191, %4190, %4192) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4194 = "tosa.reshape"(%4193) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4195 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4196 = "linalg.generic"(%364, %4195) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4197 = "tosa.reshape"(%4188) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4198 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4199 = "linalg.matmul"(%4197, %4196, %4198) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4200 = "tosa.reshape"(%4199) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4201 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4202 = "linalg.generic"(%366, %4201) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4203 = "tosa.reshape"(%4188) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4204 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4205 = "linalg.matmul"(%4203, %4202, %4204) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4206 = "tosa.reshape"(%4205) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4207 = "tosa.reshape"(%4194) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4208 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4209 = "linalg.generic"(%4207, %4208) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4210 = "tosa.reshape"(%4200) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4211 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4212 = "linalg.generic"(%4210, %4211) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4213 = "tosa.reshape"(%4206) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4214 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4215 = "linalg.generic"(%4213, %4214) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4216 = "tensor.extract_slice"(%602) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4217 = "tensor.extract_slice"(%4216) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4218 = "tensor.extract_slice"(%4217) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4219 = "tensor.extract_slice"(%604) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4220 = "tensor.extract_slice"(%4219) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4221 = "tensor.extract_slice"(%4220) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4222 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4223 = "linalg.generic"(%4218, %4222) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4224 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4225 = "linalg.generic"(%4223, %4224) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4226 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4227 = "linalg.generic"(%4221, %4226) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4228 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4229 = "linalg.generic"(%4227, %4228) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4230 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4231 = "linalg.generic"(%647, %4230) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4225, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4232 = "tosa.reshape"(%4231) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4233 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4234 = "linalg.generic"(%647, %4233) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4229, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4235 = "tosa.reshape"(%4234) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4236 = "tosa.mul"(%4209, %4232) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4237 = "tensor.extract_slice"(%4209) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4238 = "tensor.extract_slice"(%4209) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4239 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4240 = "linalg.generic"(%4238, %4239) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4241 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4242 = "tensor.insert_slice"(%4240, %4241) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4243 = "tensor.insert_slice"(%4237, %4242) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4244 = "tosa.mul"(%4243, %4235) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4245 = "tosa.add"(%4236, %4244) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4246 = "tosa.mul"(%4212, %4232) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4247 = "tensor.extract_slice"(%4212) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4248 = "tensor.extract_slice"(%4212) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4249 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4250 = "linalg.generic"(%4248, %4249) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4251 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4252 = "tensor.insert_slice"(%4250, %4251) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4253 = "tensor.insert_slice"(%4247, %4252) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4254 = "tosa.mul"(%4253, %4235) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4255 = "tosa.add"(%4246, %4254) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4256 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %4257 = "linalg.generic"(%4255, %4256) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4258 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4259 = "tosa.add"(%4245, %4258) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4260 = "tosa.reshape"(%4259) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4261 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %4262 = "tosa.add"(%4257, %4261) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4263 = "tosa.reshape"(%4262) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %4264 = "tosa.matmul"(%4260, %4263) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %4265 = "tosa.reshape"(%4264) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4266 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4267 = "tosa.reciprocal"(%4266) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4268 = "tosa.mul"(%4265, %4267) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4269 = "tosa.add"(%4268, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4270 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4271 = "linalg.generic"(%4269, %4270) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4272 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4273 = "linalg.generic"(%4272) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4274 = "linalg.generic"(%4271, %4272) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4275 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4276 = "linalg.generic"(%4271, %4274, %4275) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4277 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4278 = "linalg.generic"(%4277) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4279 = "linalg.generic"(%4276, %4278) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4280 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4281 = "linalg.generic"(%4276, %4279, %4280) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4282 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %4283 = "linalg.generic"(%4281, %4282) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4284 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4285 = "tosa.add"(%4283, %4284) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4286 = "tosa.reshape"(%4285) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %4287 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4288 = "tosa.add"(%4215, %4287) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4289 = "tosa.reshape"(%4288) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4290 = "tosa.matmul"(%4286, %4289) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4291 = "tosa.reshape"(%4290) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4292 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %4293 = "linalg.generic"(%4291, %4292) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4294 = "tosa.identity"(%4293) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4295 = "tosa.reshape"(%4294) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %4296 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4297 = "linalg.generic"(%368, %4296) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4298 = "tosa.reshape"(%4295) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4299 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4300 = "linalg.matmul"(%4298, %4297, %4299) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4301 = "tosa.reshape"(%4300) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4302 = "tosa.add"(%4173, %4301) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4303 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4304 = "linalg.generic"(%4302, %4303) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4305 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4306 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4307 = "linalg.generic"(%4304, %4305) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4306) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4308 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4309 = "linalg.generic"(%4307, %4308) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4310 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4311 = "tosa.add"(%4309, %4310) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4312 = "tosa.rsqrt"(%4311) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4313 = "tosa.mul"(%4304, %4312) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4314 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4315 = "linalg.generic"(%4313, %4314) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4316 = "tosa.reshape"(%43) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4317 = "tosa.mul"(%4316, %4315) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4318 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4319 = "linalg.generic"(%370, %4318) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4320 = "tosa.reshape"(%4317) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4321 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4322 = "linalg.matmul"(%4320, %4319, %4321) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4323 = "tosa.reshape"(%4322) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4324 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %4325 = "linalg.generic"(%4323, %4324) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4326 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4327 = "linalg.generic"(%372, %4326) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4328 = "tosa.reshape"(%4317) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4329 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4330 = "linalg.matmul"(%4328, %4327, %4329) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4331 = "tosa.reshape"(%4330) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4332 = "tosa.mul"(%4325, %4331) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4333 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4334 = "linalg.generic"(%374, %4333) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4335 = "tosa.reshape"(%4332) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %4336 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4337 = "linalg.matmul"(%4335, %4334, %4336) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4338 = "tosa.reshape"(%4337) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4339 = "tosa.add"(%4302, %4338) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4340 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4341 = "linalg.generic"(%4339, %4340) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4342 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4343 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4344 = "linalg.generic"(%4341, %4342) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4343) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4345 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4346 = "linalg.generic"(%4344, %4345) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4347 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4348 = "tosa.add"(%4346, %4347) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4349 = "tosa.rsqrt"(%4348) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4350 = "tosa.mul"(%4341, %4349) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4351 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4352 = "linalg.generic"(%4350, %4351) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4353 = "tosa.reshape"(%44) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4354 = "tosa.mul"(%4353, %4352) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4355 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4356 = "linalg.generic"(%376, %4355) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4357 = "tosa.reshape"(%4354) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4358 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4359 = "linalg.matmul"(%4357, %4356, %4358) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4360 = "tosa.reshape"(%4359) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4361 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4362 = "linalg.generic"(%378, %4361) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4363 = "tosa.reshape"(%4354) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4364 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4365 = "linalg.matmul"(%4363, %4362, %4364) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4366 = "tosa.reshape"(%4365) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4367 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4368 = "linalg.generic"(%380, %4367) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4369 = "tosa.reshape"(%4354) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4370 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4371 = "linalg.matmul"(%4369, %4368, %4370) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4372 = "tosa.reshape"(%4371) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4373 = "tosa.reshape"(%4360) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4374 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4375 = "linalg.generic"(%4373, %4374) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4376 = "tosa.reshape"(%4366) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4377 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4378 = "linalg.generic"(%4376, %4377) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4379 = "tosa.reshape"(%4372) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4380 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4381 = "linalg.generic"(%4379, %4380) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4382 = "tensor.extract_slice"(%606) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4383 = "tensor.extract_slice"(%4382) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4384 = "tensor.extract_slice"(%4383) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4385 = "tensor.extract_slice"(%608) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4386 = "tensor.extract_slice"(%4385) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4387 = "tensor.extract_slice"(%4386) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4388 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4389 = "linalg.generic"(%4384, %4388) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4390 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4391 = "linalg.generic"(%4389, %4390) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4392 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4393 = "linalg.generic"(%4387, %4392) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4394 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4395 = "linalg.generic"(%4393, %4394) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4396 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4397 = "linalg.generic"(%647, %4396) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4391, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4398 = "tosa.reshape"(%4397) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4399 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4400 = "linalg.generic"(%647, %4399) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4395, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4401 = "tosa.reshape"(%4400) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4402 = "tosa.mul"(%4375, %4398) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4403 = "tensor.extract_slice"(%4375) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4404 = "tensor.extract_slice"(%4375) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4405 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4406 = "linalg.generic"(%4404, %4405) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4407 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4408 = "tensor.insert_slice"(%4406, %4407) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4409 = "tensor.insert_slice"(%4403, %4408) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4410 = "tosa.mul"(%4409, %4401) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4411 = "tosa.add"(%4402, %4410) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4412 = "tosa.mul"(%4378, %4398) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4413 = "tensor.extract_slice"(%4378) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4414 = "tensor.extract_slice"(%4378) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4415 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4416 = "linalg.generic"(%4414, %4415) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4417 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4418 = "tensor.insert_slice"(%4416, %4417) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4419 = "tensor.insert_slice"(%4413, %4418) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4420 = "tosa.mul"(%4419, %4401) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4421 = "tosa.add"(%4412, %4420) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4422 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %4423 = "linalg.generic"(%4421, %4422) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4424 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4425 = "tosa.add"(%4411, %4424) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4426 = "tosa.reshape"(%4425) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4427 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %4428 = "tosa.add"(%4423, %4427) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4429 = "tosa.reshape"(%4428) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %4430 = "tosa.matmul"(%4426, %4429) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %4431 = "tosa.reshape"(%4430) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4432 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4433 = "tosa.reciprocal"(%4432) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4434 = "tosa.mul"(%4431, %4433) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4435 = "tosa.add"(%4434, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4436 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4437 = "linalg.generic"(%4435, %4436) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4438 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4439 = "linalg.generic"(%4438) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4440 = "linalg.generic"(%4437, %4438) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4441 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4442 = "linalg.generic"(%4437, %4440, %4441) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4443 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4444 = "linalg.generic"(%4443) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4445 = "linalg.generic"(%4442, %4444) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4446 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4447 = "linalg.generic"(%4442, %4445, %4446) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4448 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %4449 = "linalg.generic"(%4447, %4448) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4450 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4451 = "tosa.add"(%4449, %4450) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4452 = "tosa.reshape"(%4451) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %4453 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4454 = "tosa.add"(%4381, %4453) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4455 = "tosa.reshape"(%4454) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4456 = "tosa.matmul"(%4452, %4455) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4457 = "tosa.reshape"(%4456) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4458 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %4459 = "linalg.generic"(%4457, %4458) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4460 = "tosa.identity"(%4459) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4461 = "tosa.reshape"(%4460) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %4462 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4463 = "linalg.generic"(%382, %4462) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4464 = "tosa.reshape"(%4461) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4465 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4466 = "linalg.matmul"(%4464, %4463, %4465) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4467 = "tosa.reshape"(%4466) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4468 = "tosa.add"(%4339, %4467) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4469 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4470 = "linalg.generic"(%4468, %4469) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4471 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4472 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4473 = "linalg.generic"(%4470, %4471) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4472) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4474 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4475 = "linalg.generic"(%4473, %4474) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4476 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4477 = "tosa.add"(%4475, %4476) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4478 = "tosa.rsqrt"(%4477) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4479 = "tosa.mul"(%4470, %4478) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4480 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4481 = "linalg.generic"(%4479, %4480) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4482 = "tosa.reshape"(%45) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4483 = "tosa.mul"(%4482, %4481) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4484 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4485 = "linalg.generic"(%384, %4484) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4486 = "tosa.reshape"(%4483) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4487 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4488 = "linalg.matmul"(%4486, %4485, %4487) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4489 = "tosa.reshape"(%4488) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4490 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %4491 = "linalg.generic"(%4489, %4490) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4492 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4493 = "linalg.generic"(%386, %4492) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4494 = "tosa.reshape"(%4483) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4495 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4496 = "linalg.matmul"(%4494, %4493, %4495) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4497 = "tosa.reshape"(%4496) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4498 = "tosa.mul"(%4491, %4497) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4499 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4500 = "linalg.generic"(%388, %4499) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4501 = "tosa.reshape"(%4498) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %4502 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4503 = "linalg.matmul"(%4501, %4500, %4502) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4504 = "tosa.reshape"(%4503) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4505 = "tosa.add"(%4468, %4504) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4506 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4507 = "linalg.generic"(%4505, %4506) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4508 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4509 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4510 = "linalg.generic"(%4507, %4508) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4509) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4511 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4512 = "linalg.generic"(%4510, %4511) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4513 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4514 = "tosa.add"(%4512, %4513) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4515 = "tosa.rsqrt"(%4514) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4516 = "tosa.mul"(%4507, %4515) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4517 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4518 = "linalg.generic"(%4516, %4517) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4519 = "tosa.reshape"(%46) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4520 = "tosa.mul"(%4519, %4518) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4521 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4522 = "linalg.generic"(%390, %4521) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4523 = "tosa.reshape"(%4520) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4524 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4525 = "linalg.matmul"(%4523, %4522, %4524) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4526 = "tosa.reshape"(%4525) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4527 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4528 = "linalg.generic"(%392, %4527) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4529 = "tosa.reshape"(%4520) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4530 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4531 = "linalg.matmul"(%4529, %4528, %4530) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4532 = "tosa.reshape"(%4531) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4533 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4534 = "linalg.generic"(%394, %4533) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4535 = "tosa.reshape"(%4520) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4536 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4537 = "linalg.matmul"(%4535, %4534, %4536) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4538 = "tosa.reshape"(%4537) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4539 = "tosa.reshape"(%4526) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4540 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4541 = "linalg.generic"(%4539, %4540) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4542 = "tosa.reshape"(%4532) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4543 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4544 = "linalg.generic"(%4542, %4543) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4545 = "tosa.reshape"(%4538) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4546 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4547 = "linalg.generic"(%4545, %4546) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4548 = "tensor.extract_slice"(%610) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4549 = "tensor.extract_slice"(%4548) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4550 = "tensor.extract_slice"(%4549) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4551 = "tensor.extract_slice"(%612) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4552 = "tensor.extract_slice"(%4551) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4553 = "tensor.extract_slice"(%4552) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4554 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4555 = "linalg.generic"(%4550, %4554) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4556 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4557 = "linalg.generic"(%4555, %4556) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4558 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4559 = "linalg.generic"(%4553, %4558) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4560 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4561 = "linalg.generic"(%4559, %4560) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4562 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4563 = "linalg.generic"(%647, %4562) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4557, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4564 = "tosa.reshape"(%4563) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4565 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4566 = "linalg.generic"(%647, %4565) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4561, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4567 = "tosa.reshape"(%4566) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4568 = "tosa.mul"(%4541, %4564) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4569 = "tensor.extract_slice"(%4541) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4570 = "tensor.extract_slice"(%4541) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4571 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4572 = "linalg.generic"(%4570, %4571) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4573 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4574 = "tensor.insert_slice"(%4572, %4573) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4575 = "tensor.insert_slice"(%4569, %4574) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4576 = "tosa.mul"(%4575, %4567) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4577 = "tosa.add"(%4568, %4576) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4578 = "tosa.mul"(%4544, %4564) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4579 = "tensor.extract_slice"(%4544) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4580 = "tensor.extract_slice"(%4544) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4581 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4582 = "linalg.generic"(%4580, %4581) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4583 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4584 = "tensor.insert_slice"(%4582, %4583) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4585 = "tensor.insert_slice"(%4579, %4584) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4586 = "tosa.mul"(%4585, %4567) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4587 = "tosa.add"(%4578, %4586) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4588 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %4589 = "linalg.generic"(%4587, %4588) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4590 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4591 = "tosa.add"(%4577, %4590) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4592 = "tosa.reshape"(%4591) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4593 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %4594 = "tosa.add"(%4589, %4593) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4595 = "tosa.reshape"(%4594) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %4596 = "tosa.matmul"(%4592, %4595) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %4597 = "tosa.reshape"(%4596) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4598 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4599 = "tosa.reciprocal"(%4598) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4600 = "tosa.mul"(%4597, %4599) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4601 = "tosa.add"(%4600, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4602 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4603 = "linalg.generic"(%4601, %4602) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4604 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4605 = "linalg.generic"(%4604) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4606 = "linalg.generic"(%4603, %4604) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4607 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4608 = "linalg.generic"(%4603, %4606, %4607) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4609 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4610 = "linalg.generic"(%4609) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4611 = "linalg.generic"(%4608, %4610) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4612 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4613 = "linalg.generic"(%4608, %4611, %4612) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4614 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %4615 = "linalg.generic"(%4613, %4614) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4616 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4617 = "tosa.add"(%4615, %4616) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4618 = "tosa.reshape"(%4617) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %4619 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4620 = "tosa.add"(%4547, %4619) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4621 = "tosa.reshape"(%4620) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4622 = "tosa.matmul"(%4618, %4621) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4623 = "tosa.reshape"(%4622) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4624 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %4625 = "linalg.generic"(%4623, %4624) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4626 = "tosa.identity"(%4625) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4627 = "tosa.reshape"(%4626) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %4628 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4629 = "linalg.generic"(%396, %4628) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4630 = "tosa.reshape"(%4627) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4631 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4632 = "linalg.matmul"(%4630, %4629, %4631) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4633 = "tosa.reshape"(%4632) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4634 = "tosa.add"(%4505, %4633) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4635 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4636 = "linalg.generic"(%4634, %4635) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4637 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4638 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4639 = "linalg.generic"(%4636, %4637) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4638) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4640 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4641 = "linalg.generic"(%4639, %4640) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4642 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4643 = "tosa.add"(%4641, %4642) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4644 = "tosa.rsqrt"(%4643) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4645 = "tosa.mul"(%4636, %4644) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4646 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4647 = "linalg.generic"(%4645, %4646) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4648 = "tosa.reshape"(%47) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4649 = "tosa.mul"(%4648, %4647) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4650 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4651 = "linalg.generic"(%398, %4650) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4652 = "tosa.reshape"(%4649) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4653 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4654 = "linalg.matmul"(%4652, %4651, %4653) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4655 = "tosa.reshape"(%4654) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4656 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %4657 = "linalg.generic"(%4655, %4656) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4658 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4659 = "linalg.generic"(%400, %4658) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4660 = "tosa.reshape"(%4649) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4661 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4662 = "linalg.matmul"(%4660, %4659, %4661) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4663 = "tosa.reshape"(%4662) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4664 = "tosa.mul"(%4657, %4663) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4665 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4666 = "linalg.generic"(%402, %4665) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4667 = "tosa.reshape"(%4664) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %4668 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4669 = "linalg.matmul"(%4667, %4666, %4668) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4670 = "tosa.reshape"(%4669) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4671 = "tosa.add"(%4634, %4670) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4672 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4673 = "linalg.generic"(%4671, %4672) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4674 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4675 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4676 = "linalg.generic"(%4673, %4674) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4675) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4677 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4678 = "linalg.generic"(%4676, %4677) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4679 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4680 = "tosa.add"(%4678, %4679) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4681 = "tosa.rsqrt"(%4680) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4682 = "tosa.mul"(%4673, %4681) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4683 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4684 = "linalg.generic"(%4682, %4683) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4685 = "tosa.reshape"(%48) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4686 = "tosa.mul"(%4685, %4684) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4687 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4688 = "linalg.generic"(%404, %4687) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4689 = "tosa.reshape"(%4686) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4690 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4691 = "linalg.matmul"(%4689, %4688, %4690) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4692 = "tosa.reshape"(%4691) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4693 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4694 = "linalg.generic"(%406, %4693) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4695 = "tosa.reshape"(%4686) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4696 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4697 = "linalg.matmul"(%4695, %4694, %4696) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4698 = "tosa.reshape"(%4697) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4699 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4700 = "linalg.generic"(%408, %4699) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4701 = "tosa.reshape"(%4686) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4702 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4703 = "linalg.matmul"(%4701, %4700, %4702) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4704 = "tosa.reshape"(%4703) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4705 = "tosa.reshape"(%4692) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4706 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4707 = "linalg.generic"(%4705, %4706) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4708 = "tosa.reshape"(%4698) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4709 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4710 = "linalg.generic"(%4708, %4709) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4711 = "tosa.reshape"(%4704) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4712 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4713 = "linalg.generic"(%4711, %4712) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4714 = "tensor.extract_slice"(%614) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4715 = "tensor.extract_slice"(%4714) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4716 = "tensor.extract_slice"(%4715) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4717 = "tensor.extract_slice"(%616) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4718 = "tensor.extract_slice"(%4717) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4719 = "tensor.extract_slice"(%4718) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4720 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4721 = "linalg.generic"(%4716, %4720) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4722 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4723 = "linalg.generic"(%4721, %4722) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4724 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4725 = "linalg.generic"(%4719, %4724) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4726 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4727 = "linalg.generic"(%4725, %4726) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4728 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4729 = "linalg.generic"(%647, %4728) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4723, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4730 = "tosa.reshape"(%4729) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4731 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4732 = "linalg.generic"(%647, %4731) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4727, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4733 = "tosa.reshape"(%4732) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4734 = "tosa.mul"(%4707, %4730) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4735 = "tensor.extract_slice"(%4707) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4736 = "tensor.extract_slice"(%4707) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4737 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4738 = "linalg.generic"(%4736, %4737) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4739 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4740 = "tensor.insert_slice"(%4738, %4739) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4741 = "tensor.insert_slice"(%4735, %4740) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4742 = "tosa.mul"(%4741, %4733) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4743 = "tosa.add"(%4734, %4742) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4744 = "tosa.mul"(%4710, %4730) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4745 = "tensor.extract_slice"(%4710) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4746 = "tensor.extract_slice"(%4710) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4747 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4748 = "linalg.generic"(%4746, %4747) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4749 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4750 = "tensor.insert_slice"(%4748, %4749) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4751 = "tensor.insert_slice"(%4745, %4750) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4752 = "tosa.mul"(%4751, %4733) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4753 = "tosa.add"(%4744, %4752) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4754 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %4755 = "linalg.generic"(%4753, %4754) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4756 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4757 = "tosa.add"(%4743, %4756) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4758 = "tosa.reshape"(%4757) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4759 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %4760 = "tosa.add"(%4755, %4759) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4761 = "tosa.reshape"(%4760) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %4762 = "tosa.matmul"(%4758, %4761) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %4763 = "tosa.reshape"(%4762) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4764 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4765 = "tosa.reciprocal"(%4764) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4766 = "tosa.mul"(%4763, %4765) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4767 = "tosa.add"(%4766, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4768 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4769 = "linalg.generic"(%4767, %4768) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4770 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4771 = "linalg.generic"(%4770) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4772 = "linalg.generic"(%4769, %4770) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4773 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4774 = "linalg.generic"(%4769, %4772, %4773) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4775 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4776 = "linalg.generic"(%4775) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4777 = "linalg.generic"(%4774, %4776) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4778 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4779 = "linalg.generic"(%4774, %4777, %4778) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4780 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %4781 = "linalg.generic"(%4779, %4780) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4782 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4783 = "tosa.add"(%4781, %4782) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4784 = "tosa.reshape"(%4783) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %4785 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4786 = "tosa.add"(%4713, %4785) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4787 = "tosa.reshape"(%4786) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4788 = "tosa.matmul"(%4784, %4787) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4789 = "tosa.reshape"(%4788) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4790 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %4791 = "linalg.generic"(%4789, %4790) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4792 = "tosa.identity"(%4791) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4793 = "tosa.reshape"(%4792) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %4794 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4795 = "linalg.generic"(%410, %4794) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4796 = "tosa.reshape"(%4793) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4797 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4798 = "linalg.matmul"(%4796, %4795, %4797) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4799 = "tosa.reshape"(%4798) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4800 = "tosa.add"(%4671, %4799) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4801 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4802 = "linalg.generic"(%4800, %4801) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4803 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4804 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4805 = "linalg.generic"(%4802, %4803) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4804) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4806 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4807 = "linalg.generic"(%4805, %4806) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4808 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4809 = "tosa.add"(%4807, %4808) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4810 = "tosa.rsqrt"(%4809) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4811 = "tosa.mul"(%4802, %4810) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4812 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4813 = "linalg.generic"(%4811, %4812) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4814 = "tosa.reshape"(%49) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4815 = "tosa.mul"(%4814, %4813) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4816 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4817 = "linalg.generic"(%412, %4816) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4818 = "tosa.reshape"(%4815) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4819 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4820 = "linalg.matmul"(%4818, %4817, %4819) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4821 = "tosa.reshape"(%4820) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4822 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %4823 = "linalg.generic"(%4821, %4822) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4824 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4825 = "linalg.generic"(%414, %4824) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4826 = "tosa.reshape"(%4815) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4827 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4828 = "linalg.matmul"(%4826, %4825, %4827) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4829 = "tosa.reshape"(%4828) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4830 = "tosa.mul"(%4823, %4829) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4831 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4832 = "linalg.generic"(%416, %4831) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4833 = "tosa.reshape"(%4830) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %4834 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4835 = "linalg.matmul"(%4833, %4832, %4834) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4836 = "tosa.reshape"(%4835) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4837 = "tosa.add"(%4800, %4836) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4838 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4839 = "linalg.generic"(%4837, %4838) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4840 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4841 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4842 = "linalg.generic"(%4839, %4840) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4841) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4843 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4844 = "linalg.generic"(%4842, %4843) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4845 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4846 = "tosa.add"(%4844, %4845) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4847 = "tosa.rsqrt"(%4846) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4848 = "tosa.mul"(%4839, %4847) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4849 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4850 = "linalg.generic"(%4848, %4849) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4851 = "tosa.reshape"(%50) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4852 = "tosa.mul"(%4851, %4850) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4853 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4854 = "linalg.generic"(%418, %4853) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4855 = "tosa.reshape"(%4852) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4856 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4857 = "linalg.matmul"(%4855, %4854, %4856) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4858 = "tosa.reshape"(%4857) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4859 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4860 = "linalg.generic"(%420, %4859) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4861 = "tosa.reshape"(%4852) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4862 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4863 = "linalg.matmul"(%4861, %4860, %4862) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4864 = "tosa.reshape"(%4863) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4865 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4866 = "linalg.generic"(%422, %4865) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4867 = "tosa.reshape"(%4852) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4868 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4869 = "linalg.matmul"(%4867, %4866, %4868) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4870 = "tosa.reshape"(%4869) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4871 = "tosa.reshape"(%4858) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4872 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4873 = "linalg.generic"(%4871, %4872) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4874 = "tosa.reshape"(%4864) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4875 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4876 = "linalg.generic"(%4874, %4875) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4877 = "tosa.reshape"(%4870) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %4878 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4879 = "linalg.generic"(%4877, %4878) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4880 = "tensor.extract_slice"(%618) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4881 = "tensor.extract_slice"(%4880) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4882 = "tensor.extract_slice"(%4881) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4883 = "tensor.extract_slice"(%620) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4884 = "tensor.extract_slice"(%4883) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %4885 = "tensor.extract_slice"(%4884) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4886 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4887 = "linalg.generic"(%4882, %4886) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4888 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4889 = "linalg.generic"(%4887, %4888) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4890 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4891 = "linalg.generic"(%4885, %4890) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4892 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %4893 = "linalg.generic"(%4891, %4892) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %4894 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4895 = "linalg.generic"(%647, %4894) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4889, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4896 = "tosa.reshape"(%4895) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4897 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %4898 = "linalg.generic"(%647, %4897) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%4893, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %4899 = "tosa.reshape"(%4898) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %4900 = "tosa.mul"(%4873, %4896) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4901 = "tensor.extract_slice"(%4873) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4902 = "tensor.extract_slice"(%4873) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4903 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4904 = "linalg.generic"(%4902, %4903) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4905 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4906 = "tensor.insert_slice"(%4904, %4905) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4907 = "tensor.insert_slice"(%4901, %4906) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4908 = "tosa.mul"(%4907, %4899) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4909 = "tosa.add"(%4900, %4908) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4910 = "tosa.mul"(%4876, %4896) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4911 = "tensor.extract_slice"(%4876) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4912 = "tensor.extract_slice"(%4876) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %4913 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %4914 = "linalg.generic"(%4912, %4913) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %4915 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %4916 = "tensor.insert_slice"(%4914, %4915) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4917 = "tensor.insert_slice"(%4911, %4916) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4918 = "tosa.mul"(%4917, %4899) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4919 = "tosa.add"(%4910, %4918) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4920 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %4921 = "linalg.generic"(%4919, %4920) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4922 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4923 = "tosa.add"(%4909, %4922) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4924 = "tosa.reshape"(%4923) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4925 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %4926 = "tosa.add"(%4921, %4925) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %4927 = "tosa.reshape"(%4926) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %4928 = "tosa.matmul"(%4924, %4927) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %4929 = "tosa.reshape"(%4928) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4930 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4931 = "tosa.reciprocal"(%4930) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4932 = "tosa.mul"(%4929, %4931) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4933 = "tosa.add"(%4932, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4934 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4935 = "linalg.generic"(%4933, %4934) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4936 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4937 = "linalg.generic"(%4936) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4938 = "linalg.generic"(%4935, %4936) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4939 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4940 = "linalg.generic"(%4935, %4938, %4939) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4941 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %4942 = "linalg.generic"(%4941) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4943 = "linalg.generic"(%4940, %4942) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %4944 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %4945 = "linalg.generic"(%4940, %4943, %4944) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %4946 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %4947 = "linalg.generic"(%4945, %4946) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4948 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %4949 = "tosa.add"(%4947, %4948) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %4950 = "tosa.reshape"(%4949) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %4951 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %4952 = "tosa.add"(%4879, %4951) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4953 = "tosa.reshape"(%4952) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4954 = "tosa.matmul"(%4950, %4953) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %4955 = "tosa.reshape"(%4954) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %4956 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %4957 = "linalg.generic"(%4955, %4956) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4958 = "tosa.identity"(%4957) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %4959 = "tosa.reshape"(%4958) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %4960 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %4961 = "linalg.generic"(%424, %4960) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %4962 = "tosa.reshape"(%4959) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4963 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %4964 = "linalg.matmul"(%4962, %4961, %4963) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %4965 = "tosa.reshape"(%4964) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4966 = "tosa.add"(%4837, %4965) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4967 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4968 = "linalg.generic"(%4966, %4967) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4969 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %4970 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %4971 = "linalg.generic"(%4968, %4969) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %4970) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %4972 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4973 = "linalg.generic"(%4971, %4972) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4974 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %4975 = "tosa.add"(%4973, %4974) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4976 = "tosa.rsqrt"(%4975) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %4977 = "tosa.mul"(%4968, %4976) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %4978 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %4979 = "linalg.generic"(%4977, %4978) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4980 = "tosa.reshape"(%51) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %4981 = "tosa.mul"(%4980, %4979) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %4982 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4983 = "linalg.generic"(%426, %4982) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4984 = "tosa.reshape"(%4981) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4985 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4986 = "linalg.matmul"(%4984, %4983, %4985) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4987 = "tosa.reshape"(%4986) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4988 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %4989 = "linalg.generic"(%4987, %4988) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4990 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %4991 = "linalg.generic"(%428, %4990) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %4992 = "tosa.reshape"(%4981) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %4993 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %4994 = "linalg.matmul"(%4992, %4991, %4993) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %4995 = "tosa.reshape"(%4994) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4996 = "tosa.mul"(%4989, %4995) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %4997 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %4998 = "linalg.generic"(%430, %4997) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %4999 = "tosa.reshape"(%4996) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5000 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5001 = "linalg.matmul"(%4999, %4998, %5000) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5002 = "tosa.reshape"(%5001) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5003 = "tosa.add"(%4966, %5002) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5004 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5005 = "linalg.generic"(%5003, %5004) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5006 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5007 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5008 = "linalg.generic"(%5005, %5006) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5007) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5009 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5010 = "linalg.generic"(%5008, %5009) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5011 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5012 = "tosa.add"(%5010, %5011) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5013 = "tosa.rsqrt"(%5012) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5014 = "tosa.mul"(%5005, %5013) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5015 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5016 = "linalg.generic"(%5014, %5015) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5017 = "tosa.reshape"(%52) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5018 = "tosa.mul"(%5017, %5016) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5019 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5020 = "linalg.generic"(%432, %5019) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5021 = "tosa.reshape"(%5018) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5022 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5023 = "linalg.matmul"(%5021, %5020, %5022) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5024 = "tosa.reshape"(%5023) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5025 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5026 = "linalg.generic"(%434, %5025) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5027 = "tosa.reshape"(%5018) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5028 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5029 = "linalg.matmul"(%5027, %5026, %5028) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5030 = "tosa.reshape"(%5029) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5031 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5032 = "linalg.generic"(%436, %5031) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5033 = "tosa.reshape"(%5018) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5034 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5035 = "linalg.matmul"(%5033, %5032, %5034) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5036 = "tosa.reshape"(%5035) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5037 = "tosa.reshape"(%5024) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5038 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5039 = "linalg.generic"(%5037, %5038) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5040 = "tosa.reshape"(%5030) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5041 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5042 = "linalg.generic"(%5040, %5041) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5043 = "tosa.reshape"(%5036) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5044 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5045 = "linalg.generic"(%5043, %5044) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5046 = "tensor.extract_slice"(%622) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5047 = "tensor.extract_slice"(%5046) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5048 = "tensor.extract_slice"(%5047) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5049 = "tensor.extract_slice"(%624) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5050 = "tensor.extract_slice"(%5049) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5051 = "tensor.extract_slice"(%5050) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5052 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5053 = "linalg.generic"(%5048, %5052) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5054 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5055 = "linalg.generic"(%5053, %5054) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5056 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5057 = "linalg.generic"(%5051, %5056) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5058 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5059 = "linalg.generic"(%5057, %5058) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5060 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5061 = "linalg.generic"(%647, %5060) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5055, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5062 = "tosa.reshape"(%5061) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5063 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5064 = "linalg.generic"(%647, %5063) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5059, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5065 = "tosa.reshape"(%5064) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5066 = "tosa.mul"(%5039, %5062) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5067 = "tensor.extract_slice"(%5039) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5068 = "tensor.extract_slice"(%5039) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5069 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5070 = "linalg.generic"(%5068, %5069) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5071 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5072 = "tensor.insert_slice"(%5070, %5071) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5073 = "tensor.insert_slice"(%5067, %5072) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5074 = "tosa.mul"(%5073, %5065) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5075 = "tosa.add"(%5066, %5074) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5076 = "tosa.mul"(%5042, %5062) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5077 = "tensor.extract_slice"(%5042) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5078 = "tensor.extract_slice"(%5042) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5079 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5080 = "linalg.generic"(%5078, %5079) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5081 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5082 = "tensor.insert_slice"(%5080, %5081) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5083 = "tensor.insert_slice"(%5077, %5082) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5084 = "tosa.mul"(%5083, %5065) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5085 = "tosa.add"(%5076, %5084) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5086 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %5087 = "linalg.generic"(%5085, %5086) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5088 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5089 = "tosa.add"(%5075, %5088) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5090 = "tosa.reshape"(%5089) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5091 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %5092 = "tosa.add"(%5087, %5091) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5093 = "tosa.reshape"(%5092) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %5094 = "tosa.matmul"(%5090, %5093) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %5095 = "tosa.reshape"(%5094) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5096 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5097 = "tosa.reciprocal"(%5096) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5098 = "tosa.mul"(%5095, %5097) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5099 = "tosa.add"(%5098, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5100 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5101 = "linalg.generic"(%5099, %5100) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5102 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5103 = "linalg.generic"(%5102) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5104 = "linalg.generic"(%5101, %5102) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5105 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5106 = "linalg.generic"(%5101, %5104, %5105) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5107 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5108 = "linalg.generic"(%5107) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5109 = "linalg.generic"(%5106, %5108) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5110 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5111 = "linalg.generic"(%5106, %5109, %5110) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5112 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %5113 = "linalg.generic"(%5111, %5112) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5114 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5115 = "tosa.add"(%5113, %5114) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5116 = "tosa.reshape"(%5115) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %5117 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5118 = "tosa.add"(%5045, %5117) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5119 = "tosa.reshape"(%5118) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5120 = "tosa.matmul"(%5116, %5119) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5121 = "tosa.reshape"(%5120) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5122 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %5123 = "linalg.generic"(%5121, %5122) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5124 = "tosa.identity"(%5123) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5125 = "tosa.reshape"(%5124) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %5126 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5127 = "linalg.generic"(%438, %5126) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5128 = "tosa.reshape"(%5125) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5129 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5130 = "linalg.matmul"(%5128, %5127, %5129) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5131 = "tosa.reshape"(%5130) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5132 = "tosa.add"(%5003, %5131) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5133 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5134 = "linalg.generic"(%5132, %5133) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5135 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5136 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5137 = "linalg.generic"(%5134, %5135) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5136) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5138 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5139 = "linalg.generic"(%5137, %5138) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5140 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5141 = "tosa.add"(%5139, %5140) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5142 = "tosa.rsqrt"(%5141) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5143 = "tosa.mul"(%5134, %5142) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5144 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5145 = "linalg.generic"(%5143, %5144) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5146 = "tosa.reshape"(%53) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5147 = "tosa.mul"(%5146, %5145) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5148 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5149 = "linalg.generic"(%440, %5148) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5150 = "tosa.reshape"(%5147) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5151 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5152 = "linalg.matmul"(%5150, %5149, %5151) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5153 = "tosa.reshape"(%5152) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5154 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %5155 = "linalg.generic"(%5153, %5154) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5156 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5157 = "linalg.generic"(%442, %5156) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5158 = "tosa.reshape"(%5147) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5159 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5160 = "linalg.matmul"(%5158, %5157, %5159) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5161 = "tosa.reshape"(%5160) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5162 = "tosa.mul"(%5155, %5161) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5163 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %5164 = "linalg.generic"(%444, %5163) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %5165 = "tosa.reshape"(%5162) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5166 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5167 = "linalg.matmul"(%5165, %5164, %5166) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5168 = "tosa.reshape"(%5167) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5169 = "tosa.add"(%5132, %5168) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5170 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5171 = "linalg.generic"(%5169, %5170) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5172 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5173 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5174 = "linalg.generic"(%5171, %5172) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5173) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5175 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5176 = "linalg.generic"(%5174, %5175) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5177 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5178 = "tosa.add"(%5176, %5177) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5179 = "tosa.rsqrt"(%5178) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5180 = "tosa.mul"(%5171, %5179) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5181 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5182 = "linalg.generic"(%5180, %5181) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5183 = "tosa.reshape"(%54) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5184 = "tosa.mul"(%5183, %5182) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5185 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5186 = "linalg.generic"(%446, %5185) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5187 = "tosa.reshape"(%5184) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5188 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5189 = "linalg.matmul"(%5187, %5186, %5188) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5190 = "tosa.reshape"(%5189) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5191 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5192 = "linalg.generic"(%448, %5191) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5193 = "tosa.reshape"(%5184) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5194 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5195 = "linalg.matmul"(%5193, %5192, %5194) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5196 = "tosa.reshape"(%5195) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5197 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5198 = "linalg.generic"(%450, %5197) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5199 = "tosa.reshape"(%5184) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5200 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5201 = "linalg.matmul"(%5199, %5198, %5200) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5202 = "tosa.reshape"(%5201) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5203 = "tosa.reshape"(%5190) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5204 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5205 = "linalg.generic"(%5203, %5204) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5206 = "tosa.reshape"(%5196) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5207 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5208 = "linalg.generic"(%5206, %5207) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5209 = "tosa.reshape"(%5202) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5210 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5211 = "linalg.generic"(%5209, %5210) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5212 = "tensor.extract_slice"(%626) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5213 = "tensor.extract_slice"(%5212) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5214 = "tensor.extract_slice"(%5213) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5215 = "tensor.extract_slice"(%628) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5216 = "tensor.extract_slice"(%5215) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5217 = "tensor.extract_slice"(%5216) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5218 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5219 = "linalg.generic"(%5214, %5218) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5220 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5221 = "linalg.generic"(%5219, %5220) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5222 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5223 = "linalg.generic"(%5217, %5222) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5224 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5225 = "linalg.generic"(%5223, %5224) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5226 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5227 = "linalg.generic"(%647, %5226) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5221, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5228 = "tosa.reshape"(%5227) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5229 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5230 = "linalg.generic"(%647, %5229) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5225, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5231 = "tosa.reshape"(%5230) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5232 = "tosa.mul"(%5205, %5228) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5233 = "tensor.extract_slice"(%5205) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5234 = "tensor.extract_slice"(%5205) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5235 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5236 = "linalg.generic"(%5234, %5235) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5237 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5238 = "tensor.insert_slice"(%5236, %5237) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5239 = "tensor.insert_slice"(%5233, %5238) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5240 = "tosa.mul"(%5239, %5231) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5241 = "tosa.add"(%5232, %5240) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5242 = "tosa.mul"(%5208, %5228) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5243 = "tensor.extract_slice"(%5208) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5244 = "tensor.extract_slice"(%5208) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5245 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5246 = "linalg.generic"(%5244, %5245) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5247 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5248 = "tensor.insert_slice"(%5246, %5247) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5249 = "tensor.insert_slice"(%5243, %5248) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5250 = "tosa.mul"(%5249, %5231) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5251 = "tosa.add"(%5242, %5250) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5252 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %5253 = "linalg.generic"(%5251, %5252) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5254 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5255 = "tosa.add"(%5241, %5254) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5256 = "tosa.reshape"(%5255) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5257 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %5258 = "tosa.add"(%5253, %5257) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5259 = "tosa.reshape"(%5258) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %5260 = "tosa.matmul"(%5256, %5259) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %5261 = "tosa.reshape"(%5260) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5262 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5263 = "tosa.reciprocal"(%5262) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5264 = "tosa.mul"(%5261, %5263) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5265 = "tosa.add"(%5264, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5266 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5267 = "linalg.generic"(%5265, %5266) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5268 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5269 = "linalg.generic"(%5268) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5270 = "linalg.generic"(%5267, %5268) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5271 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5272 = "linalg.generic"(%5267, %5270, %5271) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5273 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5274 = "linalg.generic"(%5273) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5275 = "linalg.generic"(%5272, %5274) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5276 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5277 = "linalg.generic"(%5272, %5275, %5276) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5278 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %5279 = "linalg.generic"(%5277, %5278) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5280 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5281 = "tosa.add"(%5279, %5280) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5282 = "tosa.reshape"(%5281) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %5283 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5284 = "tosa.add"(%5211, %5283) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5285 = "tosa.reshape"(%5284) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5286 = "tosa.matmul"(%5282, %5285) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5287 = "tosa.reshape"(%5286) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5288 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %5289 = "linalg.generic"(%5287, %5288) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5290 = "tosa.identity"(%5289) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5291 = "tosa.reshape"(%5290) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %5292 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5293 = "linalg.generic"(%452, %5292) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5294 = "tosa.reshape"(%5291) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5295 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5296 = "linalg.matmul"(%5294, %5293, %5295) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5297 = "tosa.reshape"(%5296) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5298 = "tosa.add"(%5169, %5297) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5299 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5300 = "linalg.generic"(%5298, %5299) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5301 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5302 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5303 = "linalg.generic"(%5300, %5301) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5302) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5304 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5305 = "linalg.generic"(%5303, %5304) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5306 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5307 = "tosa.add"(%5305, %5306) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5308 = "tosa.rsqrt"(%5307) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5309 = "tosa.mul"(%5300, %5308) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5310 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5311 = "linalg.generic"(%5309, %5310) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5312 = "tosa.reshape"(%55) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5313 = "tosa.mul"(%5312, %5311) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5314 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5315 = "linalg.generic"(%454, %5314) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5316 = "tosa.reshape"(%5313) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5317 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5318 = "linalg.matmul"(%5316, %5315, %5317) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5319 = "tosa.reshape"(%5318) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5320 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %5321 = "linalg.generic"(%5319, %5320) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5322 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5323 = "linalg.generic"(%456, %5322) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5324 = "tosa.reshape"(%5313) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5325 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5326 = "linalg.matmul"(%5324, %5323, %5325) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5327 = "tosa.reshape"(%5326) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5328 = "tosa.mul"(%5321, %5327) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5329 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %5330 = "linalg.generic"(%458, %5329) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %5331 = "tosa.reshape"(%5328) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5332 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5333 = "linalg.matmul"(%5331, %5330, %5332) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5334 = "tosa.reshape"(%5333) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5335 = "tosa.add"(%5298, %5334) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5336 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5337 = "linalg.generic"(%5335, %5336) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5338 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5339 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5340 = "linalg.generic"(%5337, %5338) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5339) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5341 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5342 = "linalg.generic"(%5340, %5341) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5343 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5344 = "tosa.add"(%5342, %5343) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5345 = "tosa.rsqrt"(%5344) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5346 = "tosa.mul"(%5337, %5345) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5347 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5348 = "linalg.generic"(%5346, %5347) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5349 = "tosa.reshape"(%56) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5350 = "tosa.mul"(%5349, %5348) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5351 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5352 = "linalg.generic"(%460, %5351) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5353 = "tosa.reshape"(%5350) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5354 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5355 = "linalg.matmul"(%5353, %5352, %5354) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5356 = "tosa.reshape"(%5355) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5357 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5358 = "linalg.generic"(%462, %5357) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5359 = "tosa.reshape"(%5350) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5360 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5361 = "linalg.matmul"(%5359, %5358, %5360) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5362 = "tosa.reshape"(%5361) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5363 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5364 = "linalg.generic"(%464, %5363) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5365 = "tosa.reshape"(%5350) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5366 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5367 = "linalg.matmul"(%5365, %5364, %5366) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5368 = "tosa.reshape"(%5367) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5369 = "tosa.reshape"(%5356) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5370 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5371 = "linalg.generic"(%5369, %5370) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5372 = "tosa.reshape"(%5362) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5373 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5374 = "linalg.generic"(%5372, %5373) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5375 = "tosa.reshape"(%5368) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5376 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5377 = "linalg.generic"(%5375, %5376) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5378 = "tensor.extract_slice"(%630) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5379 = "tensor.extract_slice"(%5378) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5380 = "tensor.extract_slice"(%5379) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5381 = "tensor.extract_slice"(%632) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5382 = "tensor.extract_slice"(%5381) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5383 = "tensor.extract_slice"(%5382) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5384 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5385 = "linalg.generic"(%5380, %5384) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5386 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5387 = "linalg.generic"(%5385, %5386) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5388 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5389 = "linalg.generic"(%5383, %5388) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5390 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5391 = "linalg.generic"(%5389, %5390) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5392 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5393 = "linalg.generic"(%647, %5392) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5387, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5394 = "tosa.reshape"(%5393) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5395 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5396 = "linalg.generic"(%647, %5395) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5391, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5397 = "tosa.reshape"(%5396) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5398 = "tosa.mul"(%5371, %5394) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5399 = "tensor.extract_slice"(%5371) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5400 = "tensor.extract_slice"(%5371) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5401 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5402 = "linalg.generic"(%5400, %5401) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5403 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5404 = "tensor.insert_slice"(%5402, %5403) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5405 = "tensor.insert_slice"(%5399, %5404) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5406 = "tosa.mul"(%5405, %5397) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5407 = "tosa.add"(%5398, %5406) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5408 = "tosa.mul"(%5374, %5394) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5409 = "tensor.extract_slice"(%5374) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5410 = "tensor.extract_slice"(%5374) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5411 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5412 = "linalg.generic"(%5410, %5411) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5413 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5414 = "tensor.insert_slice"(%5412, %5413) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5415 = "tensor.insert_slice"(%5409, %5414) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5416 = "tosa.mul"(%5415, %5397) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5417 = "tosa.add"(%5408, %5416) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5418 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %5419 = "linalg.generic"(%5417, %5418) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5420 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5421 = "tosa.add"(%5407, %5420) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5422 = "tosa.reshape"(%5421) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5423 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %5424 = "tosa.add"(%5419, %5423) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5425 = "tosa.reshape"(%5424) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %5426 = "tosa.matmul"(%5422, %5425) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %5427 = "tosa.reshape"(%5426) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5428 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5429 = "tosa.reciprocal"(%5428) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5430 = "tosa.mul"(%5427, %5429) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5431 = "tosa.add"(%5430, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5432 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5433 = "linalg.generic"(%5431, %5432) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5434 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5435 = "linalg.generic"(%5434) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5436 = "linalg.generic"(%5433, %5434) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5437 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5438 = "linalg.generic"(%5433, %5436, %5437) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5439 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5440 = "linalg.generic"(%5439) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5441 = "linalg.generic"(%5438, %5440) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5442 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5443 = "linalg.generic"(%5438, %5441, %5442) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5444 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %5445 = "linalg.generic"(%5443, %5444) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5446 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5447 = "tosa.add"(%5445, %5446) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5448 = "tosa.reshape"(%5447) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %5449 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5450 = "tosa.add"(%5377, %5449) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5451 = "tosa.reshape"(%5450) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5452 = "tosa.matmul"(%5448, %5451) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5453 = "tosa.reshape"(%5452) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5454 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %5455 = "linalg.generic"(%5453, %5454) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5456 = "tosa.identity"(%5455) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5457 = "tosa.reshape"(%5456) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %5458 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5459 = "linalg.generic"(%466, %5458) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5460 = "tosa.reshape"(%5457) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5461 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5462 = "linalg.matmul"(%5460, %5459, %5461) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5463 = "tosa.reshape"(%5462) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5464 = "tosa.add"(%5335, %5463) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5465 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5466 = "linalg.generic"(%5464, %5465) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5467 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5468 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5469 = "linalg.generic"(%5466, %5467) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5468) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5470 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5471 = "linalg.generic"(%5469, %5470) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5472 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5473 = "tosa.add"(%5471, %5472) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5474 = "tosa.rsqrt"(%5473) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5475 = "tosa.mul"(%5466, %5474) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5476 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5477 = "linalg.generic"(%5475, %5476) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5478 = "tosa.reshape"(%57) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5479 = "tosa.mul"(%5478, %5477) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5480 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5481 = "linalg.generic"(%468, %5480) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5482 = "tosa.reshape"(%5479) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5483 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5484 = "linalg.matmul"(%5482, %5481, %5483) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5485 = "tosa.reshape"(%5484) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5486 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %5487 = "linalg.generic"(%5485, %5486) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5488 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5489 = "linalg.generic"(%470, %5488) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5490 = "tosa.reshape"(%5479) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5491 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5492 = "linalg.matmul"(%5490, %5489, %5491) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5493 = "tosa.reshape"(%5492) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5494 = "tosa.mul"(%5487, %5493) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5495 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %5496 = "linalg.generic"(%472, %5495) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %5497 = "tosa.reshape"(%5494) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5498 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5499 = "linalg.matmul"(%5497, %5496, %5498) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5500 = "tosa.reshape"(%5499) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5501 = "tosa.add"(%5464, %5500) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5502 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5503 = "linalg.generic"(%5501, %5502) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5504 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5505 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5506 = "linalg.generic"(%5503, %5504) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5505) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5507 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5508 = "linalg.generic"(%5506, %5507) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5509 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5510 = "tosa.add"(%5508, %5509) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5511 = "tosa.rsqrt"(%5510) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5512 = "tosa.mul"(%5503, %5511) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5513 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5514 = "linalg.generic"(%5512, %5513) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5515 = "tosa.reshape"(%58) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5516 = "tosa.mul"(%5515, %5514) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5517 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5518 = "linalg.generic"(%474, %5517) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5519 = "tosa.reshape"(%5516) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5520 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5521 = "linalg.matmul"(%5519, %5518, %5520) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5522 = "tosa.reshape"(%5521) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5523 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5524 = "linalg.generic"(%476, %5523) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5525 = "tosa.reshape"(%5516) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5526 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5527 = "linalg.matmul"(%5525, %5524, %5526) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5528 = "tosa.reshape"(%5527) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5529 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5530 = "linalg.generic"(%478, %5529) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5531 = "tosa.reshape"(%5516) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5532 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5533 = "linalg.matmul"(%5531, %5530, %5532) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5534 = "tosa.reshape"(%5533) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5535 = "tosa.reshape"(%5522) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5536 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5537 = "linalg.generic"(%5535, %5536) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5538 = "tosa.reshape"(%5528) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5539 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5540 = "linalg.generic"(%5538, %5539) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5541 = "tosa.reshape"(%5534) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5542 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5543 = "linalg.generic"(%5541, %5542) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5544 = "tensor.extract_slice"(%634) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5545 = "tensor.extract_slice"(%5544) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5546 = "tensor.extract_slice"(%5545) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5547 = "tensor.extract_slice"(%636) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5548 = "tensor.extract_slice"(%5547) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5549 = "tensor.extract_slice"(%5548) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5550 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5551 = "linalg.generic"(%5546, %5550) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5552 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5553 = "linalg.generic"(%5551, %5552) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5554 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5555 = "linalg.generic"(%5549, %5554) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5556 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5557 = "linalg.generic"(%5555, %5556) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5558 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5559 = "linalg.generic"(%647, %5558) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5553, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5560 = "tosa.reshape"(%5559) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5561 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5562 = "linalg.generic"(%647, %5561) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5557, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5563 = "tosa.reshape"(%5562) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5564 = "tosa.mul"(%5537, %5560) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5565 = "tensor.extract_slice"(%5537) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5566 = "tensor.extract_slice"(%5537) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5567 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5568 = "linalg.generic"(%5566, %5567) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5569 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5570 = "tensor.insert_slice"(%5568, %5569) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5571 = "tensor.insert_slice"(%5565, %5570) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5572 = "tosa.mul"(%5571, %5563) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5573 = "tosa.add"(%5564, %5572) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5574 = "tosa.mul"(%5540, %5560) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5575 = "tensor.extract_slice"(%5540) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5576 = "tensor.extract_slice"(%5540) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5577 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5578 = "linalg.generic"(%5576, %5577) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5579 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5580 = "tensor.insert_slice"(%5578, %5579) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5581 = "tensor.insert_slice"(%5575, %5580) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5582 = "tosa.mul"(%5581, %5563) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5583 = "tosa.add"(%5574, %5582) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5584 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %5585 = "linalg.generic"(%5583, %5584) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5586 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5587 = "tosa.add"(%5573, %5586) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5588 = "tosa.reshape"(%5587) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5589 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %5590 = "tosa.add"(%5585, %5589) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5591 = "tosa.reshape"(%5590) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %5592 = "tosa.matmul"(%5588, %5591) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %5593 = "tosa.reshape"(%5592) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5594 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5595 = "tosa.reciprocal"(%5594) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5596 = "tosa.mul"(%5593, %5595) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5597 = "tosa.add"(%5596, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5598 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5599 = "linalg.generic"(%5597, %5598) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5600 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5601 = "linalg.generic"(%5600) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5602 = "linalg.generic"(%5599, %5600) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5603 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5604 = "linalg.generic"(%5599, %5602, %5603) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5605 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5606 = "linalg.generic"(%5605) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5607 = "linalg.generic"(%5604, %5606) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5608 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5609 = "linalg.generic"(%5604, %5607, %5608) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5610 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %5611 = "linalg.generic"(%5609, %5610) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5612 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5613 = "tosa.add"(%5611, %5612) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5614 = "tosa.reshape"(%5613) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %5615 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5616 = "tosa.add"(%5543, %5615) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5617 = "tosa.reshape"(%5616) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5618 = "tosa.matmul"(%5614, %5617) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5619 = "tosa.reshape"(%5618) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5620 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %5621 = "linalg.generic"(%5619, %5620) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5622 = "tosa.identity"(%5621) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5623 = "tosa.reshape"(%5622) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %5624 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5625 = "linalg.generic"(%480, %5624) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5626 = "tosa.reshape"(%5623) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5627 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5628 = "linalg.matmul"(%5626, %5625, %5627) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5629 = "tosa.reshape"(%5628) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5630 = "tosa.add"(%5501, %5629) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5631 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5632 = "linalg.generic"(%5630, %5631) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5633 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5634 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5635 = "linalg.generic"(%5632, %5633) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5634) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5636 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5637 = "linalg.generic"(%5635, %5636) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5638 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5639 = "tosa.add"(%5637, %5638) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5640 = "tosa.rsqrt"(%5639) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5641 = "tosa.mul"(%5632, %5640) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5642 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5643 = "linalg.generic"(%5641, %5642) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5644 = "tosa.reshape"(%59) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5645 = "tosa.mul"(%5644, %5643) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5646 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5647 = "linalg.generic"(%482, %5646) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5648 = "tosa.reshape"(%5645) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5649 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5650 = "linalg.matmul"(%5648, %5647, %5649) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5651 = "tosa.reshape"(%5650) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5652 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %5653 = "linalg.generic"(%5651, %5652) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5654 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5655 = "linalg.generic"(%484, %5654) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5656 = "tosa.reshape"(%5645) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5657 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5658 = "linalg.matmul"(%5656, %5655, %5657) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5659 = "tosa.reshape"(%5658) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5660 = "tosa.mul"(%5653, %5659) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5661 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %5662 = "linalg.generic"(%486, %5661) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %5663 = "tosa.reshape"(%5660) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5664 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5665 = "linalg.matmul"(%5663, %5662, %5664) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5666 = "tosa.reshape"(%5665) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5667 = "tosa.add"(%5630, %5666) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5668 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5669 = "linalg.generic"(%5667, %5668) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5670 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5671 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5672 = "linalg.generic"(%5669, %5670) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5671) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5673 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5674 = "linalg.generic"(%5672, %5673) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5675 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5676 = "tosa.add"(%5674, %5675) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5677 = "tosa.rsqrt"(%5676) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5678 = "tosa.mul"(%5669, %5677) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5679 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5680 = "linalg.generic"(%5678, %5679) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5681 = "tosa.reshape"(%60) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5682 = "tosa.mul"(%5681, %5680) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5683 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5684 = "linalg.generic"(%488, %5683) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5685 = "tosa.reshape"(%5682) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5686 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5687 = "linalg.matmul"(%5685, %5684, %5686) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5688 = "tosa.reshape"(%5687) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5689 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5690 = "linalg.generic"(%490, %5689) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5691 = "tosa.reshape"(%5682) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5692 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5693 = "linalg.matmul"(%5691, %5690, %5692) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5694 = "tosa.reshape"(%5693) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5695 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5696 = "linalg.generic"(%492, %5695) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5697 = "tosa.reshape"(%5682) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5698 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5699 = "linalg.matmul"(%5697, %5696, %5698) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5700 = "tosa.reshape"(%5699) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5701 = "tosa.reshape"(%5688) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5702 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5703 = "linalg.generic"(%5701, %5702) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5704 = "tosa.reshape"(%5694) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5705 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5706 = "linalg.generic"(%5704, %5705) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5707 = "tosa.reshape"(%5700) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5708 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5709 = "linalg.generic"(%5707, %5708) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5710 = "tensor.extract_slice"(%638) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5711 = "tensor.extract_slice"(%5710) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5712 = "tensor.extract_slice"(%5711) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5713 = "tensor.extract_slice"(%640) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5714 = "tensor.extract_slice"(%5713) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5715 = "tensor.extract_slice"(%5714) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5716 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5717 = "linalg.generic"(%5712, %5716) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5718 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5719 = "linalg.generic"(%5717, %5718) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5720 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5721 = "linalg.generic"(%5715, %5720) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5722 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5723 = "linalg.generic"(%5721, %5722) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5724 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5725 = "linalg.generic"(%647, %5724) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5719, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5726 = "tosa.reshape"(%5725) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5727 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5728 = "linalg.generic"(%647, %5727) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5723, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5729 = "tosa.reshape"(%5728) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5730 = "tosa.mul"(%5703, %5726) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5731 = "tensor.extract_slice"(%5703) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5732 = "tensor.extract_slice"(%5703) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5733 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5734 = "linalg.generic"(%5732, %5733) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5735 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5736 = "tensor.insert_slice"(%5734, %5735) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5737 = "tensor.insert_slice"(%5731, %5736) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5738 = "tosa.mul"(%5737, %5729) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5739 = "tosa.add"(%5730, %5738) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5740 = "tosa.mul"(%5706, %5726) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5741 = "tensor.extract_slice"(%5706) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5742 = "tensor.extract_slice"(%5706) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5743 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5744 = "linalg.generic"(%5742, %5743) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5745 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5746 = "tensor.insert_slice"(%5744, %5745) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5747 = "tensor.insert_slice"(%5741, %5746) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5748 = "tosa.mul"(%5747, %5729) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5749 = "tosa.add"(%5740, %5748) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5750 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %5751 = "linalg.generic"(%5749, %5750) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5752 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5753 = "tosa.add"(%5739, %5752) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5754 = "tosa.reshape"(%5753) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5755 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %5756 = "tosa.add"(%5751, %5755) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5757 = "tosa.reshape"(%5756) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %5758 = "tosa.matmul"(%5754, %5757) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %5759 = "tosa.reshape"(%5758) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5760 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5761 = "tosa.reciprocal"(%5760) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5762 = "tosa.mul"(%5759, %5761) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5763 = "tosa.add"(%5762, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5764 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5765 = "linalg.generic"(%5763, %5764) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5766 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5767 = "linalg.generic"(%5766) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5768 = "linalg.generic"(%5765, %5766) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5769 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5770 = "linalg.generic"(%5765, %5768, %5769) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5771 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5772 = "linalg.generic"(%5771) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5773 = "linalg.generic"(%5770, %5772) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5774 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5775 = "linalg.generic"(%5770, %5773, %5774) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5776 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %5777 = "linalg.generic"(%5775, %5776) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5778 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5779 = "tosa.add"(%5777, %5778) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5780 = "tosa.reshape"(%5779) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %5781 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5782 = "tosa.add"(%5709, %5781) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5783 = "tosa.reshape"(%5782) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5784 = "tosa.matmul"(%5780, %5783) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5785 = "tosa.reshape"(%5784) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5786 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %5787 = "linalg.generic"(%5785, %5786) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5788 = "tosa.identity"(%5787) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5789 = "tosa.reshape"(%5788) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %5790 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5791 = "linalg.generic"(%494, %5790) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5792 = "tosa.reshape"(%5789) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5793 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5794 = "linalg.matmul"(%5792, %5791, %5793) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5795 = "tosa.reshape"(%5794) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5796 = "tosa.add"(%5667, %5795) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5797 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5798 = "linalg.generic"(%5796, %5797) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5799 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5800 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5801 = "linalg.generic"(%5798, %5799) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5800) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5802 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5803 = "linalg.generic"(%5801, %5802) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5804 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5805 = "tosa.add"(%5803, %5804) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5806 = "tosa.rsqrt"(%5805) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5807 = "tosa.mul"(%5798, %5806) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5808 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5809 = "linalg.generic"(%5807, %5808) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5810 = "tosa.reshape"(%61) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5811 = "tosa.mul"(%5810, %5809) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5812 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5813 = "linalg.generic"(%496, %5812) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5814 = "tosa.reshape"(%5811) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5815 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5816 = "linalg.matmul"(%5814, %5813, %5815) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5817 = "tosa.reshape"(%5816) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5818 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %5819 = "linalg.generic"(%5817, %5818) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5820 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5821 = "linalg.generic"(%498, %5820) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5822 = "tosa.reshape"(%5811) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5823 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5824 = "linalg.matmul"(%5822, %5821, %5823) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5825 = "tosa.reshape"(%5824) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5826 = "tosa.mul"(%5819, %5825) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5827 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %5828 = "linalg.generic"(%500, %5827) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %5829 = "tosa.reshape"(%5826) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5830 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5831 = "linalg.matmul"(%5829, %5828, %5830) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5832 = "tosa.reshape"(%5831) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5833 = "tosa.add"(%5796, %5832) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5834 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5835 = "linalg.generic"(%5833, %5834) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5836 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5837 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5838 = "linalg.generic"(%5835, %5836) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5837) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5839 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5840 = "linalg.generic"(%5838, %5839) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5841 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5842 = "tosa.add"(%5840, %5841) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5843 = "tosa.rsqrt"(%5842) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5844 = "tosa.mul"(%5835, %5843) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5845 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5846 = "linalg.generic"(%5844, %5845) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5847 = "tosa.reshape"(%62) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5848 = "tosa.mul"(%5847, %5846) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5849 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5850 = "linalg.generic"(%502, %5849) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5851 = "tosa.reshape"(%5848) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5852 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5853 = "linalg.matmul"(%5851, %5850, %5852) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5854 = "tosa.reshape"(%5853) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5855 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5856 = "linalg.generic"(%504, %5855) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5857 = "tosa.reshape"(%5848) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5858 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5859 = "linalg.matmul"(%5857, %5856, %5858) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5860 = "tosa.reshape"(%5859) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5861 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5862 = "linalg.generic"(%506, %5861) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5863 = "tosa.reshape"(%5848) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5864 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5865 = "linalg.matmul"(%5863, %5862, %5864) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5866 = "tosa.reshape"(%5865) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5867 = "tosa.reshape"(%5854) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5868 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5869 = "linalg.generic"(%5867, %5868) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5870 = "tosa.reshape"(%5860) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5871 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5872 = "linalg.generic"(%5870, %5871) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5873 = "tosa.reshape"(%5866) <{new_shape = array<i64: 1, 40, 32, 128>}> : (tensor<1x40x4096xbf16>) -> tensor<1x40x32x128xbf16>
    %5874 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5875 = "linalg.generic"(%5873, %5874) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x32x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5876 = "tensor.extract_slice"(%642) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5877 = "tensor.extract_slice"(%5876) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5878 = "tensor.extract_slice"(%5877) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5879 = "tensor.extract_slice"(%644) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5880 = "tensor.extract_slice"(%5879) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 2048, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x2048x128xbf16>
    %5881 = "tensor.extract_slice"(%5880) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 40, 128>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x1x2048x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5882 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5883 = "linalg.generic"(%5878, %5882) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5884 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5885 = "linalg.generic"(%5883, %5884) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5886 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5887 = "linalg.generic"(%5881, %5886) <{indexing_maps = [#map10, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x1x40x128xbf16>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5888 = "tensor.empty"() : () -> tensor<40x128xbf16>
    %5889 = "linalg.generic"(%5887, %5888) <{indexing_maps = [#map11, #map3], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x40x128xbf16>, tensor<40x128xbf16>) -> tensor<40x128xbf16>
    %5890 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5891 = "linalg.generic"(%647, %5890) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5885, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5892 = "tosa.reshape"(%5891) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5893 = "tensor.empty"() : () -> tensor<1x40x128xbf16>
    %5894 = "linalg.generic"(%647, %5893) <{indexing_maps = [#map2, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: i64, %arg3: bf16):
      %6023 = "arith.index_cast"(%arg2) : (i64) -> index
      %6024 = "linalg.index"() <{dim = 2 : i64}> : () -> index
      %6025 = "tensor.extract"(%5889, %6023, %6024) : (tensor<40x128xbf16>, index, index) -> bf16
      "linalg.yield"(%6025) : (bf16) -> ()
    }) : (tensor<1x40xi64>, tensor<1x40x128xbf16>) -> tensor<1x40x128xbf16>
    %5895 = "tosa.reshape"(%5894) <{new_shape = array<i64: 1, 1, 40, 128>}> : (tensor<1x40x128xbf16>) -> tensor<1x1x40x128xbf16>
    %5896 = "tosa.mul"(%5869, %5892) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5897 = "tensor.extract_slice"(%5869) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5898 = "tensor.extract_slice"(%5869) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5899 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5900 = "linalg.generic"(%5898, %5899) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5901 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5902 = "tensor.insert_slice"(%5900, %5901) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5903 = "tensor.insert_slice"(%5897, %5902) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5904 = "tosa.mul"(%5903, %5895) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5905 = "tosa.add"(%5896, %5904) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5906 = "tosa.mul"(%5872, %5892) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5907 = "tensor.extract_slice"(%5872) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5908 = "tensor.extract_slice"(%5872) <{operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x128xbf16>) -> tensor<1x32x40x64xbf16>
    %5909 = "tensor.empty"() : () -> tensor<1x32x40x64xbf16>
    %5910 = "linalg.generic"(%5908, %5909) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x64xbf16>, tensor<1x32x40x64xbf16>) -> tensor<1x32x40x64xbf16>
    %5911 = "tensor.empty"() : () -> tensor<1x32x40x128xbf16>
    %5912 = "tensor.insert_slice"(%5910, %5911) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5913 = "tensor.insert_slice"(%5907, %5912) <{operandSegmentSizes = array<i32: 1, 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 64>, static_sizes = array<i64: 1, 32, 40, 64>, static_strides = array<i64: 1, 1, 1, 1>}> : (tensor<1x32x40x64xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5914 = "tosa.mul"(%5913, %5895) <{shift = 0 : i8}> : (tensor<1x32x40x128xbf16>, tensor<1x1x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5915 = "tosa.add"(%5906, %5914) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5916 = "tensor.empty"() : () -> tensor<1x32x128x40xbf16>
    %5917 = "linalg.generic"(%5915, %5916) <{indexing_maps = [#map12, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5918 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5919 = "tosa.add"(%5905, %5918) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5920 = "tosa.reshape"(%5919) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5921 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x128x40xbf16>}> : () -> tensor<1x32x128x40xbf16>
    %5922 = "tosa.add"(%5917, %5921) : (tensor<1x32x128x40xbf16>, tensor<1x32x128x40xbf16>) -> tensor<1x32x128x40xbf16>
    %5923 = "tosa.reshape"(%5922) <{new_shape = array<i64: 32, 128, 40>}> : (tensor<1x32x128x40xbf16>) -> tensor<32x128x40xbf16>
    %5924 = "tosa.matmul"(%5920, %5923) : (tensor<32x40x128xbf16>, tensor<32x128x40xbf16>) -> tensor<32x40x40xbf16>
    %5925 = "tosa.reshape"(%5924) <{new_shape = array<i64: 1, 32, 40, 40>}> : (tensor<32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5926 = "tosa.const"() <{value = dense<1.131250e+01> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5927 = "tosa.reciprocal"(%5926) : (tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5928 = "tosa.mul"(%5925, %5927) <{shift = 0 : i8}> : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5929 = "tosa.add"(%5928, %687) : (tensor<1x32x40x40xbf16>, tensor<1x1x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5930 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5931 = "linalg.generic"(%5929, %5930) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5932 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5933 = "linalg.generic"(%5932) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0xFF800000 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5934 = "linalg.generic"(%5931, %5932) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.maximumf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5935 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5936 = "linalg.generic"(%5931, %5934, %5935) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.subf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (f32) -> f32
      "linalg.yield"(%6024) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5937 = "tensor.empty"() : () -> tensor<1x32x40x1xf32>
    %5938 = "linalg.generic"(%5937) <{indexing_maps = [#map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 0, 1>}> ({
    ^bb0(%arg2: f32):
      %6023 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5939 = "linalg.generic"(%5936, %5938) <{indexing_maps = [#map4, #map13], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.addf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>) -> tensor<1x32x40x1xf32>
    %5940 = "tensor.empty"() : () -> tensor<1x32x40x40xf32>
    %5941 = "linalg.generic"(%5936, %5939, %5940) <{indexing_maps = [#map4, #map13, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32, %arg4: f32):
      %6023 = "arith.divf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x1xf32>, tensor<1x32x40x40xf32>) -> tensor<1x32x40x40xf32>
    %5942 = "tensor.empty"() : () -> tensor<1x32x40x40xbf16>
    %5943 = "linalg.generic"(%5941, %5942) <{indexing_maps = [#map4, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x32x40x40xf32>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5944 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x40xbf16>}> : () -> tensor<1x32x40x40xbf16>
    %5945 = "tosa.add"(%5943, %5944) : (tensor<1x32x40x40xbf16>, tensor<1x32x40x40xbf16>) -> tensor<1x32x40x40xbf16>
    %5946 = "tosa.reshape"(%5945) <{new_shape = array<i64: 32, 40, 40>}> : (tensor<1x32x40x40xbf16>) -> tensor<32x40x40xbf16>
    %5947 = "tosa.const"() <{value = dense<0.000000e+00> : tensor<1x32x40x128xbf16>}> : () -> tensor<1x32x40x128xbf16>
    %5948 = "tosa.add"(%5875, %5947) : (tensor<1x32x40x128xbf16>, tensor<1x32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5949 = "tosa.reshape"(%5948) <{new_shape = array<i64: 32, 40, 128>}> : (tensor<1x32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5950 = "tosa.matmul"(%5946, %5949) : (tensor<32x40x40xbf16>, tensor<32x40x128xbf16>) -> tensor<32x40x128xbf16>
    %5951 = "tosa.reshape"(%5950) <{new_shape = array<i64: 1, 32, 40, 128>}> : (tensor<32x40x128xbf16>) -> tensor<1x32x40x128xbf16>
    %5952 = "tensor.empty"() : () -> tensor<1x40x32x128xbf16>
    %5953 = "linalg.generic"(%5951, %5952) <{indexing_maps = [#map9, #map4], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<1x32x40x128xbf16>, tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5954 = "tosa.identity"(%5953) : (tensor<1x40x32x128xbf16>) -> tensor<1x40x32x128xbf16>
    %5955 = "tosa.reshape"(%5954) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<1x40x32x128xbf16>) -> tensor<1x40x4096xbf16>
    %5956 = "tensor.empty"() : () -> tensor<4096x4096xbf16>
    %5957 = "linalg.generic"(%508, %5956) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x4096xbf16>, tensor<4096x4096xbf16>) -> tensor<4096x4096xbf16>
    %5958 = "tosa.reshape"(%5955) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5959 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5960 = "linalg.matmul"(%5958, %5957, %5959) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5961 = "tosa.reshape"(%5960) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5962 = "tosa.add"(%5833, %5961) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5963 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5964 = "linalg.generic"(%5962, %5963) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5965 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %5966 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %5967 = "linalg.generic"(%5964, %5965) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %5966) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %5968 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5969 = "linalg.generic"(%5967, %5968) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5970 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %5971 = "tosa.add"(%5969, %5970) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5972 = "tosa.rsqrt"(%5971) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %5973 = "tosa.mul"(%5964, %5972) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %5974 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %5975 = "linalg.generic"(%5973, %5974) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5976 = "tosa.reshape"(%63) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %5977 = "tosa.mul"(%5976, %5975) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5978 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5979 = "linalg.generic"(%510, %5978) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5980 = "tosa.reshape"(%5977) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5981 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5982 = "linalg.matmul"(%5980, %5979, %5981) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5983 = "tosa.reshape"(%5982) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5984 = "tensor.empty"() : () -> tensor<1x40x11008xbf16>
    %5985 = "linalg.generic"(%5983, %5984) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      %6023 = "arith.negf"(%arg2) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6024 = "math.exp"(%6023) <{fastmath = #arith.fastmath<none>}> : (bf16) -> bf16
      %6025 = "arith.constant"() <{value = 1.000000e+00 : bf16}> : () -> bf16
      %6026 = "arith.addf"(%6025, %6024) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6027 = "arith.divf"(%arg2, %6026) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6027) : (bf16) -> ()
    }) : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5986 = "tensor.empty"() : () -> tensor<4096x11008xbf16>
    %5987 = "linalg.generic"(%512, %5986) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<11008x4096xbf16>, tensor<4096x11008xbf16>) -> tensor<4096x11008xbf16>
    %5988 = "tosa.reshape"(%5977) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %5989 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x11008xbf16>}> : () -> tensor<40x11008xbf16>
    %5990 = "linalg.matmul"(%5988, %5987, %5989) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x11008xbf16>, tensor<40x11008xbf16>) -> tensor<40x11008xbf16>
    %5991 = "tosa.reshape"(%5990) <{new_shape = array<i64: 1, 40, 11008>}> : (tensor<40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5992 = "tosa.mul"(%5985, %5991) <{shift = 0 : i8}> : (tensor<1x40x11008xbf16>, tensor<1x40x11008xbf16>) -> tensor<1x40x11008xbf16>
    %5993 = "tensor.empty"() : () -> tensor<11008x4096xbf16>
    %5994 = "linalg.generic"(%514, %5993) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<4096x11008xbf16>, tensor<11008x4096xbf16>) -> tensor<11008x4096xbf16>
    %5995 = "tosa.reshape"(%5992) <{new_shape = array<i64: 40, 11008>}> : (tensor<1x40x11008xbf16>) -> tensor<40x11008xbf16>
    %5996 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x4096xbf16>}> : () -> tensor<40x4096xbf16>
    %5997 = "linalg.matmul"(%5995, %5994, %5996) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x11008xbf16>, tensor<11008x4096xbf16>, tensor<40x4096xbf16>) -> tensor<40x4096xbf16>
    %5998 = "tosa.reshape"(%5997) <{new_shape = array<i64: 1, 40, 4096>}> : (tensor<40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %5999 = "tosa.add"(%5962, %5998) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %6000 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %6001 = "linalg.generic"(%5999, %6000) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xbf16>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %6002 = "tensor.empty"() : () -> tensor<1x40x4096xf32>
    %6003 = "arith.constant"() <{value = 2 : i32}> : () -> i32
    %6004 = "linalg.generic"(%6001, %6002) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "math.fpowi"(%arg2, %6003) <{fastmath = #arith.fastmath<none>}> : (f32, i32) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xf32>) -> tensor<1x40x4096xf32>
    %6005 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %6006 = "linalg.generic"(%6004, %6005) <{indexing_maps = [#map6, #map7], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: f32):
      %6023 = "arith.constant"() <{value = 4.096000e+03 : f32}> : () -> f32
      %6024 = "arith.divf"(%arg2, %6023) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      %6025 = "arith.addf"(%6024, %arg3) <{fastmath = #arith.fastmath<none>}> : (f32, f32) -> f32
      "linalg.yield"(%6025) : (f32) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %6007 = "tosa.const"() <{value = dense<9.99999974E-6> : tensor<1x40x1xf32>}> : () -> tensor<1x40x1xf32>
    %6008 = "tosa.add"(%6006, %6007) : (tensor<1x40x1xf32>, tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %6009 = "tosa.rsqrt"(%6008) : (tensor<1x40x1xf32>) -> tensor<1x40x1xf32>
    %6010 = "tosa.mul"(%6001, %6009) <{shift = 0 : i8}> : (tensor<1x40x4096xf32>, tensor<1x40x1xf32>) -> tensor<1x40x4096xf32>
    %6011 = "tensor.empty"() : () -> tensor<1x40x4096xbf16>
    %6012 = "linalg.generic"(%6010, %6011) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: f32, %arg3: bf16):
      %6023 = "arith.truncf"(%arg2) : (f32) -> bf16
      "linalg.yield"(%6023) : (bf16) -> ()
    }) : (tensor<1x40x4096xf32>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %6013 = "tosa.reshape"(%64) <{new_shape = array<i64: 1, 1, 4096>}> : (tensor<4096xbf16>) -> tensor<1x1x4096xbf16>
    %6014 = "tosa.mul"(%6013, %6012) <{shift = 0 : i8}> : (tensor<1x1x4096xbf16>, tensor<1x40x4096xbf16>) -> tensor<1x40x4096xbf16>
    %6015 = "tensor.empty"() : () -> tensor<4096x32000xbf16>
    %6016 = "linalg.generic"(%516, %6015) <{indexing_maps = [#map3, #map8], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16):
      "linalg.yield"(%arg2) : (bf16) -> ()
    }) : (tensor<32000x4096xbf16>, tensor<4096x32000xbf16>) -> tensor<4096x32000xbf16>
    %6017 = "tosa.reshape"(%6014) <{new_shape = array<i64: 40, 4096>}> : (tensor<1x40x4096xbf16>) -> tensor<40x4096xbf16>
    %6018 = "arith.constant"() <{value = dense<0.000000e+00> : tensor<40x32000xbf16>}> : () -> tensor<40x32000xbf16>
    %6019 = "linalg.matmul"(%6017, %6016, %6018) <{cast = #linalg.type_fn<cast_signed>, operandSegmentSizes = array<i32: 2, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: bf16, %arg4: bf16):
      %6023 = "arith.mulf"(%arg2, %arg3) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      %6024 = "arith.addf"(%arg4, %6023) <{fastmath = #arith.fastmath<none>}> : (bf16, bf16) -> bf16
      "linalg.yield"(%6024) : (bf16) -> ()
    }) : (tensor<40x4096xbf16>, tensor<4096x32000xbf16>, tensor<40x32000xbf16>) -> tensor<40x32000xbf16>
    %6020 = "tosa.reshape"(%6019) <{new_shape = array<i64: 1, 40, 32000>}> : (tensor<40x32000xbf16>) -> tensor<1x40x32000xbf16>
    %6021 = "tensor.empty"() : () -> tensor<1x40x32000xf32>
    %6022 = "linalg.generic"(%6020, %6021) <{indexing_maps = [#map5, #map5], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>], operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg2: bf16, %arg3: f32):
      %6023 = "arith.extf"(%arg2) : (bf16) -> f32
      "linalg.yield"(%6023) : (f32) -> ()
    }) : (tensor<1x40x32000xbf16>, tensor<1x40x32000xf32>) -> tensor<1x40x32000xf32>
    "func.return"(%6022, %6014) : (tensor<1x40x32000xf32>, tensor<1x40x4096xbf16>) -> ()
  }) : () -> ()
}) : () -> ()

