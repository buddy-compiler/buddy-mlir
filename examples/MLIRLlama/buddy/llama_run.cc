#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <cmath>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
using namespace std;

typedef long int intptr_t;
// Define Memref Descriptor.
template <class ElementType>
struct Tensor_descriptor_ {
    ElementType *allocated;
    ElementType *aligned;
    intptr_t offset;
    intptr_t sizes[1];
    intptr_t strides[1];
};

extern "C" Tensor_descriptor_<int>* forward(Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<float>*, Tensor_descriptor_<long long>*);

int main(){
    Tensor_descriptor_<float>* arg0=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg1=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg2=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg3=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg4=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg5=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg6=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg7=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg8=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg9=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg10=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg11=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg12=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg13=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg14=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg15=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg16=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg17=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg18=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg19=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg20=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg21=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg22=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg23=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg24=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg25=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg26=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg27=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg28=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg29=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg30=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg31=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg32=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg33=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg34=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg35=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg36=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg37=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg38=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg39=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg40=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg41=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg42=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg43=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg44=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg45=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg46=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg47=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg48=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg49=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg50=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg51=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg52=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg53=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg54=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg55=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg56=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg57=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg58=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg59=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg60=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg61=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg62=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg63=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg64=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg65=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg66=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg67=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg68=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg69=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg70=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg71=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg72=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg73=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg74=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg75=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg76=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg77=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg78=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg79=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg80=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg81=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg82=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg83=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg84=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg85=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg86=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg87=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg88=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg89=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg90=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg91=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg92=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg93=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg94=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg95=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg96=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg97=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg98=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg99=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg100=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg101=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg102=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg103=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg104=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg105=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg106=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg107=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg108=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg109=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg110=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg111=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg112=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg113=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg114=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg115=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg116=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg117=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg118=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg119=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg120=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg121=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg122=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg123=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg124=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg125=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg126=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg127=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg128=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg129=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg130=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg131=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg132=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg133=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg134=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg135=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg136=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg137=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg138=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg139=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg140=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg141=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg142=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg143=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg144=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg145=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg146=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg147=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg148=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg149=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg150=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg151=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg152=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg153=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg154=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg155=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg156=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg157=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg158=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg159=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg160=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg161=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg162=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg163=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg164=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg165=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg166=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg167=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg168=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg169=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg170=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg171=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg172=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg173=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg174=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg175=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg176=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg177=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg178=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg179=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg180=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg181=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg182=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg183=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg184=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg185=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg186=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg187=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg188=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg189=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg190=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg191=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg192=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg193=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg194=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg195=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg196=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg197=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg198=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg199=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg200=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg201=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg202=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg203=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg204=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg205=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg206=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg207=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg208=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg209=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg210=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg211=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg212=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg213=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg214=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg215=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg216=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg217=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg218=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg219=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg220=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg221=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg222=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg223=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg224=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg225=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg226=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg227=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg228=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg229=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg230=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg231=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg232=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg233=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg234=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg235=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg236=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg237=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg238=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg239=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg240=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg241=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg242=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg243=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg244=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg245=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg246=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg247=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg248=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg249=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg250=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg251=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg252=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg253=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg254=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg255=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg256=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg257=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg258=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg259=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg260=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg261=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg262=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg263=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg264=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg265=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg266=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg267=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg268=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg269=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg270=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg271=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg272=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg273=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg274=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg275=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg276=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg277=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg278=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg279=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg280=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg281=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg282=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg283=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg284=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg285=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg286=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg287=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg288=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg289=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg290=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg291=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg292=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg293=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg294=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg295=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg296=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg297=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg298=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg299=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg300=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg301=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg302=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg303=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg304=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg305=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg306=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg307=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg308=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg309=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg310=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg311=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg312=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg313=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg314=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg315=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg316=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg317=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg318=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg319=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg320=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg321=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg322=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg323=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg324=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg325=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg326=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg327=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg328=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg329=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg330=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg331=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg332=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg333=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg334=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg335=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg336=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg337=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg338=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg339=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg340=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg341=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg342=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg343=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg344=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg345=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg346=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg347=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg348=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg349=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg350=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg351=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg352=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg353=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    Tensor_descriptor_<float>* arg354=(Tensor_descriptor_<float>*)malloc(sizeof(Tensor_descriptor_<float>));
    vector<string> data_shape;
    ifstream infile;
    infile.open("../params_shape.txt", ios::in);
    if (!infile.is_open()){
		cout << "读取文件失败" << endl;
		return 0;
	}
    string element_shape;
    while (getline(infile, element_shape)){
		data_shape.push_back(string(element_shape));
	}
    vector<float*> params;
    for(auto iter : data_shape){
        auto pos = iter.find_first_of(" ");
        string arg_name = iter.substr(0, pos);
        string arg_shape = iter.substr(pos+1, iter.size()-pos-1);
        stringstream ss;
        ss << arg_shape;
        int arg_size;
        ss >> arg_size;
        cout<<"size:"<<arg_size<<endl;
        //float arr[arg_size];
        float* arr = (float*)malloc(sizeof(float)*arg_size);
        ifstream in("../params_data/"+arg_name+".data", ios::in | ios::binary);
        in.read((char*) arr, sizeof(float)*arg_size);
        cout << in.gcount()<<"bytes have been read" << endl;
        cout <<endl;
        params.push_back(arr);
    }
    Tensor_descriptor_<Tensor_descriptor_<float>*>* output;
    arg0->aligned = (float*)params[0];
    arg1->aligned = (float*)params[1];
    arg2->aligned = (float*)params[2];
    arg3->aligned = (float*)params[3];
    arg4->aligned = (float*)params[4];
    arg5->aligned = (float*)params[5];
    arg6->aligned = (float*)params[6];
    arg7->aligned = (float*)params[7];
    arg8->aligned = (float*)params[8];
    arg9->aligned = (float*)params[9];
    arg10->aligned = (float*)params[10];
    arg11->aligned = (float*)params[11];
    arg12->aligned = (float*)params[12];
    arg13->aligned = (float*)params[13];
    arg14->aligned = (float*)params[14];
    arg15->aligned = (float*)params[15];
    arg16->aligned = (float*)params[16];
    arg17->aligned = (float*)params[17];
    arg18->aligned = (float*)params[18];
    arg19->aligned = (float*)params[19];
    arg20->aligned = (float*)params[20];
    arg21->aligned = (float*)params[21];
    arg22->aligned = (float*)params[22];
    arg23->aligned = (float*)params[23];
    arg24->aligned = (float*)params[24];
    arg25->aligned = (float*)params[25];
    arg26->aligned = (float*)params[26];
    arg27->aligned = (float*)params[27];
    arg28->aligned = (float*)params[28];
    arg29->aligned = (float*)params[29];
    arg30->aligned = (float*)params[30];
    arg31->aligned = (float*)params[31];
    arg32->aligned = (float*)params[32];
    arg33->aligned = (float*)params[33];
    arg34->aligned = (float*)params[34];
    arg35->aligned = (float*)params[35];
    arg36->aligned = (float*)params[36];
    arg37->aligned = (float*)params[37];
    arg38->aligned = (float*)params[38];
    arg39->aligned = (float*)params[39];
    arg40->aligned = (float*)params[40];
    arg41->aligned = (float*)params[41];
    arg42->aligned = (float*)params[42];
    arg43->aligned = (float*)params[43];
    arg44->aligned = (float*)params[44];
    arg45->aligned = (float*)params[45];
    arg46->aligned = (float*)params[46];
    arg47->aligned = (float*)params[47];
    arg48->aligned = (float*)params[48];
    arg49->aligned = (float*)params[49];
    arg50->aligned = (float*)params[50];
    arg51->aligned = (float*)params[51];
    arg52->aligned = (float*)params[52];
    arg53->aligned = (float*)params[53];
    arg54->aligned = (float*)params[54];
    arg55->aligned = (float*)params[55];
    arg56->aligned = (float*)params[56];
    arg57->aligned = (float*)params[57];
    arg58->aligned = (float*)params[58];
    arg59->aligned = (float*)params[59];
    arg60->aligned = (float*)params[60];
    arg61->aligned = (float*)params[61];
    arg62->aligned = (float*)params[62];
    arg63->aligned = (float*)params[63];
    arg64->aligned = (float*)params[64];
    arg65->aligned = (float*)params[65];
    arg66->aligned = (float*)params[66];
    arg67->aligned = (float*)params[67];
    arg68->aligned = (float*)params[68];
    arg69->aligned = (float*)params[69];
    arg70->aligned = (float*)params[70];
    arg71->aligned = (float*)params[71];
    arg72->aligned = (float*)params[72];
    arg73->aligned = (float*)params[73];
    arg74->aligned = (float*)params[74];
    arg75->aligned = (float*)params[75];
    arg76->aligned = (float*)params[76];
    arg77->aligned = (float*)params[77];
    arg78->aligned = (float*)params[78];
    arg79->aligned = (float*)params[79];
    arg80->aligned = (float*)params[80];
    arg81->aligned = (float*)params[81];
    arg82->aligned = (float*)params[82];
    arg83->aligned = (float*)params[83];
    arg84->aligned = (float*)params[84];
    arg85->aligned = (float*)params[85];
    arg86->aligned = (float*)params[86];
    arg87->aligned = (float*)params[87];
    arg88->aligned = (float*)params[88];
    arg89->aligned = (float*)params[89];
    arg90->aligned = (float*)params[90];
    arg91->aligned = (float*)params[91];
    arg92->aligned = (float*)params[92];
    arg93->aligned = (float*)params[93];
    arg94->aligned = (float*)params[94];
    arg95->aligned = (float*)params[95];
    arg96->aligned = (float*)params[96];
    arg97->aligned = (float*)params[97];
    arg98->aligned = (float*)params[98];
    arg99->aligned = (float*)params[99];
    arg100->aligned = (float*)params[100];
    arg101->aligned = (float*)params[101];
    arg102->aligned = (float*)params[102];
    arg103->aligned = (float*)params[103];
    arg104->aligned = (float*)params[104];
    arg105->aligned = (float*)params[105];
    arg106->aligned = (float*)params[106];
    arg107->aligned = (float*)params[107];
    arg108->aligned = (float*)params[108];
    arg109->aligned = (float*)params[109];
    arg110->aligned = (float*)params[110];
    arg111->aligned = (float*)params[111];
    arg112->aligned = (float*)params[112];
    arg113->aligned = (float*)params[113];
    arg114->aligned = (float*)params[114];
    arg115->aligned = (float*)params[115];
    arg116->aligned = (float*)params[116];
    arg117->aligned = (float*)params[117];
    arg118->aligned = (float*)params[118];
    arg119->aligned = (float*)params[119];
    arg120->aligned = (float*)params[120];
    arg121->aligned = (float*)params[121];
    arg122->aligned = (float*)params[122];
    arg123->aligned = (float*)params[123];
    arg124->aligned = (float*)params[124];
    arg125->aligned = (float*)params[125];
    arg126->aligned = (float*)params[126];
    arg127->aligned = (float*)params[127];
    arg128->aligned = (float*)params[128];
    arg129->aligned = (float*)params[129];
    arg130->aligned = (float*)params[130];
    arg131->aligned = (float*)params[131];
    arg132->aligned = (float*)params[132];
    arg133->aligned = (float*)params[133];
    arg134->aligned = (float*)params[134];
    arg135->aligned = (float*)params[135];
    arg136->aligned = (float*)params[136];
    arg137->aligned = (float*)params[137];
    arg138->aligned = (float*)params[138];
    arg139->aligned = (float*)params[139];
    arg140->aligned = (float*)params[140];
    arg141->aligned = (float*)params[141];
    arg142->aligned = (float*)params[142];
    arg143->aligned = (float*)params[143];
    arg144->aligned = (float*)params[144];
    arg145->aligned = (float*)params[145];
    arg146->aligned = (float*)params[146];
    arg147->aligned = (float*)params[147];
    arg148->aligned = (float*)params[148];
    arg149->aligned = (float*)params[149];
    arg150->aligned = (float*)params[150];
    arg151->aligned = (float*)params[151];
    arg152->aligned = (float*)params[152];
    arg153->aligned = (float*)params[153];
    arg154->aligned = (float*)params[154];
    arg155->aligned = (float*)params[155];
    arg156->aligned = (float*)params[156];
    arg157->aligned = (float*)params[157];
    arg158->aligned = (float*)params[158];
    arg159->aligned = (float*)params[159];
    arg160->aligned = (float*)params[160];
    arg161->aligned = (float*)params[161];
    arg162->aligned = (float*)params[162];
    arg163->aligned = (float*)params[163];
    arg164->aligned = (float*)params[164];
    arg165->aligned = (float*)params[165];
    arg166->aligned = (float*)params[166];
    arg167->aligned = (float*)params[167];
    arg168->aligned = (float*)params[168];
    arg169->aligned = (float*)params[169];
    arg170->aligned = (float*)params[170];
    arg171->aligned = (float*)params[171];
    arg172->aligned = (float*)params[172];
    arg173->aligned = (float*)params[173];
    arg174->aligned = (float*)params[174];
    arg175->aligned = (float*)params[175];
    arg176->aligned = (float*)params[176];
    arg177->aligned = (float*)params[177];
    arg178->aligned = (float*)params[178];
    arg179->aligned = (float*)params[179];
    arg180->aligned = (float*)params[180];
    arg181->aligned = (float*)params[181];
    arg182->aligned = (float*)params[182];
    arg183->aligned = (float*)params[183];
    arg184->aligned = (float*)params[184];
    arg185->aligned = (float*)params[185];
    arg186->aligned = (float*)params[186];
    arg187->aligned = (float*)params[187];
    arg188->aligned = (float*)params[188];
    arg189->aligned = (float*)params[189];
    arg190->aligned = (float*)params[190];
    arg191->aligned = (float*)params[191];
    arg192->aligned = (float*)params[192];
    arg193->aligned = (float*)params[193];
    arg194->aligned = (float*)params[194];
    arg195->aligned = (float*)params[195];
    arg196->aligned = (float*)params[196];
    arg197->aligned = (float*)params[197];
    arg198->aligned = (float*)params[198];
    arg199->aligned = (float*)params[199];
    arg200->aligned = (float*)params[200];
    arg201->aligned = (float*)params[201];
    arg202->aligned = (float*)params[202];
    arg203->aligned = (float*)params[203];
    arg204->aligned = (float*)params[204];
    arg205->aligned = (float*)params[205];
    arg206->aligned = (float*)params[206];
    arg207->aligned = (float*)params[207];
    arg208->aligned = (float*)params[208];
    arg209->aligned = (float*)params[209];
    arg210->aligned = (float*)params[210];
    arg211->aligned = (float*)params[211];
    arg212->aligned = (float*)params[212];
    arg213->aligned = (float*)params[213];
    arg214->aligned = (float*)params[214];
    arg215->aligned = (float*)params[215];
    arg216->aligned = (float*)params[216];
    arg217->aligned = (float*)params[217];
    arg218->aligned = (float*)params[218];
    arg219->aligned = (float*)params[219];
    arg220->aligned = (float*)params[220];
    arg221->aligned = (float*)params[221];
    arg222->aligned = (float*)params[222];
    arg223->aligned = (float*)params[223];
    arg224->aligned = (float*)params[224];
    arg225->aligned = (float*)params[225];
    arg226->aligned = (float*)params[226];
    arg227->aligned = (float*)params[227];
    arg228->aligned = (float*)params[228];
    arg229->aligned = (float*)params[229];
    arg230->aligned = (float*)params[230];
    arg231->aligned = (float*)params[231];
    arg232->aligned = (float*)params[232];
    arg233->aligned = (float*)params[233];
    arg234->aligned = (float*)params[234];
    arg235->aligned = (float*)params[235];
    arg236->aligned = (float*)params[236];
    arg237->aligned = (float*)params[237];
    arg238->aligned = (float*)params[238];
    arg239->aligned = (float*)params[239];
    arg240->aligned = (float*)params[240];
    arg241->aligned = (float*)params[241];
    arg242->aligned = (float*)params[242];
    arg243->aligned = (float*)params[243];
    arg244->aligned = (float*)params[244];
    arg245->aligned = (float*)params[245];
    arg246->aligned = (float*)params[246];
    arg247->aligned = (float*)params[247];
    arg248->aligned = (float*)params[248];
    arg249->aligned = (float*)params[249];
    arg250->aligned = (float*)params[250];
    arg251->aligned = (float*)params[251];
    arg252->aligned = (float*)params[252];
    arg253->aligned = (float*)params[253];
    arg254->aligned = (float*)params[254];
    arg255->aligned = (float*)params[255];
    arg256->aligned = (float*)params[256];
    arg257->aligned = (float*)params[257];
    arg258->aligned = (float*)params[258];
    arg259->aligned = (float*)params[259];
    arg260->aligned = (float*)params[260];
    arg261->aligned = (float*)params[261];
    arg262->aligned = (float*)params[262];
    arg263->aligned = (float*)params[263];
    arg264->aligned = (float*)params[264];
    arg265->aligned = (float*)params[265];
    arg266->aligned = (float*)params[266];
    arg267->aligned = (float*)params[267];
    arg268->aligned = (float*)params[268];
    arg269->aligned = (float*)params[269];
    arg270->aligned = (float*)params[270];
    arg271->aligned = (float*)params[271];
    arg272->aligned = (float*)params[272];
    arg273->aligned = (float*)params[273];
    arg274->aligned = (float*)params[274];
    arg275->aligned = (float*)params[275];
    arg276->aligned = (float*)params[276];
    arg277->aligned = (float*)params[277];
    arg278->aligned = (float*)params[278];
    arg279->aligned = (float*)params[279];
    arg280->aligned = (float*)params[280];
    arg281->aligned = (float*)params[281];
    arg282->aligned = (float*)params[282];
    arg283->aligned = (float*)params[283];
    arg284->aligned = (float*)params[284];
    arg285->aligned = (float*)params[285];
    arg286->aligned = (float*)params[286];
    arg287->aligned = (float*)params[287];
    arg288->aligned = (float*)params[288];
    arg289->aligned = (float*)params[289];
    arg290->aligned = (float*)params[290];
    arg291->aligned = (float*)params[291];
    arg292->aligned = (float*)params[292];
    arg293->aligned = (float*)params[293];
    arg294->aligned = (float*)params[294];
    arg295->aligned = (float*)params[295];
    arg296->aligned = (float*)params[296];
    arg297->aligned = (float*)params[297];
    arg298->aligned = (float*)params[298];
    arg299->aligned = (float*)params[299];
    arg300->aligned = (float*)params[300];
    arg301->aligned = (float*)params[301];
    arg302->aligned = (float*)params[302];
    arg303->aligned = (float*)params[303];
    arg304->aligned = (float*)params[304];
    arg305->aligned = (float*)params[305];
    arg306->aligned = (float*)params[306];
    arg307->aligned = (float*)params[307];
    arg308->aligned = (float*)params[308];
    arg309->aligned = (float*)params[309];
    arg310->aligned = (float*)params[310];
    arg311->aligned = (float*)params[311];
    arg312->aligned = (float*)params[312];
    arg313->aligned = (float*)params[313];
    arg314->aligned = (float*)params[314];
    arg315->aligned = (float*)params[315];
    arg316->aligned = (float*)params[316];
    arg317->aligned = (float*)params[317];
    arg318->aligned = (float*)params[318];
    arg319->aligned = (float*)params[319];
    arg320->aligned = (float*)params[320];
    arg321->aligned = (float*)params[321];
    arg322->aligned = (float*)params[322];
    arg323->aligned = (float*)params[323];
    arg324->aligned = (float*)params[324];
    arg325->aligned = (float*)params[325];
    arg326->aligned = (float*)params[326];
    arg327->aligned = (float*)params[327];
    arg328->aligned = (float*)params[328];
    arg329->aligned = (float*)params[329];
    arg330->aligned = (float*)params[330];
    arg331->aligned = (float*)params[331];
    arg332->aligned = (float*)params[332];
    arg333->aligned = (float*)params[333];
    arg334->aligned = (float*)params[334];
    arg335->aligned = (float*)params[335];
    arg336->aligned = (float*)params[336];
    arg337->aligned = (float*)params[337];
    arg338->aligned = (float*)params[338];
    arg339->aligned = (float*)params[339];
    arg340->aligned = (float*)params[340];
    arg341->aligned = (float*)params[341];
    arg342->aligned = (float*)params[342];
    arg343->aligned = (float*)params[343];
    arg344->aligned = (float*)params[344];
    arg345->aligned = (float*)params[345];
    arg346->aligned = (float*)params[346];
    arg347->aligned = (float*)params[347];
    arg348->aligned = (float*)params[348];
    arg349->aligned = (float*)params[349];
    arg350->aligned = (float*)params[350];
    arg351->aligned = (float*)params[351];
    arg352->aligned = (float*)params[352];
    arg353->aligned = (float*)params[353];
    arg354->aligned = (float*)params[354];

    long long input_data[13];
    for(int i=0;i<13;i++){
        input_data[i] = 1;
    }
    Tensor_descriptor_<long long>* arg355=(Tensor_descriptor_<long long>*)malloc(sizeof(Tensor_descriptor_<long long>));
    arg355->aligned = (long long*)input_data;
    forward(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30, arg31, arg32, arg33, arg34, arg35, arg36, arg37, arg38, arg39, arg40, arg41, arg42, arg43, arg44, arg45, arg46, arg47, arg48, arg49, arg50, arg51, arg52, arg53, arg54, arg55, arg56, arg57, arg58, arg59, arg60, arg61, arg62, arg63, arg64, arg65, arg66, arg67, arg68, arg69, arg70, arg71, arg72, arg73, arg74, arg75, arg76, arg77, arg78, arg79, arg80, arg81, arg82, arg83, arg84, arg85, arg86, arg87, arg88, arg89, arg90, arg91, arg92, arg93, arg94, arg95, arg96, arg97, arg98, arg99, arg100, arg101, arg102, arg103, arg104, arg105, arg106, arg107, arg108, arg109, arg110, arg111, arg112, arg113, arg114, arg115, arg116, arg117, arg118, arg119, arg120, arg121, arg122, arg123, arg124, arg125, arg126, arg127, arg128, arg129, arg130, arg131, arg132, arg133, arg134, arg135, arg136, arg137, arg138, arg139, arg140, arg141, arg142, arg143, arg144, arg145, arg146, arg147, arg148, arg149, arg150, arg151, arg152, arg153, arg154, arg155, arg156, arg157, arg158, arg159, arg160, arg161, arg162, arg163, arg164, arg165, arg166, arg167, arg168, arg169, arg170, arg171, arg172, arg173, arg174, arg175, arg176, arg177, arg178, arg179, arg180, arg181, arg182, arg183, arg184, arg185, arg186, arg187, arg188, arg189, arg190, arg191, arg192, arg193, arg194, arg195, arg196, arg197, arg198, arg199, arg200, arg201, arg202, arg203, arg204, arg205, arg206, arg207, arg208, arg209, arg210, arg211, arg212, arg213, arg214, arg215, arg216, arg217, arg218, arg219, arg220, arg221, arg222, arg223, arg224, arg225, arg226, arg227, arg228, arg229, arg230, arg231, arg232, arg233, arg234, arg235, arg236, arg237, arg238, arg239, arg240, arg241, arg242, arg243, arg244, arg245, arg246, arg247, arg248, arg249, arg250, arg251, arg252, arg253, arg254, arg255, arg256, arg257, arg258, arg259, arg260, arg261, arg262, arg263, arg264, arg265, arg266, arg267, arg268, arg269, arg270, arg271, arg272, arg273, arg274, arg275, arg276, arg277, arg278, arg279, arg280, arg281, arg282, arg283, arg284, arg285, arg286, arg287, arg288, arg289, arg290, arg291, arg292, arg293, arg294, arg295, arg296, arg297, arg298, arg299, arg300, arg301, arg302, arg303, arg304, arg305, arg306, arg307, arg308, arg309, arg310, arg311, arg312, arg313, arg314, arg315, arg316, arg317, arg318, arg319, arg320, arg321, arg322, arg323, arg324, arg325, arg326, arg327, arg328, arg329, arg330, arg331, arg332, arg333, arg334, arg335, arg336, arg337, arg338, arg339, arg340, arg341, arg342, arg343, arg344, arg345, arg346, arg347, arg348, arg349, arg350, arg351, arg352, arg353, arg354, arg355);
    cout<<"nb"<<endl;
    return 0;
}